{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DWH-ADF-Development"
		},
		"AzureDatabricks_development_connection_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks_development_connection'"
		},
		"OracelStageITF_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OracelStageITF'"
		},
		"OracleCStage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OracleCStage'"
		},
		"dwhdatalakedevelopment_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dwhdatalakedevelopment'"
		},
		"sql_server_development_connection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sql_server_development_connection'"
		},
		"ADF_dev_linked_service_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://dwh-development-keyvault.vault.azure.net/"
		},
		"dwhdatalakedevelopment_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dwhdatalakedevelopment.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_6we')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_6we",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_ST.STA_COVERAGE_GROUP"
							},
							{
								"name": "Destination",
								"value": "test//sta_coverage_group.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_6we",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_6we",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_6we')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_6we')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_e6n')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_e6n",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_ITF.T_CROSSREFERENCE"
							},
							{
								"name": "Destination",
								"value": "test//perben3.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_e6n",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_e6n",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_e6n')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_e6n')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_sm5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_sm5",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_sm5",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "test//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_sm5",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_sm5",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "CSTAGE_PARIS",
									"table": "CPATABLE"
								},
								"destination": {
									"fileName": "CSTAGE_PARISCPATABLE.parquet"
								}
							},
							{
								"source": {
									"schema": "STAGE_ITF",
									"table": "P_CPATABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_CPATABLE.parquet"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_sm5')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_sm5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_xmp')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_xmp",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_xmp",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "STAGE_ITF.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "test//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_xmp",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_xmp",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "G_EMPLOYEE"
								},
								"destination": {
									"fileName": "STAGE_ITF.G_EMPLOYEE.txt"
								}
							},
							{
								"source": {
									"table": "G_INCIDENT"
								},
								"destination": {
									"fileName": "STAGE_ITF.G_INCIDENT.txt"
								}
							},
							{
								"source": {
									"table": "G_SYNDICATE"
								},
								"destination": {
									"fileName": "STAGE_ITF.G_SYNDICATE.txt"
								}
							},
							{
								"source": {
									"table": "P_LCATABLE"
								},
								"destination": {
									"fileName": "STAGE_ITF.P_LCATABLE.txt"
								}
							},
							{
								"source": {
									"table": "P_SIGTABLE"
								},
								"destination": {
									"fileName": "STAGE_ITF.P_SIGTABLE.txt"
								}
							},
							{
								"source": {
									"table": "T_CROSSREFERENCE"
								},
								"destination": {
									"fileName": "STAGE_ITF.T_CROSSREFERENCE.txt"
								}
							}
						]
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_xmp')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_xmp')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_zra')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_zra",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_ITF.T_CROSSREFERENCE"
							},
							{
								"name": "Destination",
								"value": "test//STAGE_ITFT_CROSSREFERENCE.txt"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_zra",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_zra",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_zra')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_zra')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyTCrossToParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy T cross refrence",
				"activities": [
					{
						"name": "Copy_TCrossRef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_ITF.T_CROSSREFERENCE"
							},
							{
								"name": "Destination",
								"value": "test//T_CROSSREFERENCE"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HSourceDatasetTCrossRef",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "HDestinationDatasetParquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HSourceDatasetTCrossRef')]",
				"[concat(variables('factoryId'), '/datasets/HDestinationDatasetParquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy claim team tables paris')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_lnm",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_lnm",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "STAGE_ITF.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "test//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_lnm",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_lnm",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "P_LCATABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_LCATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "P_SIGTABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_SIGTABLE.parquet"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_lnm')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_lnm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy t cross')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_yef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_ITF.T_CROSSREFERENCE"
							},
							{
								"name": "Destination",
								"value": "test//mapsys1.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_yef",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_yef",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_yef')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_yef')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_paris_peatable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_peatable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "CSTAGE_PARIS.PEATABLE"
							},
							{
								"name": "Destination",
								"value": "test//peatable.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Sourcepeatable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "peatable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Sourcepeatable')]",
				"[concat(variables('factoryId'), '/datasets/peatable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OracleTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Parquet2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OracleTable1')]",
				"[concat(variables('factoryId'), '/datasets/Parquet2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "m_pre_dim_claim_team_pi",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"emp": {},
									"inc": {},
									"syn": {},
									"tcross": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/m_pre_dim_claim_team_pi')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyPipeline_6we",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyPipeline_6we",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "copy t cross",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyPipeline_6we",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy t cross",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "copy claim team tables paris",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy t cross",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy claim team tables paris",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "array",
						"defaultValue": [
							{
								"source": {
									"table": "P_LCATABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_LCATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "P_SIGTABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_SIGTABLE.parquet"
								}
							}
						]
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_6we')]",
				"[concat(variables('factoryId'), '/pipelines/copy t cross')]",
				"[concat(variables('factoryId'), '/pipelines/copy claim team tables paris')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tcross')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_kbz",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_ITF.T_CROSSREFERENCE"
							},
							{
								"name": "Destination",
								"value": "test//perben_tcross.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_kbz",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_kbz",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_kbz')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_kbz')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSTAGEPARIS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "array"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "CSTAGE_PARIS",
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSTAGEPARISTABLES')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": "PERBEN_TEST2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_6we')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sta_coverage_group.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_e6n')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "perben3.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_fa7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_kbz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "perben_tcross.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_lnm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_sm5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_xmp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_yef')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "mapsys1.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_zra')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITFT_CROSSREFERENCE.txt",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDestinationDatasetParquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "T_CROSSREFERENCE",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SOURCE_CODE_KEY",
						"type": "UTF8"
					},
					{
						"name": "SOURCE_SYSTEM",
						"type": "UTF8"
					},
					{
						"name": "TARGET_CODE",
						"type": "UTF8"
					},
					{
						"name": "TARGET_DESCRIPTION",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE_ID",
						"type": "DOUBLE"
					},
					{
						"name": "CODE2",
						"type": "UTF8"
					},
					{
						"name": "OM_X_REF",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HSourceDatasetTCrossRef')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": "T_CROSSREFERENCE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "CSTAGE_PARIS",
					"table": "PEATABLE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PRE_DIM_CLAIM_TEAM')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITF.G_EMPLOYEE.txt",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "EMP_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOGIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "FULL_NAME",
						"type": "UTF8"
					},
					{
						"name": "EMP_TYPE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "GROUP_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "DEPT_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOC_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SYND_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "DISABLED_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOGGING_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "UNDERWRITER_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CLAIMS_ADJUSTER_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "REMINDER_RESP_IND",
						"type": "UTF8"
					},
					{
						"name": "PASSWORD_DATE",
						"type": "INT96"
					},
					{
						"name": "CREATED_BY",
						"type": "UTF8"
					},
					{
						"name": "CREATED_WHEN",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "UPDATED_WHEN",
						"type": "INT96"
					},
					{
						"name": "PERSONAL_CLAIMS_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "NEW_LOGIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "E_MAIL",
						"type": "UTF8"
					},
					{
						"name": "PROMAN_EKEY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "JOBNAME",
						"type": "UTF8"
					},
					{
						"name": "UNDERWRITER_ASSISTANT_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "OLD_LOGIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "AUTHORIZED_PAYMENT_LEVEL_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet11')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITFP_LCATABLE.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LCALCAID",
						"type": "UTF8"
					},
					{
						"name": "LCAICAID",
						"type": "UTF8"
					},
					{
						"name": "LCACLMN3",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMDATE",
						"type": "INT96"
					},
					{
						"name": "LCACYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATRTMCO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAACSTAT",
						"type": "UTF8"
					},
					{
						"name": "LCALOSSCO",
						"type": "UTF8"
					},
					{
						"name": "LCAOUTSTM",
						"type": "UTF8"
					},
					{
						"name": "LCAUWSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAOFFICE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALDESCR",
						"type": "UTF8"
					},
					{
						"name": "LCACLODATE",
						"type": "INT96"
					},
					{
						"name": "LCACEFOCC",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOCM",
						"type": "UTF8"
					},
					{
						"name": "LCACLMCAC",
						"type": "UTF8"
					},
					{
						"name": "LCAECAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCACLINTC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCABONYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAIMPEXP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCANMCLEF",
						"type": "UTF8"
					},
					{
						"name": "LCACCOD2",
						"type": "UTF8"
					},
					{
						"name": "LCAAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOUC",
						"type": "UTF8"
					},
					{
						"name": "LCAONOFFS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAENINTRST",
						"type": "UTF8"
					},
					{
						"name": "LCAENASSSHR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMPLCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAMPLAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAXLMREF",
						"type": "UTF8"
					},
					{
						"name": "LCAREPDATE",
						"type": "INT96"
					},
					{
						"name": "LCALIMCURR",
						"type": "UTF8"
					},
					{
						"name": "LCALIMAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIGEVENT",
						"type": "UTF8"
					},
					{
						"name": "LCALODESCR",
						"type": "UTF8"
					},
					{
						"name": "LCAINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCALTDATE",
						"type": "INT96"
					},
					{
						"name": "LCACRSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACRDATE",
						"type": "INT96"
					},
					{
						"name": "LCALUSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCALUDATE",
						"type": "INT96"
					},
					{
						"name": "LCAKNVMARK",
						"type": "UTF8"
					},
					{
						"name": "LCALABID",
						"type": "UTF8"
					},
					{
						"name": "LCAAGAID",
						"type": "UTF8"
					},
					{
						"name": "LCAOBNO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACROBBID",
						"type": "UTF8"
					},
					{
						"name": "LCAWRKCLAIM",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAFPAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCATOAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCAJURISDICTION",
						"type": "UTF8"
					},
					{
						"name": "LCAFILEREF",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANEXTSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAAREADESCR",
						"type": "UTF8"
					},
					{
						"name": "LCALRGCLMYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAFROMAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCANEXTDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWORKPLACE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOFFDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWRKPLCCOD",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGNDATE",
						"type": "INT96"
					},
					{
						"name": "LCAOCCOFFYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGRESS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMPEAID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOWNYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGNSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAMUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAREGAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALIMDAYS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGTEXT70",
						"type": "UTF8"
					},
					{
						"name": "LCAEUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOFFGRP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAEUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIRTNO",
						"type": "UTF8"
					},
					{
						"name": "DATE_INSERTED",
						"type": "INT96"
					},
					{
						"name": "DATE_LAST_UPDATED",
						"type": "INT96"
					},
					{
						"name": "INSERTED_BY",
						"type": "UTF8"
					},
					{
						"name": "LAST_UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "MAP_DATE",
						"type": "INT96"
					},
					{
						"name": "LCAADJSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACLMID",
						"type": "UTF8"
					},
					{
						"name": "LCALOADATE",
						"type": "INT96"
					},
					{
						"name": "LCAEXTCLMID",
						"type": "UTF8"
					},
					{
						"name": "LCATLOTYPE",
						"type": "DOUBLE"
					},
					{
						"name": "LCACATEGORYTYPE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVCCVID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVREMDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVACHCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVPOTCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet12')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITFP_SIGTABLE.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SIGSIGN",
						"type": "UTF8"
					},
					{
						"name": "SIGMDESCR",
						"type": "UTF8"
					},
					{
						"name": "SIGLDESCR",
						"type": "UTF8"
					},
					{
						"name": "SIGCPHONE",
						"type": "UTF8"
					},
					{
						"name": "SIGCFAX",
						"type": "UTF8"
					},
					{
						"name": "SIGCMAIL",
						"type": "UTF8"
					},
					{
						"name": "SIGPEAID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGMAINSIGN",
						"type": "UTF8"
					},
					{
						"name": "SIGHIERARC",
						"type": "UTF8"
					},
					{
						"name": "SIGORGPLACE",
						"type": "UTF8"
					},
					{
						"name": "SIGFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGBPRTPL",
						"type": "UTF8"
					},
					{
						"name": "SIGCOMP2",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGDEFCCODE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGDEFAGTYPE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGDEFOBRT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGOFFICE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGBUSNDIV",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGBUSNSEC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGBUSNCLA",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGBUSNTYP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGLANG2",
						"type": "UTF8"
					},
					{
						"name": "SIGIYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGCURR",
						"type": "UTF8"
					},
					{
						"name": "SIGPWDATE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGSQLSEQ",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGGENSEC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGMAISEC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGPERSSECUR",
						"type": "UTF8"
					},
					{
						"name": "SIGCREATEFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGCLOSEFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGCLAIMFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGELREMITFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGPLTRANSFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGLOCDEFTAB",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGLOCSWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGCREATESWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGPREMSWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGCLMDEFUPDATE",
						"type": "UTF8"
					},
					{
						"name": "SIGCLMSWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGACCOACCG",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGACCOSREF",
						"type": "UTF8"
					},
					{
						"name": "SIGACCOSUBREF",
						"type": "UTF8"
					},
					{
						"name": "SIGACCOSWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGPOLPRLABEL",
						"type": "UTF8"
					},
					{
						"name": "SIGLETTERPRLABEL",
						"type": "UTF8"
					},
					{
						"name": "SIGNOTEPRLABEL",
						"type": "UTF8"
					},
					{
						"name": "SIGMISCPRLABEL",
						"type": "UTF8"
					},
					{
						"name": "SIGSTOPUSE",
						"type": "UTF8"
					},
					{
						"name": "SIGNAMEID",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILEDOMAIN",
						"type": "UTF8"
					},
					{
						"name": "SIGAACYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGACCYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILEPLACE",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILELIBRARY",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILEPASSWORD",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILEUSERID",
						"type": "UTF8"
					},
					{
						"name": "SIGACLYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGAUWYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGUWAYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGCLMYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGFRYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGSPECIALVERSION",
						"type": "UTF8"
					},
					{
						"name": "SIGTOYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGINTSELECTION",
						"type": "UTF8"
					},
					{
						"name": "SIGDEBUGMACRO",
						"type": "UTF8"
					},
					{
						"name": "SIGINTAIE",
						"type": "UTF8"
					},
					{
						"name": "SIGDEBUGIDENTIFY",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet13')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "mapsys1.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SOURCE_CODE_KEY",
						"type": "UTF8"
					},
					{
						"name": "SOURCE_SYSTEM",
						"type": "UTF8"
					},
					{
						"name": "TARGET_CODE",
						"type": "UTF8"
					},
					{
						"name": "TARGET_DESCRIPTION",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE_ID",
						"type": "DOUBLE"
					},
					{
						"name": "CODE2",
						"type": "UTF8"
					},
					{
						"name": "OM_X_REF",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITF.G_EMPLOYEE.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "EMP_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOGIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "FULL_NAME",
						"type": "UTF8"
					},
					{
						"name": "EMP_TYPE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "GROUP_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "DEPT_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOC_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SYND_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "DISABLED_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOGGING_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "UNDERWRITER_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CLAIMS_ADJUSTER_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "REMINDER_RESP_IND",
						"type": "UTF8"
					},
					{
						"name": "PASSWORD_DATE",
						"type": "INT96"
					},
					{
						"name": "CREATED_BY",
						"type": "UTF8"
					},
					{
						"name": "CREATED_WHEN",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "UPDATED_WHEN",
						"type": "INT96"
					},
					{
						"name": "PERSONAL_CLAIMS_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "NEW_LOGIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "E_MAIL",
						"type": "UTF8"
					},
					{
						"name": "PROMAN_EKEY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "JOBNAME",
						"type": "UTF8"
					},
					{
						"name": "UNDERWRITER_ASSISTANT_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "OLD_LOGIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "AUTHORIZED_PAYMENT_LEVEL_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITF.G_EMPLOYEE.txt",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "EMP_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOGIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "FULL_NAME",
						"type": "UTF8"
					},
					{
						"name": "EMP_TYPE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "GROUP_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "DEPT_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOC_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SYND_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "DISABLED_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LOGGING_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "UNDERWRITER_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CLAIMS_ADJUSTER_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "REMINDER_RESP_IND",
						"type": "UTF8"
					},
					{
						"name": "PASSWORD_DATE",
						"type": "INT96"
					},
					{
						"name": "CREATED_BY",
						"type": "UTF8"
					},
					{
						"name": "CREATED_WHEN",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "UPDATED_WHEN",
						"type": "INT96"
					},
					{
						"name": "PERSONAL_CLAIMS_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "NEW_LOGIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "E_MAIL",
						"type": "UTF8"
					},
					{
						"name": "PROMAN_EKEY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "JOBNAME",
						"type": "UTF8"
					},
					{
						"name": "UNDERWRITER_ASSISTANT_IND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "OLD_LOGIN_NAME",
						"type": "UTF8"
					},
					{
						"name": "AUTHORIZED_PAYMENT_LEVEL_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITF.G_INCIDENT.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "INCIDENT_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "UNIQUE_ENTRY_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "INCIDENT_FILE_NUMBER",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CLAIM_TYPE_ID_MAIN_CLAIM_TYPE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "EMPLOYEE_ID_MAIN_ADJUSTER",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "MEMBERS_REFERENCE",
						"type": "UTF8"
					},
					{
						"name": "ARCHIVE_NUMBER",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "ARCHIVE_DATE",
						"type": "INT96"
					},
					{
						"name": "OLD_ARCHIVE_NUMBER",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "OLD_ARCHIVE_DATE",
						"type": "INT96"
					},
					{
						"name": "GEOGRAPHICAL_AREA_ID_PLACE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "GEOGRAPHICAL_AREA_ID_VOY_FROM",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "GEOGRAPHICAL_AREA_ID_VOY_TO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "DATE_OF_INCIDENT",
						"type": "INT96"
					},
					{
						"name": "MONTH_OR_PERIOD_OF_INCIDENT",
						"type": "UTF8"
					},
					{
						"name": "CASUALTY_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "MAIN_CAUSE_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "GEOGRAPHICAL_AREA_ID_MAIN_JUR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "CURRENCY_ID_MAIN_CURRENCY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "INCIDENT_TEXT",
						"type": "UTF8"
					},
					{
						"name": "EMPLOYEE_ID_REGISTERED_BY",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "REGISTERED_DATE",
						"type": "INT96"
					},
					{
						"name": "LAST_REVIEWED_DATE",
						"type": "INT96"
					},
					{
						"name": "LARGE_CLAIMS_GROUP_INDICATOR",
						"type": "UTF8"
					},
					{
						"name": "TOTAL_CURRENT_RESERVE_USD",
						"type": "DOUBLE"
					},
					{
						"name": "TOTAL_CURRENT_COMP_USD",
						"type": "DOUBLE"
					},
					{
						"name": "CREATED_BY",
						"type": "UTF8"
					},
					{
						"name": "CREATED_WHEN",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "UPDATED_WHEN",
						"type": "INT96"
					},
					{
						"name": "TIMESTAMP_",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "OFFICE_ROLE_ID_REFUND",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "REFUND_PERCENT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "REFUND_MAPPER_NUMBER",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "PHYSICAL_FILE_CREATED",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "GEOGRAPHICAL_AREA_ID_1ST_PORT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "TIMEBAR",
						"type": "INT96"
					},
					{
						"name": "DEALT_WITH",
						"type": "UTF8"
					},
					{
						"name": "OM_CLAIM_TYPE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "COMPLEXITY_ID",
						"type": "DOUBLE"
					},
					{
						"name": "NO_ICR_REMINDER_DATE",
						"type": "INT96"
					},
					{
						"name": "EVENT_ID",
						"type": "DOUBLE"
					},
					{
						"name": "EVENT_DETAIL_ID",
						"type": "DOUBLE"
					},
					{
						"name": "MAIN_CLAIM_DETAIL_ID",
						"type": "DOUBLE"
					},
					{
						"name": "MYGARD_CLAIM_ID",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITF.G_SYNDICATE.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SYND_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SYND_NAME",
						"type": "UTF8"
					},
					{
						"name": "CREATED_BY",
						"type": "UTF8"
					},
					{
						"name": "CREATED_WHEN",
						"type": "INT96"
					},
					{
						"name": "UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "UPDATED_WHEN",
						"type": "INT96"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "T_CROSSREFERENCE",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SOURCE_CODE_KEY",
						"type": "UTF8"
					},
					{
						"name": "SOURCE_SYSTEM",
						"type": "UTF8"
					},
					{
						"name": "TARGET_CODE",
						"type": "UTF8"
					},
					{
						"name": "TARGET_DESCRIPTION",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE_ID",
						"type": "DOUBLE"
					},
					{
						"name": "CODE2",
						"type": "UTF8"
					},
					{
						"name": "OM_X_REF",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SOURCE_CODE_KEY",
						"type": "UTF8"
					},
					{
						"name": "SOURCE_SYSTEM",
						"type": "UTF8"
					},
					{
						"name": "TARGET_CODE",
						"type": "UTF8"
					},
					{
						"name": "TARGET_DESCRIPTION",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE_ID",
						"type": "DOUBLE"
					},
					{
						"name": "CODE2",
						"type": "UTF8"
					},
					{
						"name": "OM_X_REF",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_6we')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ST",
					"table": "STA_COVERAGE_GROUP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_e6n')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": "T_CROSSREFERENCE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_fa7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_kbz')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": "T_CROSSREFERENCE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_lnm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_rg9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_sm5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_xmp')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_yef')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": "T_CROSSREFERENCE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_zra')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": "T_CROSSREFERENCE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sourcepeatable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleCStage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "CSTAGE_PARIS",
					"table": "PEATABLE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracleCStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/lcatable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITFP_LCATABLE.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LCALCAID",
						"type": "UTF8"
					},
					{
						"name": "LCAICAID",
						"type": "UTF8"
					},
					{
						"name": "LCACLMN3",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMDATE",
						"type": "INT96"
					},
					{
						"name": "LCACYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATRTMCO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAACSTAT",
						"type": "UTF8"
					},
					{
						"name": "LCALOSSCO",
						"type": "UTF8"
					},
					{
						"name": "LCAOUTSTM",
						"type": "UTF8"
					},
					{
						"name": "LCAUWSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAOFFICE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALDESCR",
						"type": "UTF8"
					},
					{
						"name": "LCACLODATE",
						"type": "INT96"
					},
					{
						"name": "LCACEFOCC",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOCM",
						"type": "UTF8"
					},
					{
						"name": "LCACLMCAC",
						"type": "UTF8"
					},
					{
						"name": "LCAECAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCACLINTC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCABONYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAIMPEXP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCANMCLEF",
						"type": "UTF8"
					},
					{
						"name": "LCACCOD2",
						"type": "UTF8"
					},
					{
						"name": "LCAAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOUC",
						"type": "UTF8"
					},
					{
						"name": "LCAONOFFS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAENINTRST",
						"type": "UTF8"
					},
					{
						"name": "LCAENASSSHR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMPLCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAMPLAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAXLMREF",
						"type": "UTF8"
					},
					{
						"name": "LCAREPDATE",
						"type": "INT96"
					},
					{
						"name": "LCALIMCURR",
						"type": "UTF8"
					},
					{
						"name": "LCALIMAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIGEVENT",
						"type": "UTF8"
					},
					{
						"name": "LCALODESCR",
						"type": "UTF8"
					},
					{
						"name": "LCAINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCALTDATE",
						"type": "INT96"
					},
					{
						"name": "LCACRSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACRDATE",
						"type": "INT96"
					},
					{
						"name": "LCALUSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCALUDATE",
						"type": "INT96"
					},
					{
						"name": "LCAKNVMARK",
						"type": "UTF8"
					},
					{
						"name": "LCALABID",
						"type": "UTF8"
					},
					{
						"name": "LCAAGAID",
						"type": "UTF8"
					},
					{
						"name": "LCAOBNO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACROBBID",
						"type": "UTF8"
					},
					{
						"name": "LCAWRKCLAIM",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAFPAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCATOAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCAJURISDICTION",
						"type": "UTF8"
					},
					{
						"name": "LCAFILEREF",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANEXTSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAAREADESCR",
						"type": "UTF8"
					},
					{
						"name": "LCALRGCLMYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAFROMAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCANEXTDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWORKPLACE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOFFDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWRKPLCCOD",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGNDATE",
						"type": "INT96"
					},
					{
						"name": "LCAOCCOFFYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGRESS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMPEAID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOWNYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGNSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAMUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAREGAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALIMDAYS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGTEXT70",
						"type": "UTF8"
					},
					{
						"name": "LCAEUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOFFGRP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAEUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIRTNO",
						"type": "UTF8"
					},
					{
						"name": "DATE_INSERTED",
						"type": "INT96"
					},
					{
						"name": "DATE_LAST_UPDATED",
						"type": "INT96"
					},
					{
						"name": "INSERTED_BY",
						"type": "UTF8"
					},
					{
						"name": "LAST_UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "MAP_DATE",
						"type": "INT96"
					},
					{
						"name": "LCAADJSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACLMID",
						"type": "UTF8"
					},
					{
						"name": "LCALOADATE",
						"type": "INT96"
					},
					{
						"name": "LCAEXTCLMID",
						"type": "UTF8"
					},
					{
						"name": "LCATLOTYPE",
						"type": "DOUBLE"
					},
					{
						"name": "LCACATEGORYTYPE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVCCVID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVREMDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVACHCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVPOTCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/peatable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "peatable.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/perbentaerget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pre_dim_claim_team_me')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LCALCAID",
						"type": "UTF8"
					},
					{
						"name": "LCAICAID",
						"type": "UTF8"
					},
					{
						"name": "LCACLMN3",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMDATE",
						"type": "INT96"
					},
					{
						"name": "LCACYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATRTMCO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAACSTAT",
						"type": "UTF8"
					},
					{
						"name": "LCALOSSCO",
						"type": "UTF8"
					},
					{
						"name": "LCAOUTSTM",
						"type": "UTF8"
					},
					{
						"name": "LCAUWSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAOFFICE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALDESCR",
						"type": "UTF8"
					},
					{
						"name": "LCACLODATE",
						"type": "INT96"
					},
					{
						"name": "LCACEFOCC",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOCM",
						"type": "UTF8"
					},
					{
						"name": "LCACLMCAC",
						"type": "UTF8"
					},
					{
						"name": "LCAECAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCACLINTC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCABONYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAIMPEXP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCANMCLEF",
						"type": "UTF8"
					},
					{
						"name": "LCACCOD2",
						"type": "UTF8"
					},
					{
						"name": "LCAAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOUC",
						"type": "UTF8"
					},
					{
						"name": "LCAONOFFS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAENINTRST",
						"type": "UTF8"
					},
					{
						"name": "LCAENASSSHR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMPLCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAMPLAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAXLMREF",
						"type": "UTF8"
					},
					{
						"name": "LCAREPDATE",
						"type": "INT96"
					},
					{
						"name": "LCALIMCURR",
						"type": "UTF8"
					},
					{
						"name": "LCALIMAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIGEVENT",
						"type": "UTF8"
					},
					{
						"name": "LCALODESCR",
						"type": "UTF8"
					},
					{
						"name": "LCAINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCALTDATE",
						"type": "INT96"
					},
					{
						"name": "LCACRSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACRDATE",
						"type": "INT96"
					},
					{
						"name": "LCALUSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCALUDATE",
						"type": "INT96"
					},
					{
						"name": "LCAKNVMARK",
						"type": "UTF8"
					},
					{
						"name": "LCALABID",
						"type": "UTF8"
					},
					{
						"name": "LCAAGAID",
						"type": "UTF8"
					},
					{
						"name": "LCAOBNO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACROBBID",
						"type": "UTF8"
					},
					{
						"name": "LCAWRKCLAIM",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAFPAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCATOAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCAJURISDICTION",
						"type": "UTF8"
					},
					{
						"name": "LCAFILEREF",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANEXTSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAAREADESCR",
						"type": "UTF8"
					},
					{
						"name": "LCALRGCLMYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAFROMAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCANEXTDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWORKPLACE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOFFDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWRKPLCCOD",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGNDATE",
						"type": "INT96"
					},
					{
						"name": "LCAOCCOFFYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGRESS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMPEAID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOWNYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGNSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAMUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAREGAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALIMDAYS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGTEXT70",
						"type": "UTF8"
					},
					{
						"name": "LCAEUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOFFGRP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAEUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIRTNO",
						"type": "UTF8"
					},
					{
						"name": "DATE_INSERTED",
						"type": "INT96"
					},
					{
						"name": "DATE_LAST_UPDATED",
						"type": "INT96"
					},
					{
						"name": "INSERTED_BY",
						"type": "UTF8"
					},
					{
						"name": "LAST_UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "MAP_DATE",
						"type": "INT96"
					},
					{
						"name": "LCAADJSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACLMID",
						"type": "UTF8"
					},
					{
						"name": "LCALOADATE",
						"type": "INT96"
					},
					{
						"name": "LCAEXTCLMID",
						"type": "UTF8"
					},
					{
						"name": "LCATLOTYPE",
						"type": "DOUBLE"
					},
					{
						"name": "LCACATEGORYTYPE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVCCVID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVREMDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVACHCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVPOTCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_dev_linked_service')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('ADF_dev_linked_service_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_development_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to DataBricks Development",
				"annotations": [
					"databricks development connection"
				],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://westeurope.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_development_connection_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "5.5.x-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracelStageITF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"IR AMSSRV049"
				],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('OracelStageITF_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AMSSRV049",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AMSSRV049')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleCStage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [
					"IR AMSSRV049"
				],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('OracleCStage_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AMSSRV049",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AMSSRV049')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwhdatalakedevelopment')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ADF Development connection to dwhdatalakedevelopment",
				"annotations": [
					"datalake development connection"
				],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dwhdatalakedevelopment_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dwhdatalakedevelopment_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sql_server_development_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ADF connection to SQL server Development ",
				"annotations": [
					"sql server development connection"
				],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('sql_server_development_connection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AMSSRV049')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Integration runtime hosted on AMSSRV049",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/m_pre_dim_claim_team_me')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "perben"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet11",
								"type": "DatasetReference"
							},
							"name": "lcatable",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "Parquet12",
								"type": "DatasetReference"
							},
							"name": "sigtable",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "Parquet13",
								"type": "DatasetReference"
							},
							"name": "mapsys",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "pre_dim_claim_team_me",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "lcatable2"
						},
						{
							"name": "sigtable2"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Lookup1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "DerivedColumn3"
						}
					],
					"script": "source(output(\n\t\tLCALCAID as string,\n\t\tLCAICAID as string,\n\t\tLCACLMN3 as decimal(38,18),\n\t\tLCACLMDATE as timestamp,\n\t\tLCACYEAR as decimal(38,18),\n\t\tLCATRTMCO as decimal(38,18),\n\t\tLCAACSTAT as string,\n\t\tLCALOSSCO as string,\n\t\tLCAOUTSTM as string,\n\t\tLCAUWSIGN as string,\n\t\tLCAOFFICE as decimal(38,18),\n\t\tLCALDESCR as string,\n\t\tLCACLODATE as timestamp,\n\t\tLCACEFOCC as string,\n\t\tLCACEFOCM as string,\n\t\tLCACLMCAC as string,\n\t\tLCAECAUSECO as string,\n\t\tLCACLINTC as decimal(38,18),\n\t\tLCATCAUSECO as string,\n\t\tLCABONYNSW as string,\n\t\tLCAIMPEXP as decimal(38,18),\n\t\tLCANCAUSECO as string,\n\t\tLCANMCLEF as string,\n\t\tLCACCOD2 as string,\n\t\tLCAAREACD as string,\n\t\tLCACEFOUC as string,\n\t\tLCAONOFFS as decimal(38,18),\n\t\tLCAENINTRST as string,\n\t\tLCAENASSSHR as decimal(38,18),\n\t\tLCAMPLCURR as string,\n\t\tLCAMPLAMT as decimal(38,18),\n\t\tLCAXLMREF as string,\n\t\tLCAREPDATE as timestamp,\n\t\tLCALIMCURR as string,\n\t\tLCALIMAMT as decimal(38,18),\n\t\tLCABIGEVENT as string,\n\t\tLCALODESCR as string,\n\t\tLCAINTNOTE as string,\n\t\tLCALTDATE as timestamp,\n\t\tLCACRSIGN as string,\n\t\tLCACRDATE as timestamp,\n\t\tLCALUSIGN as string,\n\t\tLCALUDATE as timestamp,\n\t\tLCAKNVMARK as string,\n\t\tLCALABID as string,\n\t\tLCAAGAID as string,\n\t\tLCAOBNO as decimal(38,18),\n\t\tLCACROBBID as string,\n\t\tLCAWRKCLAIM as decimal(38,18),\n\t\tLCAFPAREACD as string,\n\t\tLCATOAREACD as string,\n\t\tLCAJURISDICTION as string,\n\t\tLCAFILEREF as decimal(38,18),\n\t\tLCANEXTSIGN as string,\n\t\tLCAAREADESCR as string,\n\t\tLCALRGCLMYNSW as string,\n\t\tLCAFROMAREACD as string,\n\t\tLCANEXTDATE as timestamp,\n\t\tLCAWORKPLACE as decimal(38,18),\n\t\tLCAOCCOFFDATE as timestamp,\n\t\tLCAWRKPLCCOD as decimal(38,18),\n\t\tLCAREGNDATE as timestamp,\n\t\tLCAOCCOFFYNSW as string,\n\t\tLCAREGRESS as decimal(38,18),\n\t\tLCACLMPEAID as decimal(38,18),\n\t\tLCAOCCOWNYNSW as string,\n\t\tLCAREGNSIGN as string,\n\t\tLCAMUOFFPROS as decimal(38,18),\n\t\tLCAREGCURR as string,\n\t\tLCAREGAMT as decimal(38,18),\n\t\tLCAMUOWNPROS as decimal(38,18),\n\t\tLCALIMDAYS as decimal(38,18),\n\t\tLCAREGTEXT70 as string,\n\t\tLCAEUOFFPROS as decimal(38,18),\n\t\tLCAMUOFFGRP as decimal(38,18),\n\t\tLCAEUOWNPROS as decimal(38,18),\n\t\tLCABIRTNO as string,\n\t\tDATE_INSERTED as timestamp,\n\t\tDATE_LAST_UPDATED as timestamp,\n\t\tINSERTED_BY as string,\n\t\tLAST_UPDATED_BY as string,\n\t\tMAP_DATE as timestamp,\n\t\tLCAADJSIGN as string,\n\t\tLCACLMID as string,\n\t\tLCALOADATE as timestamp,\n\t\tLCAEXTCLMID as string,\n\t\tLCATLOTYPE as double,\n\t\tLCACATEGORYTYPE as string,\n\t\tLCARECOVPOTAMT as decimal(38,18),\n\t\tLCARECOVCCVID as decimal(38,18),\n\t\tLCARECOVREMDATE as timestamp,\n\t\tLCARECOVACHCURR as string,\n\t\tLCARECOVPOTINTNOTE as string,\n\t\tLCARECOVACHYNSW as string,\n\t\tLCARECOVACHINTNOTE as string,\n\t\tLCARECOVACHDATE as timestamp,\n\t\tLCARECOVPOTCURR as string,\n\t\tLCARECOVACHSIGN as string,\n\t\tLCARECOVPOTYNSW as string,\n\t\tLCARECOVACHAMT as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> lcatable\nsource(output(\n\t\tSIGSIGN as string,\n\t\tSIGMDESCR as string,\n\t\tSIGLDESCR as string,\n\t\tSIGCPHONE as string,\n\t\tSIGCFAX as string,\n\t\tSIGCMAIL as string,\n\t\tSIGPEAID as decimal(38,18),\n\t\tSIGMAINSIGN as string,\n\t\tSIGHIERARC as string,\n\t\tSIGORGPLACE as string,\n\t\tSIGFUNC as string,\n\t\tSIGBPRTPL as string,\n\t\tSIGCOMP2 as decimal(38,18),\n\t\tSIGDEFCCODE as decimal(38,18),\n\t\tSIGDEFAGTYPE as decimal(38,18),\n\t\tSIGDEFOBRT as decimal(38,18),\n\t\tSIGOFFICE as decimal(38,18),\n\t\tSIGBUSNDIV as decimal(38,18),\n\t\tSIGBUSNSEC as decimal(38,18),\n\t\tSIGBUSNCLA as decimal(38,18),\n\t\tSIGBUSNTYP as decimal(38,18),\n\t\tSIGLANG2 as string,\n\t\tSIGIYEAR as decimal(38,18),\n\t\tSIGCURR as string,\n\t\tSIGPWDATE as decimal(38,18),\n\t\tSIGSQLSEQ as decimal(38,18),\n\t\tSIGGENSEC as decimal(38,18),\n\t\tSIGMAISEC as decimal(38,18),\n\t\tSIGPERSSECUR as string,\n\t\tSIGCREATEFUNC as string,\n\t\tSIGCLOSEFUNC as string,\n\t\tSIGCLAIMFUNC as string,\n\t\tSIGELREMITFUNC as string,\n\t\tSIGPLTRANSFUNC as string,\n\t\tSIGLOCDEFTAB as decimal(38,18),\n\t\tSIGLOCSWITCHES as string,\n\t\tSIGCREATESWITCHES as string,\n\t\tSIGPREMSWITCHES as string,\n\t\tSIGCLMDEFUPDATE as string,\n\t\tSIGCLMSWITCHES as string,\n\t\tSIGACCOACCG as decimal(38,18),\n\t\tSIGACCOSREF as string,\n\t\tSIGACCOSUBREF as string,\n\t\tSIGACCOSWITCHES as string,\n\t\tSIGPOLPRLABEL as string,\n\t\tSIGLETTERPRLABEL as string,\n\t\tSIGNOTEPRLABEL as string,\n\t\tSIGMISCPRLABEL as string,\n\t\tSIGSTOPUSE as string,\n\t\tSIGNAMEID as string,\n\t\tSIGEFILEDOMAIN as string,\n\t\tSIGAACYNSW as string,\n\t\tSIGACCYNSW as string,\n\t\tSIGEFILEPLACE as string,\n\t\tSIGEFILELIBRARY as string,\n\t\tSIGEFILEPASSWORD as string,\n\t\tSIGEFILEUSERID as string,\n\t\tSIGACLYNSW as string,\n\t\tSIGAUWYNSW as string,\n\t\tSIGUWAYNSW as string,\n\t\tSIGCLMYNSW as string,\n\t\tSIGFRYEAR as decimal(38,18),\n\t\tSIGSPECIALVERSION as string,\n\t\tSIGTOYEAR as decimal(38,18),\n\t\tSIGINTSELECTION as string,\n\t\tSIGDEBUGMACRO as string,\n\t\tSIGINTAIE as string,\n\t\tSIGDEBUGIDENTIFY as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> sigtable\nsource(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> mapsys\nlcatable select(mapColumn(\n\t\tLCAUWSIGN\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lcatable2\nsigtable select(mapColumn(\n\t\tSIGSIGN,\n\t\tSIGOFFICE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sigtable2\nlcatable2, sigtable2 join(LCAUWSIGN == SIGSIGN,\n\tjoinType:'inner',\n\tbroadcast: 'both')~> Join1\nJoin1 select(mapColumn(\n\t\tSIGSIGN,\n\t\tSIGOFFICE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn3 aggregate(groupBy(SIGSIGN),\n\tSIGOFFICE = first(SIGOFFICE)) ~> Aggregate1\nAggregate1 derive(TEM_KEY = concat('P', toString(SIGSIGN)),\n\t\tPK_PRE_DIM_CLAIM_TEAM = concat('P', SIGSIGN),\n\t\tSOURCE_SYSTEM = 'PARIS',\n\t\tCODE_TYPE_ID = '792',\n\t\tDATE_INSERTED = toTimestamp(currentDate() )) ~> DerivedColumn1\nmapsys derive(CODE_TYPE_ID_STRING = toString(toInteger(CODE_TYPE_ID))) ~> DerivedColumn2\nDerivedColumn1, DerivedColumn2 lookup(SIGOFFICE == SOURCE_CODE_KEY\n\t&& DerivedColumn1@SOURCE_SYSTEM == mapsys@SOURCE_SYSTEM\n\t&& DerivedColumn1@CODE_TYPE_ID == CODE_TYPE_ID_STRING,\n\tmultiple: false,\n\tpickup: 'any',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'none')~> Lookup1\nLookup1 select(mapColumn(\n\t\tSIGSIGN,\n\t\tPK_PRE_DIM_CLAIM_TEAM,\n\t\tTEM_KEY = TARGET_CODE,\n\t\tTEM_DESC = TARGET_DESCRIPTION,\n\t\tDATE_INSERTED\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect1 derive(SIGOFFICE = toString(toInteger(SIGOFFICE))) ~> DerivedColumn3\nSelect2 sink(input(\n\t\tLCALCAID as string,\n\t\tLCAICAID as string,\n\t\tLCACLMN3 as decimal(38,18),\n\t\tLCACLMDATE as timestamp,\n\t\tLCACYEAR as decimal(38,18),\n\t\tLCATRTMCO as decimal(38,18),\n\t\tLCAACSTAT as string,\n\t\tLCALOSSCO as string,\n\t\tLCAOUTSTM as string,\n\t\tLCAUWSIGN as string,\n\t\tLCAOFFICE as decimal(38,18),\n\t\tLCALDESCR as string,\n\t\tLCACLODATE as timestamp,\n\t\tLCACEFOCC as string,\n\t\tLCACEFOCM as string,\n\t\tLCACLMCAC as string,\n\t\tLCAECAUSECO as string,\n\t\tLCACLINTC as decimal(38,18),\n\t\tLCATCAUSECO as string,\n\t\tLCABONYNSW as string,\n\t\tLCAIMPEXP as decimal(38,18),\n\t\tLCANCAUSECO as string,\n\t\tLCANMCLEF as string,\n\t\tLCACCOD2 as string,\n\t\tLCAAREACD as string,\n\t\tLCACEFOUC as string,\n\t\tLCAONOFFS as decimal(38,18),\n\t\tLCAENINTRST as string,\n\t\tLCAENASSSHR as decimal(38,18),\n\t\tLCAMPLCURR as string,\n\t\tLCAMPLAMT as decimal(38,18),\n\t\tLCAXLMREF as string,\n\t\tLCAREPDATE as timestamp,\n\t\tLCALIMCURR as string,\n\t\tLCALIMAMT as decimal(38,18),\n\t\tLCABIGEVENT as string,\n\t\tLCALODESCR as string,\n\t\tLCAINTNOTE as string,\n\t\tLCALTDATE as timestamp,\n\t\tLCACRSIGN as string,\n\t\tLCACRDATE as timestamp,\n\t\tLCALUSIGN as string,\n\t\tLCALUDATE as timestamp,\n\t\tLCAKNVMARK as string,\n\t\tLCALABID as string,\n\t\tLCAAGAID as string,\n\t\tLCAOBNO as decimal(38,18),\n\t\tLCACROBBID as string,\n\t\tLCAWRKCLAIM as decimal(38,18),\n\t\tLCAFPAREACD as string,\n\t\tLCATOAREACD as string,\n\t\tLCAJURISDICTION as string,\n\t\tLCAFILEREF as decimal(38,18),\n\t\tLCANEXTSIGN as string,\n\t\tLCAAREADESCR as string,\n\t\tLCALRGCLMYNSW as string,\n\t\tLCAFROMAREACD as string,\n\t\tLCANEXTDATE as timestamp,\n\t\tLCAWORKPLACE as decimal(38,18),\n\t\tLCAOCCOFFDATE as timestamp,\n\t\tLCAWRKPLCCOD as decimal(38,18),\n\t\tLCAREGNDATE as timestamp,\n\t\tLCAOCCOFFYNSW as string,\n\t\tLCAREGRESS as decimal(38,18),\n\t\tLCACLMPEAID as decimal(38,18),\n\t\tLCAOCCOWNYNSW as string,\n\t\tLCAREGNSIGN as string,\n\t\tLCAMUOFFPROS as decimal(38,18),\n\t\tLCAREGCURR as string,\n\t\tLCAREGAMT as decimal(38,18),\n\t\tLCAMUOWNPROS as decimal(38,18),\n\t\tLCALIMDAYS as decimal(38,18),\n\t\tLCAREGTEXT70 as string,\n\t\tLCAEUOFFPROS as decimal(38,18),\n\t\tLCAMUOFFGRP as decimal(38,18),\n\t\tLCAEUOWNPROS as decimal(38,18),\n\t\tLCABIRTNO as string,\n\t\tDATE_INSERTED as timestamp,\n\t\tDATE_LAST_UPDATED as timestamp,\n\t\tINSERTED_BY as string,\n\t\tLAST_UPDATED_BY as string,\n\t\tMAP_DATE as timestamp,\n\t\tLCAADJSIGN as string,\n\t\tLCACLMID as string,\n\t\tLCALOADATE as timestamp,\n\t\tLCAEXTCLMID as string,\n\t\tLCATLOTYPE as double,\n\t\tLCACATEGORYTYPE as string,\n\t\tLCARECOVPOTAMT as decimal(38,18),\n\t\tLCARECOVCCVID as decimal(38,18),\n\t\tLCARECOVREMDATE as timestamp,\n\t\tLCARECOVACHCURR as string,\n\t\tLCARECOVPOTINTNOTE as string,\n\t\tLCARECOVACHYNSW as string,\n\t\tLCARECOVACHINTNOTE as string,\n\t\tLCARECOVACHDATE as timestamp,\n\t\tLCARECOVPOTCURR as string,\n\t\tLCARECOVACHSIGN as string,\n\t\tLCARECOVPOTYNSW as string,\n\t\tLCARECOVACHAMT as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['PRE_DIM_CLAIM_TEAM_ME.PARQUET'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet11')]",
				"[concat(variables('factoryId'), '/datasets/Parquet12')]",
				"[concat(variables('factoryId'), '/datasets/Parquet13')]",
				"[concat(variables('factoryId'), '/datasets/pre_dim_claim_team_me')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/m_pre_dim_claim_team_pi')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "perben"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet3",
								"type": "DatasetReference"
							},
							"name": "emp",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "Parquet5",
								"type": "DatasetReference"
							},
							"name": "inc",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "Parquet6",
								"type": "DatasetReference"
							},
							"name": "syn",
							"typeProperties": {}
						},
						{
							"dataset": {
								"referenceName": "Parquet8",
								"type": "DatasetReference"
							},
							"name": "tcross",
							"typeProperties": {}
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "perbentaerget",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "emp1"
						},
						{
							"name": "inc1"
						},
						{
							"name": "syn1"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Join2"
						},
						{
							"name": "Join3"
						},
						{
							"name": "Select1"
						},
						{
							"name": "dedup"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "DerivedColumn3"
						},
						{
							"name": "DerivedColumn4"
						}
					],
					"script": "source(output(\n\t\tEMP_ID as decimal(38,18),\n\t\tLOGIN_NAME as string,\n\t\tFULL_NAME as string,\n\t\tEMP_TYPE_ID as decimal(38,18),\n\t\tGROUP_ID as decimal(38,18),\n\t\tDEPT_ID as decimal(38,18),\n\t\tLOC_ID as decimal(38,18),\n\t\tSYND_ID as decimal(38,18),\n\t\tDISABLED_IND as decimal(38,18),\n\t\tLOGGING_IND as decimal(38,18),\n\t\tUNDERWRITER_IND as decimal(38,18),\n\t\tCLAIMS_ADJUSTER_IND as decimal(38,18),\n\t\tREMINDER_RESP_IND as string,\n\t\tPASSWORD_DATE as timestamp,\n\t\tCREATED_BY as string,\n\t\tCREATED_WHEN as timestamp,\n\t\tUPDATED_BY as string,\n\t\tUPDATED_WHEN as timestamp,\n\t\tPERSONAL_CLAIMS_IND as decimal(38,18),\n\t\tNEW_LOGIN_NAME as string,\n\t\tE_MAIL as string,\n\t\tPROMAN_EKEY as decimal(38,18),\n\t\tJOBNAME as string,\n\t\tUNDERWRITER_ASSISTANT_IND as decimal(38,18),\n\t\tOLD_LOGIN_NAME as string,\n\t\tAUTHORIZED_PAYMENT_LEVEL_ID as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> emp\nsource(output(\n\t\tINCIDENT_ID as decimal(38,18),\n\t\tUNIQUE_ENTRY_ID as decimal(38,18),\n\t\tINCIDENT_FILE_NUMBER as decimal(38,18),\n\t\tCLAIM_TYPE_ID_MAIN_CLAIM_TYPE as decimal(38,18),\n\t\tEMPLOYEE_ID_MAIN_ADJUSTER as decimal(38,18),\n\t\tMEMBERS_REFERENCE as string,\n\t\tARCHIVE_NUMBER as decimal(38,18),\n\t\tARCHIVE_DATE as timestamp,\n\t\tOLD_ARCHIVE_NUMBER as decimal(38,18),\n\t\tOLD_ARCHIVE_DATE as timestamp,\n\t\tGEOGRAPHICAL_AREA_ID_PLACE as decimal(38,18),\n\t\tGEOGRAPHICAL_AREA_ID_VOY_FROM as decimal(38,18),\n\t\tGEOGRAPHICAL_AREA_ID_VOY_TO as decimal(38,18),\n\t\tDATE_OF_INCIDENT as timestamp,\n\t\tMONTH_OR_PERIOD_OF_INCIDENT as string,\n\t\tCASUALTY_ID as decimal(38,18),\n\t\tMAIN_CAUSE_ID as decimal(38,18),\n\t\tGEOGRAPHICAL_AREA_ID_MAIN_JUR as decimal(38,18),\n\t\tCURRENCY_ID_MAIN_CURRENCY as decimal(38,18),\n\t\tINCIDENT_TEXT as string,\n\t\tEMPLOYEE_ID_REGISTERED_BY as decimal(38,18),\n\t\tREGISTERED_DATE as timestamp,\n\t\tLAST_REVIEWED_DATE as timestamp,\n\t\tLARGE_CLAIMS_GROUP_INDICATOR as string,\n\t\tTOTAL_CURRENT_RESERVE_USD as double,\n\t\tTOTAL_CURRENT_COMP_USD as double,\n\t\tCREATED_BY as string,\n\t\tCREATED_WHEN as timestamp,\n\t\tUPDATED_BY as string,\n\t\tUPDATED_WHEN as timestamp,\n\t\tTIMESTAMP_ as decimal(38,18),\n\t\tOFFICE_ROLE_ID_REFUND as decimal(38,18),\n\t\tREFUND_PERCENT as decimal(38,18),\n\t\tREFUND_MAPPER_NUMBER as decimal(38,18),\n\t\tPHYSICAL_FILE_CREATED as decimal(38,18),\n\t\tGEOGRAPHICAL_AREA_ID_1ST_PORT as decimal(38,18),\n\t\tTIMEBAR as timestamp,\n\t\tDEALT_WITH as string,\n\t\tOM_CLAIM_TYPE as decimal(38,18),\n\t\tCOMPLEXITY_ID as double,\n\t\tNO_ICR_REMINDER_DATE as timestamp,\n\t\tEVENT_ID as double,\n\t\tEVENT_DETAIL_ID as double,\n\t\tMAIN_CLAIM_DETAIL_ID as double,\n\t\tMYGARD_CLAIM_ID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> inc\nsource(output(\n\t\tSYND_ID as decimal(38,18),\n\t\tSYND_NAME as string,\n\t\tCREATED_BY as string,\n\t\tCREATED_WHEN as timestamp,\n\t\tUPDATED_BY as string,\n\t\tUPDATED_WHEN as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> syn\nsource(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> tcross\ntcross filter(SOURCE_SYSTEM == 'GIC' && CODE_TYPE_ID ==792) ~> Filter1\nemp select(mapColumn(\n\t\tEMP_ID,\n\t\tSYND_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> emp1\nDerivedColumn3 select(mapColumn(\n\t\tEMPLOYEE_ID_MAIN_ADJUSTER\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> inc1\nDerivedColumn4 select(mapColumn(\n\t\tSYND_ID,\n\t\tSYND_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> syn1\nDerivedColumn2, inc1 join(EMP_ID == EMPLOYEE_ID_MAIN_ADJUSTER,\n\tjoinType:'inner',\n\tbroadcast: 'both')~> Join1\nJoin1, syn1 join(DerivedColumn2@SYND_ID == syn1@SYND_ID,\n\tjoinType:'inner',\n\tpartitionBy('roundRobin', 2),\n\tbroadcast: 'both')~> Join2\nJoin2, Filter1 join(toString(syn1@SYND_ID) == SOURCE_CODE_KEY,\n\tjoinType:'left',\n\tbroadcast: 'both')~> Join3\nJoin3 select(mapColumn(\n\t\tEMP_ID,\n\t\tSYND_ID = syn1@SYND_ID,\n\t\tSYND_NAME,\n\t\tTARGET_CODE,\n\t\tTARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 aggregate(groupBy(TARGET_CODE,\n\t\tTARGET_DESCRIPTION,\n\t\tSYND_ID,\n\t\tEMP_ID),\n\tSYND_NAME = first(SYND_NAME)) ~> dedup\ndedup derive(TEM_KEY = case(isNull(TARGET_CODE), concat('C', toString(SYND_ID)), TARGET_CODE),\n\t\tPK_PRE_DIM_CLAIM_TEAM = concat('G', toString(EMP_ID)),\n\t\tTEM_DESCRIPTION = case(isNull(TARGET_DESCRIPTION), SYND_NAME, TARGET_DESCRIPTION),\n\t\tDATE_INSERTED = currentTimestamp(),\n\t\tDATE_LAST_UPDATED = currentTimestamp(),\n\t\tINSERTED_BY = 'M_PRE_DIM_CLAIM_TEAM',\n\t\tLAST_UPDATED_BY = 'M_PRE_DIM_CLAIM_TEAM') ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tEMP_ID,\n\t\tTEM_KEY,\n\t\tPK_PRE_DIM_CLAIM_TEAM,\n\t\tTEM_DESCRIPTION,\n\t\tDATE_INSERTED,\n\t\tDATE_LAST_UPDATED,\n\t\tINSERTED_BY,\n\t\tLAST_UPDATED_BY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nemp1 derive(EMP_ID = toInteger(EMP_ID),\n\t\tSYND_ID = toInteger(SYND_ID)) ~> DerivedColumn2\ninc derive(EMPLOYEE_ID_MAIN_ADJUSTER = toInteger(EMPLOYEE_ID_MAIN_ADJUSTER)) ~> DerivedColumn3\nsyn derive(SYND_ID = toInteger(SYND_ID)) ~> DerivedColumn4\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['M_PRE_DIM_PERBEN'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet3')]",
				"[concat(variables('factoryId'), '/datasets/Parquet5')]",
				"[concat(variables('factoryId'), '/datasets/Parquet6')]",
				"[concat(variables('factoryId'), '/datasets/Parquet8')]",
				"[concat(variables('factoryId'), '/datasets/perbentaerget')]"
			]
		}
	]
}