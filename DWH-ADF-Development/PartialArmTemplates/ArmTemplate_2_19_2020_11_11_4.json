{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DWH-ADF-Development"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyFaptable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_faptable_date",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "CSTAGE_PARIS.FAPTABLE"
							},
							{
								"name": "Destination",
								"value": "test//FAPTABLE.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OracleParisFaptableCopy",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_Lake_Faptable",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OracleParisFaptableCopy')]",
				"[concat(variables('factoryId'), '/datasets/Azure_Lake_Faptable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFaptableFilterDato')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_l0e",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "."
							},
							{
								"name": "Destination",
								"value": "test//faptableDate.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select * from cstage_paris.faptable\r\nwhere fapiyear >= 2019",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "OracleFaptableDate2019",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_lake_faptable_2019",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OracleFaptableDate2019')]",
				"[concat(variables('factoryId'), '/datasets/Azure_lake_faptable_2019')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyParis')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyParisOnPrem",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyParis",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "CSTAGE_PARIS.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "test//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "ScrParisTest",
											"type": "DatasetReference",
											"parameters": {
												"OracleParis": {
													"value": "@pipeline().parameters.cw_items",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "rawParis",
											"type": "DatasetReference",
											"parameters": {
												"ScrParis": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "ICATABLE"
								},
								"destination": {
									"fileName": "PARIS.ICATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "INATABLE"
								},
								"destination": {
									"fileName": "PARIS.INATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "INGTABLE"
								},
								"destination": {
									"fileName": "PARIS.INGTABLE.parquet"
								}
							}
						]
					}
				},
				"folder": {
					"name": "copy/raw"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ScrParisTest')]",
				"[concat(variables('factoryId'), '/datasets/rawParis')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyParisScrFromAmster')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy Paris from Amsterdam new environment to test performance",
				"activities": [
					{
						"name": "ForEach_AllParisTables",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_Oracle_Paris_All_Tables",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "CSTAGE_PARIS.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "raw/Paris/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Oracel_Paris_Amster_All_Tables",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Azure_Lake_Paris_All_Tables",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "ACOTABLE"
								},
								"destination": {
									"fileName": "ACOTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "AGATABLE"
								},
								"destination": {
									"fileName": "AGATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "AGZTABLE"
								},
								"destination": {
									"fileName": "AGZTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "CARTABLE"
								},
								"destination": {
									"fileName": "CARTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "CBSTABLE"
								},
								"destination": {
									"fileName": "CBSTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "CBTTABLE"
								},
								"destination": {
									"fileName": "CBTTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "CCOTABLE"
								},
								"destination": {
									"fileName": "CCOTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "CCVTABLE"
								},
								"destination": {
									"fileName": "CCVTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "CLPTABLE"
								},
								"destination": {
									"fileName": "CLPTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "CPATABLE"
								},
								"destination": {
									"fileName": "CPATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "CPTTABLE"
								},
								"destination": {
									"fileName": "CPTTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "CRCTABLE"
								},
								"destination": {
									"fileName": "CRCTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "ECATABLE"
								},
								"destination": {
									"fileName": "ECATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "FALTABLE"
								},
								"destination": {
									"fileName": "FALTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "FAPTABLE"
								},
								"destination": {
									"fileName": "FAPTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "FILTABLE"
								},
								"destination": {
									"fileName": "FILTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "FIPTABLE"
								},
								"destination": {
									"fileName": "FIPTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "ICATABLE"
								},
								"destination": {
									"fileName": "ICATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "ICOTABLE"
								},
								"destination": {
									"fileName": "ICOTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "IFATABLE"
								},
								"destination": {
									"fileName": "IFATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "INATABLE"
								},
								"destination": {
									"fileName": "INATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "INGTABLE"
								},
								"destination": {
									"fileName": "INGTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "IPATABLE"
								},
								"destination": {
									"fileName": "IPATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "ISATABLE"
								},
								"destination": {
									"fileName": "ISATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "ISOTABLE"
								},
								"destination": {
									"fileName": "ISOTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "ISZTABLE"
								},
								"destination": {
									"fileName": "ISZTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "IUVTABLE"
								},
								"destination": {
									"fileName": "IUVTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "IUWTABLE"
								},
								"destination": {
									"fileName": "IUWTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "LAATABLE"
								},
								"destination": {
									"fileName": "LAATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "LABTABLE"
								},
								"destination": {
									"fileName": "LABTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "LCATABLE"
								},
								"destination": {
									"fileName": "LCATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "LCFTABLE"
								},
								"destination": {
									"fileName": "LCFTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "LCRTABLE"
								},
								"destination": {
									"fileName": "LCRTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "LDATABLE"
								},
								"destination": {
									"fileName": "LDATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "LGATABLE"
								},
								"destination": {
									"fileName": "LGATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "OBATABLE"
								},
								"destination": {
									"fileName": "OBATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "OBBTABLE"
								},
								"destination": {
									"fileName": "OBBTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "PAATABLE"
								},
								"destination": {
									"fileName": "PAATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "PEATABLE"
								},
								"destination": {
									"fileName": "PEATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "PEBTABLE"
								},
								"destination": {
									"fileName": "PEBTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "PECTABLE"
								},
								"destination": {
									"fileName": "PECTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "PEVTABLE"
								},
								"destination": {
									"fileName": "PEVTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "PEZTABLE"
								},
								"destination": {
									"fileName": "PEZTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "PFSTABLE"
								},
								"destination": {
									"fileName": "PFSTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "PGQTABLE"
								},
								"destination": {
									"fileName": "PGQTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "QTBTABLE"
								},
								"destination": {
									"fileName": "QTBTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "RDATABLE"
								},
								"destination": {
									"fileName": "RDATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "RSATABLE"
								},
								"destination": {
									"fileName": "RSATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "SIGTABLE"
								},
								"destination": {
									"fileName": "SIGTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "UATTABLE"
								},
								"destination": {
									"fileName": "UATTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "UCSTABLE"
								},
								"destination": {
									"fileName": "UCSTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "UWATABLE"
								},
								"destination": {
									"fileName": "UWATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "UWBTABLE"
								},
								"destination": {
									"fileName": "UWBTABLE.parquet"
								}
							},
							{
								"source": {
									"table": "UWLTABLE"
								},
								"destination": {
									"fileName": "UWLTABLE.parquet"
								}
							}
						]
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Oracel_Paris_Amster_All_Tables')]",
				"[concat(variables('factoryId'), '/datasets/Azure_Lake_Paris_All_Tables')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_6we')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_6we",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_ST.STA_COVERAGE_GROUP"
							},
							{
								"name": "Destination",
								"value": "test//sta_coverage_group.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_6we",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_6we",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_6we')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_6we')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_e6n')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_e6n",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_ITF.T_CROSSREFERENCE"
							},
							{
								"name": "Destination",
								"value": "test//perben3.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_e6n",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_e6n",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_e6n')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_e6n')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_sm5')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_sm5",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_sm5",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "@{item().source.schema}.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "test//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_sm5",
											"type": "DatasetReference",
											"parameters": {
												"cw_schema": "@item().source.schema",
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_sm5",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"schema": "CSTAGE_PARIS",
									"table": "CPATABLE"
								},
								"destination": {
									"fileName": "CSTAGE_PARISCPATABLE.parquet"
								}
							},
							{
								"source": {
									"schema": "STAGE_ITF",
									"table": "P_CPATABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_CPATABLE.parquet"
								}
							}
						]
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_sm5')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_sm5')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyTcrossFromParquet')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "T_Crossrefrence",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "T_Crossrefrence",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/T_Crossrefrence')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RunBusinessArea')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dim_Business_Area",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dim_Business_Area",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dim_Business_Area')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test hanne')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyTCrossToParquet",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyTCrossToParquet",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy claim team tables paris')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_lnm",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_lnm",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "STAGE_ITF.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "test//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_lnm",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_lnm",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "P_LCATABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_LCATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "P_SIGTABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_SIGTABLE.parquet"
								}
							}
						]
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_lnm')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_lnm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy t cross')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_yef",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "STAGE_ITF.T_CROSSREFERENCE"
							},
							{
								"name": "Destination",
								"value": "test//mapsys1.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_yef",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_yef",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_yef')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_yef')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_paris_peatable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_peatable",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "CSTAGE_PARIS.PEATABLE"
							},
							{
								"name": "Destination",
								"value": "test//peatable.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Sourcepeatable",
								"type": "DatasetReference"
							}
						],
						"outputs": [
							{
								"referenceName": "peatable",
								"type": "DatasetReference"
							}
						]
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Sourcepeatable')]",
				"[concat(variables('factoryId'), '/datasets/peatable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyPipeline_6we",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "CopyPipeline_6we",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "copy t cross",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "CopyPipeline_6we",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy t cross",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					},
					{
						"name": "copy claim team tables paris",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy t cross",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy claim team tables paris",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "array",
						"defaultValue": [
							{
								"source": {
									"table": "P_LCATABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_LCATABLE.parquet"
								}
							},
							{
								"source": {
									"table": "P_SIGTABLE"
								},
								"destination": {
									"fileName": "STAGE_ITFP_SIGTABLE.parquet"
								}
							}
						]
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline_6we')]",
				"[concat(variables('factoryId'), '/pipelines/copy t cross')]",
				"[concat(variables('factoryId'), '/pipelines/copy claim team tables paris')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline4')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "map",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "map",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/map')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "pre_dim_claim_team"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sigsign",
						"type": "varchar"
					},
					{
						"name": "sigoffice",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "sigtablep"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "pre_dim_claim_team"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TEM_DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "TEM_KEY",
						"type": "varchar"
					},
					{
						"name": "DATE_INSERTED",
						"type": "date"
					},
					{
						"name": "SIGSIGN",
						"type": "varchar"
					},
					{
						"name": "PK_PRE_DIM_CLAIM_TEAM",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "pre_dim_claim_team"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable4')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "marts",
					"table": "dim_business_area_test"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "dimension_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ins",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "upd",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "dato"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable6')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "dimension_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ins",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "last_upd",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "dato2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable7')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "source_code_key",
						"type": "varchar"
					},
					{
						"name": "source_system",
						"type": "varchar"
					},
					{
						"name": "code_type_id",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "mapsysp"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable8')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "sigsign",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "sigtablep"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "lcauwsign",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "lcatablep"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureTCrossdwhStage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "SOURCE_CODE_KEY",
						"type": "varchar"
					},
					{
						"name": "SOURCE_SYSTEM",
						"type": "varchar"
					},
					{
						"name": "TARGET_CODE",
						"type": "varchar"
					},
					{
						"name": "TARGET_DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "CODE_TYPE",
						"type": "varchar"
					},
					{
						"name": "CODE_TYPE_ID",
						"type": "decimal",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "CODE2",
						"type": "varchar"
					},
					{
						"name": "OM_X_REF",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "T_CROSSREFERENCE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_Lake_Faptable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "FAPTABLE.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_Lake_Paris_All_Tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "Paris",
						"fileSystem": "raw"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_lake_faptable_2019')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "faptableDate.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BusinessAreaTest1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "marts",
					"table": "business_area"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_6we')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "sta_coverage_group.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_e6n')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "perben3.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_lnm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_sm5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_yef')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "mapsys1.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracel_Paris_Amster_All_Tables')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleDbParisScrAmster",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "CSTAGE_PARIS",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleFaptableDate2019')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleDbParisScrAmster",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleParisFaptableCopy')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleDbParisScrAmster",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "CSTAGE_PARIS",
					"table": "FAPTABLE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet10')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet11')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITFP_LCATABLE.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LCALCAID",
						"type": "UTF8"
					},
					{
						"name": "LCAICAID",
						"type": "UTF8"
					},
					{
						"name": "LCACLMN3",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMDATE",
						"type": "INT96"
					},
					{
						"name": "LCACYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATRTMCO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAACSTAT",
						"type": "UTF8"
					},
					{
						"name": "LCALOSSCO",
						"type": "UTF8"
					},
					{
						"name": "LCAOUTSTM",
						"type": "UTF8"
					},
					{
						"name": "LCAUWSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAOFFICE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALDESCR",
						"type": "UTF8"
					},
					{
						"name": "LCACLODATE",
						"type": "INT96"
					},
					{
						"name": "LCACEFOCC",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOCM",
						"type": "UTF8"
					},
					{
						"name": "LCACLMCAC",
						"type": "UTF8"
					},
					{
						"name": "LCAECAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCACLINTC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCABONYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAIMPEXP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCANMCLEF",
						"type": "UTF8"
					},
					{
						"name": "LCACCOD2",
						"type": "UTF8"
					},
					{
						"name": "LCAAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOUC",
						"type": "UTF8"
					},
					{
						"name": "LCAONOFFS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAENINTRST",
						"type": "UTF8"
					},
					{
						"name": "LCAENASSSHR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMPLCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAMPLAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAXLMREF",
						"type": "UTF8"
					},
					{
						"name": "LCAREPDATE",
						"type": "INT96"
					},
					{
						"name": "LCALIMCURR",
						"type": "UTF8"
					},
					{
						"name": "LCALIMAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIGEVENT",
						"type": "UTF8"
					},
					{
						"name": "LCALODESCR",
						"type": "UTF8"
					},
					{
						"name": "LCAINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCALTDATE",
						"type": "INT96"
					},
					{
						"name": "LCACRSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACRDATE",
						"type": "INT96"
					},
					{
						"name": "LCALUSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCALUDATE",
						"type": "INT96"
					},
					{
						"name": "LCAKNVMARK",
						"type": "UTF8"
					},
					{
						"name": "LCALABID",
						"type": "UTF8"
					},
					{
						"name": "LCAAGAID",
						"type": "UTF8"
					},
					{
						"name": "LCAOBNO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACROBBID",
						"type": "UTF8"
					},
					{
						"name": "LCAWRKCLAIM",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAFPAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCATOAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCAJURISDICTION",
						"type": "UTF8"
					},
					{
						"name": "LCAFILEREF",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANEXTSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAAREADESCR",
						"type": "UTF8"
					},
					{
						"name": "LCALRGCLMYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAFROMAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCANEXTDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWORKPLACE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOFFDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWRKPLCCOD",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGNDATE",
						"type": "INT96"
					},
					{
						"name": "LCAOCCOFFYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGRESS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMPEAID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOWNYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGNSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAMUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAREGAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALIMDAYS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGTEXT70",
						"type": "UTF8"
					},
					{
						"name": "LCAEUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOFFGRP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAEUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIRTNO",
						"type": "UTF8"
					},
					{
						"name": "DATE_INSERTED",
						"type": "INT96"
					},
					{
						"name": "DATE_LAST_UPDATED",
						"type": "INT96"
					},
					{
						"name": "INSERTED_BY",
						"type": "UTF8"
					},
					{
						"name": "LAST_UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "MAP_DATE",
						"type": "INT96"
					},
					{
						"name": "LCAADJSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACLMID",
						"type": "UTF8"
					},
					{
						"name": "LCALOADATE",
						"type": "INT96"
					},
					{
						"name": "LCAEXTCLMID",
						"type": "UTF8"
					},
					{
						"name": "LCATLOTYPE",
						"type": "DOUBLE"
					},
					{
						"name": "LCACATEGORYTYPE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVCCVID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVREMDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVACHCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVPOTCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet12')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITFP_SIGTABLE.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SIGSIGN",
						"type": "UTF8"
					},
					{
						"name": "SIGMDESCR",
						"type": "UTF8"
					},
					{
						"name": "SIGLDESCR",
						"type": "UTF8"
					},
					{
						"name": "SIGCPHONE",
						"type": "UTF8"
					},
					{
						"name": "SIGCFAX",
						"type": "UTF8"
					},
					{
						"name": "SIGCMAIL",
						"type": "UTF8"
					},
					{
						"name": "SIGPEAID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGMAINSIGN",
						"type": "UTF8"
					},
					{
						"name": "SIGHIERARC",
						"type": "UTF8"
					},
					{
						"name": "SIGORGPLACE",
						"type": "UTF8"
					},
					{
						"name": "SIGFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGBPRTPL",
						"type": "UTF8"
					},
					{
						"name": "SIGCOMP2",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGDEFCCODE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGDEFAGTYPE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGDEFOBRT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGOFFICE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGBUSNDIV",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGBUSNSEC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGBUSNCLA",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGBUSNTYP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGLANG2",
						"type": "UTF8"
					},
					{
						"name": "SIGIYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGCURR",
						"type": "UTF8"
					},
					{
						"name": "SIGPWDATE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGSQLSEQ",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGGENSEC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGMAISEC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGPERSSECUR",
						"type": "UTF8"
					},
					{
						"name": "SIGCREATEFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGCLOSEFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGCLAIMFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGELREMITFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGPLTRANSFUNC",
						"type": "UTF8"
					},
					{
						"name": "SIGLOCDEFTAB",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGLOCSWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGCREATESWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGPREMSWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGCLMDEFUPDATE",
						"type": "UTF8"
					},
					{
						"name": "SIGCLMSWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGACCOACCG",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGACCOSREF",
						"type": "UTF8"
					},
					{
						"name": "SIGACCOSUBREF",
						"type": "UTF8"
					},
					{
						"name": "SIGACCOSWITCHES",
						"type": "UTF8"
					},
					{
						"name": "SIGPOLPRLABEL",
						"type": "UTF8"
					},
					{
						"name": "SIGLETTERPRLABEL",
						"type": "UTF8"
					},
					{
						"name": "SIGNOTEPRLABEL",
						"type": "UTF8"
					},
					{
						"name": "SIGMISCPRLABEL",
						"type": "UTF8"
					},
					{
						"name": "SIGSTOPUSE",
						"type": "UTF8"
					},
					{
						"name": "SIGNAMEID",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILEDOMAIN",
						"type": "UTF8"
					},
					{
						"name": "SIGAACYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGACCYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILEPLACE",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILELIBRARY",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILEPASSWORD",
						"type": "UTF8"
					},
					{
						"name": "SIGEFILEUSERID",
						"type": "UTF8"
					},
					{
						"name": "SIGACLYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGAUWYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGUWAYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGCLMYNSW",
						"type": "UTF8"
					},
					{
						"name": "SIGFRYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGSPECIALVERSION",
						"type": "UTF8"
					},
					{
						"name": "SIGTOYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "SIGINTSELECTION",
						"type": "UTF8"
					},
					{
						"name": "SIGDEBUGMACRO",
						"type": "UTF8"
					},
					{
						"name": "SIGINTAIE",
						"type": "UTF8"
					},
					{
						"name": "SIGDEBUGIDENTIFY",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet13')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "mapsys1.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SOURCE_CODE_KEY",
						"type": "UTF8"
					},
					{
						"name": "SOURCE_SYSTEM",
						"type": "UTF8"
					},
					{
						"name": "TARGET_CODE",
						"type": "UTF8"
					},
					{
						"name": "TARGET_DESCRIPTION",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE_ID",
						"type": "DOUBLE"
					},
					{
						"name": "CODE2",
						"type": "UTF8"
					},
					{
						"name": "OM_X_REF",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ParquetTCROSS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "mapsys1.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "SOURCE_CODE_KEY",
						"type": "UTF8"
					},
					{
						"name": "SOURCE_SYSTEM",
						"type": "UTF8"
					},
					{
						"name": "TARGET_CODE",
						"type": "UTF8"
					},
					{
						"name": "TARGET_DESCRIPTION",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE",
						"type": "UTF8"
					},
					{
						"name": "CODE_TYPE_ID",
						"type": "DOUBLE"
					},
					{
						"name": "CODE2",
						"type": "UTF8"
					},
					{
						"name": "OM_X_REF",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ScrParisTest')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleCStage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"OracleParis": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "CSTAGE_PARIS",
					"table": {
						"value": "@dataset().OracleParis",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_6we')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ST",
					"table": "STA_COVERAGE_GROUP"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_e6n')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": "T_CROSSREFERENCE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_lnm')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_sm5')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_schema": {
						"type": "String"
					},
					"cw_table": {
						"type": "String"
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().cw_schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_yef')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": "T_CROSSREFERENCE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sourcepeatable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracleCStage",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "CSTAGE_PARIS",
					"table": "PEATABLE"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqldimBusinessArea')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "GRP_DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "GRP_KEY",
						"type": "varchar"
					},
					{
						"name": "BUA_DESCRIPTION",
						"type": "varchar"
					},
					{
						"name": "BUA_KEY",
						"type": "varchar"
					},
					{
						"name": "BUS_KEY",
						"type": "varchar"
					},
					{
						"name": "BUS_DESCRIPTION",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "business_area_test"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/lcatable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "STAGE_ITFP_LCATABLE.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LCALCAID",
						"type": "UTF8"
					},
					{
						"name": "LCAICAID",
						"type": "UTF8"
					},
					{
						"name": "LCACLMN3",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMDATE",
						"type": "INT96"
					},
					{
						"name": "LCACYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATRTMCO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAACSTAT",
						"type": "UTF8"
					},
					{
						"name": "LCALOSSCO",
						"type": "UTF8"
					},
					{
						"name": "LCAOUTSTM",
						"type": "UTF8"
					},
					{
						"name": "LCAUWSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAOFFICE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALDESCR",
						"type": "UTF8"
					},
					{
						"name": "LCACLODATE",
						"type": "INT96"
					},
					{
						"name": "LCACEFOCC",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOCM",
						"type": "UTF8"
					},
					{
						"name": "LCACLMCAC",
						"type": "UTF8"
					},
					{
						"name": "LCAECAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCACLINTC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCABONYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAIMPEXP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCANMCLEF",
						"type": "UTF8"
					},
					{
						"name": "LCACCOD2",
						"type": "UTF8"
					},
					{
						"name": "LCAAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOUC",
						"type": "UTF8"
					},
					{
						"name": "LCAONOFFS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAENINTRST",
						"type": "UTF8"
					},
					{
						"name": "LCAENASSSHR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMPLCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAMPLAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAXLMREF",
						"type": "UTF8"
					},
					{
						"name": "LCAREPDATE",
						"type": "INT96"
					},
					{
						"name": "LCALIMCURR",
						"type": "UTF8"
					},
					{
						"name": "LCALIMAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIGEVENT",
						"type": "UTF8"
					},
					{
						"name": "LCALODESCR",
						"type": "UTF8"
					},
					{
						"name": "LCAINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCALTDATE",
						"type": "INT96"
					},
					{
						"name": "LCACRSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACRDATE",
						"type": "INT96"
					},
					{
						"name": "LCALUSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCALUDATE",
						"type": "INT96"
					},
					{
						"name": "LCAKNVMARK",
						"type": "UTF8"
					},
					{
						"name": "LCALABID",
						"type": "UTF8"
					},
					{
						"name": "LCAAGAID",
						"type": "UTF8"
					},
					{
						"name": "LCAOBNO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACROBBID",
						"type": "UTF8"
					},
					{
						"name": "LCAWRKCLAIM",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAFPAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCATOAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCAJURISDICTION",
						"type": "UTF8"
					},
					{
						"name": "LCAFILEREF",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANEXTSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAAREADESCR",
						"type": "UTF8"
					},
					{
						"name": "LCALRGCLMYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAFROMAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCANEXTDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWORKPLACE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOFFDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWRKPLCCOD",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGNDATE",
						"type": "INT96"
					},
					{
						"name": "LCAOCCOFFYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGRESS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMPEAID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOWNYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGNSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAMUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAREGAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALIMDAYS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGTEXT70",
						"type": "UTF8"
					},
					{
						"name": "LCAEUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOFFGRP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAEUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIRTNO",
						"type": "UTF8"
					},
					{
						"name": "DATE_INSERTED",
						"type": "INT96"
					},
					{
						"name": "DATE_LAST_UPDATED",
						"type": "INT96"
					},
					{
						"name": "INSERTED_BY",
						"type": "UTF8"
					},
					{
						"name": "LAST_UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "MAP_DATE",
						"type": "INT96"
					},
					{
						"name": "LCAADJSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACLMID",
						"type": "UTF8"
					},
					{
						"name": "LCALOADATE",
						"type": "INT96"
					},
					{
						"name": "LCAEXTCLMID",
						"type": "UTF8"
					},
					{
						"name": "LCATLOTYPE",
						"type": "DOUBLE"
					},
					{
						"name": "LCACATEGORYTYPE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVCCVID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVREMDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVACHCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVPOTCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/peatable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "peatable.parquet",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/perbentaerget')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pre_dim_claim_team_me')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "LCALCAID",
						"type": "UTF8"
					},
					{
						"name": "LCAICAID",
						"type": "UTF8"
					},
					{
						"name": "LCACLMN3",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMDATE",
						"type": "INT96"
					},
					{
						"name": "LCACYEAR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATRTMCO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAACSTAT",
						"type": "UTF8"
					},
					{
						"name": "LCALOSSCO",
						"type": "UTF8"
					},
					{
						"name": "LCAOUTSTM",
						"type": "UTF8"
					},
					{
						"name": "LCAUWSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAOFFICE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALDESCR",
						"type": "UTF8"
					},
					{
						"name": "LCACLODATE",
						"type": "INT96"
					},
					{
						"name": "LCACEFOCC",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOCM",
						"type": "UTF8"
					},
					{
						"name": "LCACLMCAC",
						"type": "UTF8"
					},
					{
						"name": "LCAECAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCACLINTC",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCATCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCABONYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAIMPEXP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANCAUSECO",
						"type": "UTF8"
					},
					{
						"name": "LCANMCLEF",
						"type": "UTF8"
					},
					{
						"name": "LCACCOD2",
						"type": "UTF8"
					},
					{
						"name": "LCAAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCACEFOUC",
						"type": "UTF8"
					},
					{
						"name": "LCAONOFFS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAENINTRST",
						"type": "UTF8"
					},
					{
						"name": "LCAENASSSHR",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMPLCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAMPLAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAXLMREF",
						"type": "UTF8"
					},
					{
						"name": "LCAREPDATE",
						"type": "INT96"
					},
					{
						"name": "LCALIMCURR",
						"type": "UTF8"
					},
					{
						"name": "LCALIMAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIGEVENT",
						"type": "UTF8"
					},
					{
						"name": "LCALODESCR",
						"type": "UTF8"
					},
					{
						"name": "LCAINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCALTDATE",
						"type": "INT96"
					},
					{
						"name": "LCACRSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACRDATE",
						"type": "INT96"
					},
					{
						"name": "LCALUSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCALUDATE",
						"type": "INT96"
					},
					{
						"name": "LCAKNVMARK",
						"type": "UTF8"
					},
					{
						"name": "LCALABID",
						"type": "UTF8"
					},
					{
						"name": "LCAAGAID",
						"type": "UTF8"
					},
					{
						"name": "LCAOBNO",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACROBBID",
						"type": "UTF8"
					},
					{
						"name": "LCAWRKCLAIM",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAFPAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCATOAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCAJURISDICTION",
						"type": "UTF8"
					},
					{
						"name": "LCAFILEREF",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCANEXTSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAAREADESCR",
						"type": "UTF8"
					},
					{
						"name": "LCALRGCLMYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAFROMAREACD",
						"type": "UTF8"
					},
					{
						"name": "LCANEXTDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWORKPLACE",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOFFDATE",
						"type": "INT96"
					},
					{
						"name": "LCAWRKPLCCOD",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGNDATE",
						"type": "INT96"
					},
					{
						"name": "LCAOCCOFFYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGRESS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCACLMPEAID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAOCCOWNYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCAREGNSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCAMUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGCURR",
						"type": "UTF8"
					},
					{
						"name": "LCAREGAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCALIMDAYS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAREGTEXT70",
						"type": "UTF8"
					},
					{
						"name": "LCAEUOFFPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAMUOFFGRP",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCAEUOWNPROS",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCABIRTNO",
						"type": "UTF8"
					},
					{
						"name": "DATE_INSERTED",
						"type": "INT96"
					},
					{
						"name": "DATE_LAST_UPDATED",
						"type": "INT96"
					},
					{
						"name": "INSERTED_BY",
						"type": "UTF8"
					},
					{
						"name": "LAST_UPDATED_BY",
						"type": "UTF8"
					},
					{
						"name": "MAP_DATE",
						"type": "INT96"
					},
					{
						"name": "LCAADJSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCACLMID",
						"type": "UTF8"
					},
					{
						"name": "LCALOADATE",
						"type": "INT96"
					},
					{
						"name": "LCAEXTCLMID",
						"type": "UTF8"
					},
					{
						"name": "LCATLOTYPE",
						"type": "DOUBLE"
					},
					{
						"name": "LCACATEGORYTYPE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVCCVID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					},
					{
						"name": "LCARECOVREMDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVACHCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHINTNOTE",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHDATE",
						"type": "INT96"
					},
					{
						"name": "LCARECOVPOTCURR",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHSIGN",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVPOTYNSW",
						"type": "UTF8"
					},
					{
						"name": "LCARECOVACHAMT",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 18
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/rawParis')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"ScrParis": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Test"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().ScrParis",
							"type": "Expression"
						},
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "date_inserted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "date_last_updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "intint",
						"type": "int",
						"precision": 10
					},
					{
						"name": "charchar",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "perbentest"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/test2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sql_server_development_connection",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "perben"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "date_inserted",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "date_last_updated",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "intint",
						"type": "int",
						"precision": 10
					},
					{
						"name": "charchar",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dwh_stage",
					"table": "perbentest2"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ARESRV476_Arendal')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "\\\\ARESRV476\\Arendal\\",
					"userId": "audun.taraldsen@gard.no",
					"password": {
						"type": "SecureString",
						"value": "**********"
					}
				},
				"connectVia": {
					"referenceName": "AMSSRV049",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dim_Business_Area')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Test"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ParquetTCROSS",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SqldimBusinessArea",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> source1\nsource1 filter(CODE_TYPE_ID == 106.0  && TARGET_CODE !='PI') ~> Filter1\nFilter1 aggregate(groupBy(TARGET_CODE),\n\tTARGET_DESCRIPTION = first(TARGET_DESCRIPTION)) ~> Aggregate1\nAggregate1 derive(GRP_CODE = case(TARGET_CODE =='EN' || TARGET_CODE =='BU', 'EG', case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'PI', TARGET_CODE)),\n\t\tGRP_DESCRIPTION = case(TARGET_CODE =='EN' || TARGET_CODE =='BU', 'Energy+', case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'P&I', TARGET_CODE)),\n\t\tBUA_DESCRIPTION = case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'P&I', TARGET_CODE),\n\t\tBUA_CODE = case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'PI', TARGET_CODE)) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tBUS_KEY = TARGET_CODE,\n\t\tBUS_DESCRIPTION = TARGET_DESCRIPTION,\n\t\tGRP_KEY = GRP_CODE,\n\t\tGRP_DESCRIPTION,\n\t\tBUA_DESCRIPTION,\n\t\tBUA_KEY = BUA_CODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\tGRP_DESCRIPTION as string,\n\t\tGRP_KEY as string,\n\t\tBUA_DESCRIPTION as string,\n\t\tBUA_KEY as string,\n\t\tBUS_KEY as string,\n\t\tBUS_DESCRIPTION as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sink"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParquetTCROSS')]",
				"[concat(variables('factoryId'), '/datasets/SqldimBusinessArea')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/T_Crossrefrence')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "Test"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ParquetTCROSS",
								"type": "DatasetReference"
							},
							"name": "ParquetTcross"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureTCrossdwhStage",
								"type": "DatasetReference"
							},
							"name": "TCrossRefrence"
						}
					],
					"transformations": [],
					"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> ParquetTcross\nParquetTcross sink(input(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as decimal(38,0),\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TCrossRefrence"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ParquetTCROSS')]",
				"[concat(variables('factoryId'), '/datasets/AzureTCrossdwhStage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/datetest')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "perben"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable5",
								"type": "DatasetReference"
							},
							"name": "dato"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable6",
								"type": "DatasetReference"
							},
							"name": "insert"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable6",
								"type": "DatasetReference"
							},
							"name": "update"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "AlterRow1"
						}
					],
					"script": "source(output(\n\t\tdimension_key as integer,\n\t\tins as timestamp,\n\t\tupd as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> dato\ndato split(isNull(ins)==true(),\n\tdisjoint: false) ~> ConditionalSplit1@(null, notnull)\nConditionalSplit1@null derive(ins = currentTimestamp(),\n\t\tupd = currentTimestamp()) ~> DerivedColumn1\nConditionalSplit1@notnull derive(upd = currentTimestamp()) ~> DerivedColumn2\nDerivedColumn2 alterRow(updateIf(isNull(ins)==false())) ~> AlterRow1\nDerivedColumn1 sink(input(\n\t\tdimension_key as integer,\n\t\tins as timestamp,\n\t\tlast_upd as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> insert\nAlterRow1 sink(input(\n\t\tdimension_key as integer,\n\t\tins as timestamp,\n\t\tlast_upd as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['dimension_key'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> update"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable5')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable6')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/insert update test')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "perben"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "test1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "test2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "test2",
								"type": "DatasetReference"
							},
							"name": "sink2"
						}
					],
					"transformations": [
						{
							"name": "ConditionalSplit1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "AlterRow1"
						},
						{
							"name": "AlterRow2"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tdate_inserted as timestamp,\n\t\tdate_last_updated as timestamp,\n\t\tintint as integer,\n\t\tcharchar as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource1 split(isNull(date_inserted)==true(),\n\tdisjoint: false) ~> ConditionalSplit1@(en, to)\nConditionalSplit1@en derive(date_inserted = currentTimestamp(),\n\t\tdate_last_updated = currentTimestamp()) ~> DerivedColumn1\nConditionalSplit1@to derive(date_last_updated = currentTimestamp()) ~> DerivedColumn2\nDerivedColumn2 alterRow(updateIf(isNull(date_inserted)==false())) ~> AlterRow1\nSelect1 alterRow(insertIf(isNull(date_inserted)==true())) ~> AlterRow2\nDerivedColumn1 keyGenerate(output(intint as long),\n\tstartAt: 100L) ~> SurrogateKey1\nSurrogateKey1 select(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nAlterRow2 sink(input(\n\t\tdate_inserted as timestamp,\n\t\tdate_last_updated as timestamp,\n\t\tintint as integer,\n\t\tcharchar as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nAlterRow1 sink(input(\n\t\tdate_inserted as timestamp,\n\t\tdate_last_updated as timestamp,\n\t\tintint as integer,\n\t\tcharchar as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['intint'],\n\tformat: 'table',\n\tmapColumn(\n\t\tdate_inserted,\n\t\tdate_last_updated,\n\t\tintint,\n\t\tcharchar\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/test1')]",
				"[concat(variables('factoryId'), '/datasets/test2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/m_pre_dim_claim_team_me')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "perben"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet11",
								"type": "DatasetReference"
							},
							"name": "lcatable"
						},
						{
							"dataset": {
								"referenceName": "Parquet12",
								"type": "DatasetReference"
							},
							"name": "sigtable"
						},
						{
							"dataset": {
								"referenceName": "Parquet13",
								"type": "DatasetReference"
							},
							"name": "mapsys"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable2",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "lcatable2"
						},
						{
							"name": "sigtable2"
						},
						{
							"name": "Join1"
						},
						{
							"name": "Select1"
						},
						{
							"name": "Aggregate1"
						},
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						},
						{
							"name": "Lookup1"
						},
						{
							"name": "Select2"
						},
						{
							"name": "DerivedColumn3"
						}
					],
					"script": "source(output(\n\t\tLCALCAID as string,\n\t\tLCAICAID as string,\n\t\tLCACLMN3 as decimal(38,18),\n\t\tLCACLMDATE as timestamp,\n\t\tLCACYEAR as decimal(38,18),\n\t\tLCATRTMCO as decimal(38,18),\n\t\tLCAACSTAT as string,\n\t\tLCALOSSCO as string,\n\t\tLCAOUTSTM as string,\n\t\tLCAUWSIGN as string,\n\t\tLCAOFFICE as decimal(38,18),\n\t\tLCALDESCR as string,\n\t\tLCACLODATE as timestamp,\n\t\tLCACEFOCC as string,\n\t\tLCACEFOCM as string,\n\t\tLCACLMCAC as string,\n\t\tLCAECAUSECO as string,\n\t\tLCACLINTC as decimal(38,18),\n\t\tLCATCAUSECO as string,\n\t\tLCABONYNSW as string,\n\t\tLCAIMPEXP as decimal(38,18),\n\t\tLCANCAUSECO as string,\n\t\tLCANMCLEF as string,\n\t\tLCACCOD2 as string,\n\t\tLCAAREACD as string,\n\t\tLCACEFOUC as string,\n\t\tLCAONOFFS as decimal(38,18),\n\t\tLCAENINTRST as string,\n\t\tLCAENASSSHR as decimal(38,18),\n\t\tLCAMPLCURR as string,\n\t\tLCAMPLAMT as decimal(38,18),\n\t\tLCAXLMREF as string,\n\t\tLCAREPDATE as timestamp,\n\t\tLCALIMCURR as string,\n\t\tLCALIMAMT as decimal(38,18),\n\t\tLCABIGEVENT as string,\n\t\tLCALODESCR as string,\n\t\tLCAINTNOTE as string,\n\t\tLCALTDATE as timestamp,\n\t\tLCACRSIGN as string,\n\t\tLCACRDATE as timestamp,\n\t\tLCALUSIGN as string,\n\t\tLCALUDATE as timestamp,\n\t\tLCAKNVMARK as string,\n\t\tLCALABID as string,\n\t\tLCAAGAID as string,\n\t\tLCAOBNO as decimal(38,18),\n\t\tLCACROBBID as string,\n\t\tLCAWRKCLAIM as decimal(38,18),\n\t\tLCAFPAREACD as string,\n\t\tLCATOAREACD as string,\n\t\tLCAJURISDICTION as string,\n\t\tLCAFILEREF as decimal(38,18),\n\t\tLCANEXTSIGN as string,\n\t\tLCAAREADESCR as string,\n\t\tLCALRGCLMYNSW as string,\n\t\tLCAFROMAREACD as string,\n\t\tLCANEXTDATE as timestamp,\n\t\tLCAWORKPLACE as decimal(38,18),\n\t\tLCAOCCOFFDATE as timestamp,\n\t\tLCAWRKPLCCOD as decimal(38,18),\n\t\tLCAREGNDATE as timestamp,\n\t\tLCAOCCOFFYNSW as string,\n\t\tLCAREGRESS as decimal(38,18),\n\t\tLCACLMPEAID as decimal(38,18),\n\t\tLCAOCCOWNYNSW as string,\n\t\tLCAREGNSIGN as string,\n\t\tLCAMUOFFPROS as decimal(38,18),\n\t\tLCAREGCURR as string,\n\t\tLCAREGAMT as decimal(38,18),\n\t\tLCAMUOWNPROS as decimal(38,18),\n\t\tLCALIMDAYS as decimal(38,18),\n\t\tLCAREGTEXT70 as string,\n\t\tLCAEUOFFPROS as decimal(38,18),\n\t\tLCAMUOFFGRP as decimal(38,18),\n\t\tLCAEUOWNPROS as decimal(38,18),\n\t\tLCABIRTNO as string,\n\t\tDATE_INSERTED as timestamp,\n\t\tDATE_LAST_UPDATED as timestamp,\n\t\tINSERTED_BY as string,\n\t\tLAST_UPDATED_BY as string,\n\t\tMAP_DATE as timestamp,\n\t\tLCAADJSIGN as string,\n\t\tLCACLMID as string,\n\t\tLCALOADATE as timestamp,\n\t\tLCAEXTCLMID as string,\n\t\tLCATLOTYPE as double,\n\t\tLCACATEGORYTYPE as string,\n\t\tLCARECOVPOTAMT as decimal(38,18),\n\t\tLCARECOVCCVID as decimal(38,18),\n\t\tLCARECOVREMDATE as timestamp,\n\t\tLCARECOVACHCURR as string,\n\t\tLCARECOVPOTINTNOTE as string,\n\t\tLCARECOVACHYNSW as string,\n\t\tLCARECOVACHINTNOTE as string,\n\t\tLCARECOVACHDATE as timestamp,\n\t\tLCARECOVPOTCURR as string,\n\t\tLCARECOVACHSIGN as string,\n\t\tLCARECOVPOTYNSW as string,\n\t\tLCARECOVACHAMT as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> lcatable\nsource(output(\n\t\tSIGSIGN as string,\n\t\tSIGMDESCR as string,\n\t\tSIGLDESCR as string,\n\t\tSIGCPHONE as string,\n\t\tSIGCFAX as string,\n\t\tSIGCMAIL as string,\n\t\tSIGPEAID as decimal(38,18),\n\t\tSIGMAINSIGN as string,\n\t\tSIGHIERARC as string,\n\t\tSIGORGPLACE as string,\n\t\tSIGFUNC as string,\n\t\tSIGBPRTPL as string,\n\t\tSIGCOMP2 as decimal(38,18),\n\t\tSIGDEFCCODE as decimal(38,18),\n\t\tSIGDEFAGTYPE as decimal(38,18),\n\t\tSIGDEFOBRT as decimal(38,18),\n\t\tSIGOFFICE as decimal(38,18),\n\t\tSIGBUSNDIV as decimal(38,18),\n\t\tSIGBUSNSEC as decimal(38,18),\n\t\tSIGBUSNCLA as decimal(38,18),\n\t\tSIGBUSNTYP as decimal(38,18),\n\t\tSIGLANG2 as string,\n\t\tSIGIYEAR as decimal(38,18),\n\t\tSIGCURR as string,\n\t\tSIGPWDATE as decimal(38,18),\n\t\tSIGSQLSEQ as decimal(38,18),\n\t\tSIGGENSEC as decimal(38,18),\n\t\tSIGMAISEC as decimal(38,18),\n\t\tSIGPERSSECUR as string,\n\t\tSIGCREATEFUNC as string,\n\t\tSIGCLOSEFUNC as string,\n\t\tSIGCLAIMFUNC as string,\n\t\tSIGELREMITFUNC as string,\n\t\tSIGPLTRANSFUNC as string,\n\t\tSIGLOCDEFTAB as decimal(38,18),\n\t\tSIGLOCSWITCHES as string,\n\t\tSIGCREATESWITCHES as string,\n\t\tSIGPREMSWITCHES as string,\n\t\tSIGCLMDEFUPDATE as string,\n\t\tSIGCLMSWITCHES as string,\n\t\tSIGACCOACCG as decimal(38,18),\n\t\tSIGACCOSREF as string,\n\t\tSIGACCOSUBREF as string,\n\t\tSIGACCOSWITCHES as string,\n\t\tSIGPOLPRLABEL as string,\n\t\tSIGLETTERPRLABEL as string,\n\t\tSIGNOTEPRLABEL as string,\n\t\tSIGMISCPRLABEL as string,\n\t\tSIGSTOPUSE as string,\n\t\tSIGNAMEID as string,\n\t\tSIGEFILEDOMAIN as string,\n\t\tSIGAACYNSW as string,\n\t\tSIGACCYNSW as string,\n\t\tSIGEFILEPLACE as string,\n\t\tSIGEFILELIBRARY as string,\n\t\tSIGEFILEPASSWORD as string,\n\t\tSIGEFILEUSERID as string,\n\t\tSIGACLYNSW as string,\n\t\tSIGAUWYNSW as string,\n\t\tSIGUWAYNSW as string,\n\t\tSIGCLMYNSW as string,\n\t\tSIGFRYEAR as decimal(38,18),\n\t\tSIGSPECIALVERSION as string,\n\t\tSIGTOYEAR as decimal(38,18),\n\t\tSIGINTSELECTION as string,\n\t\tSIGDEBUGMACRO as string,\n\t\tSIGINTAIE as string,\n\t\tSIGDEBUGIDENTIFY as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> sigtable\nsource(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> mapsys\nlcatable select(mapColumn(\n\t\tLCAUWSIGN\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lcatable2\nsigtable select(mapColumn(\n\t\tSIGSIGN,\n\t\tSIGOFFICE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sigtable2\nlcatable2, sigtable2 join(LCAUWSIGN == SIGSIGN,\n\tjoinType:'inner',\n\tbroadcast: 'both')~> Join1\nJoin1 select(mapColumn(\n\t\tSIGSIGN,\n\t\tSIGOFFICE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nDerivedColumn3 aggregate(groupBy(SIGSIGN),\n\tSIGOFFICE = first(SIGOFFICE)) ~> Aggregate1\nAggregate1 derive(TEM_KEY = concat('P', toString(SIGSIGN)),\n\t\tPK_PRE_DIM_CLAIM_TEAM = concat('P', SIGSIGN),\n\t\tSOURCE_SYSTEM = 'PARIS',\n\t\tCODE_TYPE_ID = '792',\n\t\tDATE_INSERTED = toTimestamp(currentDate() )) ~> DerivedColumn1\nmapsys derive(CODE_TYPE_ID_STRING = toString(toInteger(CODE_TYPE_ID))) ~> DerivedColumn2\nDerivedColumn1, DerivedColumn2 lookup(SIGOFFICE == SOURCE_CODE_KEY\n\t&& DerivedColumn1@SOURCE_SYSTEM == mapsys@SOURCE_SYSTEM\n\t&& DerivedColumn1@CODE_TYPE_ID == CODE_TYPE_ID_STRING,\n\tmultiple: false,\n\tpickup: 'any',\n\tpartitionBy('hash', 1),\n\tbroadcast: 'none')~> Lookup1\nLookup1 select(mapColumn(\n\t\tSIGSIGN,\n\t\tPK_PRE_DIM_CLAIM_TEAM,\n\t\tTEM_KEY = TARGET_CODE,\n\t\tTEM_DESC = TARGET_DESCRIPTION,\n\t\tDATE_INSERTED\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect1 derive(SIGOFFICE = toString(toInteger(SIGOFFICE))) ~> DerivedColumn3\nSelect2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['SIGSIGN'],\n\tformat: 'table',\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet11')]",
				"[concat(variables('factoryId'), '/datasets/Parquet12')]",
				"[concat(variables('factoryId'), '/datasets/Parquet13')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/map')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"folder": {
					"name": "perben"
				},
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet13",
								"type": "DatasetReference"
							},
							"name": "mapsys"
						},
						{
							"dataset": {
								"referenceName": "Parquet12",
								"type": "DatasetReference"
							},
							"name": "sigtable"
						},
						{
							"dataset": {
								"referenceName": "Parquet11",
								"type": "DatasetReference"
							},
							"name": "lcatable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlTable7",
								"type": "DatasetReference"
							},
							"name": "sink1"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable9",
								"type": "DatasetReference"
							},
							"name": "sink3"
						},
						{
							"dataset": {
								"referenceName": "AzureSqlTable10",
								"type": "DatasetReference"
							},
							"name": "sink4"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						},
						{
							"name": "DerivedColumn2"
						}
					],
					"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> mapsys\nsource(output(\n\t\tSIGSIGN as string,\n\t\tSIGMDESCR as string,\n\t\tSIGLDESCR as string,\n\t\tSIGCPHONE as string,\n\t\tSIGCFAX as string,\n\t\tSIGCMAIL as string,\n\t\tSIGPEAID as decimal(38,18),\n\t\tSIGMAINSIGN as string,\n\t\tSIGHIERARC as string,\n\t\tSIGORGPLACE as string,\n\t\tSIGFUNC as string,\n\t\tSIGBPRTPL as string,\n\t\tSIGCOMP2 as decimal(38,18),\n\t\tSIGDEFCCODE as decimal(38,18),\n\t\tSIGDEFAGTYPE as decimal(38,18),\n\t\tSIGDEFOBRT as decimal(38,18),\n\t\tSIGOFFICE as decimal(38,18),\n\t\tSIGBUSNDIV as decimal(38,18),\n\t\tSIGBUSNSEC as decimal(38,18),\n\t\tSIGBUSNCLA as decimal(38,18),\n\t\tSIGBUSNTYP as decimal(38,18),\n\t\tSIGLANG2 as string,\n\t\tSIGIYEAR as decimal(38,18),\n\t\tSIGCURR as string,\n\t\tSIGPWDATE as decimal(38,18),\n\t\tSIGSQLSEQ as decimal(38,18),\n\t\tSIGGENSEC as decimal(38,18),\n\t\tSIGMAISEC as decimal(38,18),\n\t\tSIGPERSSECUR as string,\n\t\tSIGCREATEFUNC as string,\n\t\tSIGCLOSEFUNC as string,\n\t\tSIGCLAIMFUNC as string,\n\t\tSIGELREMITFUNC as string,\n\t\tSIGPLTRANSFUNC as string,\n\t\tSIGLOCDEFTAB as decimal(38,18),\n\t\tSIGLOCSWITCHES as string,\n\t\tSIGCREATESWITCHES as string,\n\t\tSIGPREMSWITCHES as string,\n\t\tSIGCLMDEFUPDATE as string,\n\t\tSIGCLMSWITCHES as string,\n\t\tSIGACCOACCG as decimal(38,18),\n\t\tSIGACCOSREF as string,\n\t\tSIGACCOSUBREF as string,\n\t\tSIGACCOSWITCHES as string,\n\t\tSIGPOLPRLABEL as string,\n\t\tSIGLETTERPRLABEL as string,\n\t\tSIGNOTEPRLABEL as string,\n\t\tSIGMISCPRLABEL as string,\n\t\tSIGSTOPUSE as string,\n\t\tSIGNAMEID as string,\n\t\tSIGEFILEDOMAIN as string,\n\t\tSIGAACYNSW as string,\n\t\tSIGACCYNSW as string,\n\t\tSIGEFILEPLACE as string,\n\t\tSIGEFILELIBRARY as string,\n\t\tSIGEFILEPASSWORD as string,\n\t\tSIGEFILEUSERID as string,\n\t\tSIGACLYNSW as string,\n\t\tSIGAUWYNSW as string,\n\t\tSIGUWAYNSW as string,\n\t\tSIGCLMYNSW as string,\n\t\tSIGFRYEAR as decimal(38,18),\n\t\tSIGSPECIALVERSION as string,\n\t\tSIGTOYEAR as decimal(38,18),\n\t\tSIGINTSELECTION as string,\n\t\tSIGDEBUGMACRO as string,\n\t\tSIGINTAIE as string,\n\t\tSIGDEBUGIDENTIFY as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> sigtable\nsource(output(\n\t\tLCALCAID as string,\n\t\tLCAICAID as string,\n\t\tLCACLMN3 as decimal(38,18),\n\t\tLCACLMDATE as timestamp,\n\t\tLCACYEAR as decimal(38,18),\n\t\tLCATRTMCO as decimal(38,18),\n\t\tLCAACSTAT as string,\n\t\tLCALOSSCO as string,\n\t\tLCAOUTSTM as string,\n\t\tLCAUWSIGN as string,\n\t\tLCAOFFICE as decimal(38,18),\n\t\tLCALDESCR as string,\n\t\tLCACLODATE as timestamp,\n\t\tLCACEFOCC as string,\n\t\tLCACEFOCM as string,\n\t\tLCACLMCAC as string,\n\t\tLCAECAUSECO as string,\n\t\tLCACLINTC as decimal(38,18),\n\t\tLCATCAUSECO as string,\n\t\tLCABONYNSW as string,\n\t\tLCAIMPEXP as decimal(38,18),\n\t\tLCANCAUSECO as string,\n\t\tLCANMCLEF as string,\n\t\tLCACCOD2 as string,\n\t\tLCAAREACD as string,\n\t\tLCACEFOUC as string,\n\t\tLCAONOFFS as decimal(38,18),\n\t\tLCAENINTRST as string,\n\t\tLCAENASSSHR as decimal(38,18),\n\t\tLCAMPLCURR as string,\n\t\tLCAMPLAMT as decimal(38,18),\n\t\tLCAXLMREF as string,\n\t\tLCAREPDATE as timestamp,\n\t\tLCALIMCURR as string,\n\t\tLCALIMAMT as decimal(38,18),\n\t\tLCABIGEVENT as string,\n\t\tLCALODESCR as string,\n\t\tLCAINTNOTE as string,\n\t\tLCALTDATE as timestamp,\n\t\tLCACRSIGN as string,\n\t\tLCACRDATE as timestamp,\n\t\tLCALUSIGN as string,\n\t\tLCALUDATE as timestamp,\n\t\tLCAKNVMARK as string,\n\t\tLCALABID as string,\n\t\tLCAAGAID as string,\n\t\tLCAOBNO as decimal(38,18),\n\t\tLCACROBBID as string,\n\t\tLCAWRKCLAIM as decimal(38,18),\n\t\tLCAFPAREACD as string,\n\t\tLCATOAREACD as string,\n\t\tLCAJURISDICTION as string,\n\t\tLCAFILEREF as decimal(38,18),\n\t\tLCANEXTSIGN as string,\n\t\tLCAAREADESCR as string,\n\t\tLCALRGCLMYNSW as string,\n\t\tLCAFROMAREACD as string,\n\t\tLCANEXTDATE as timestamp,\n\t\tLCAWORKPLACE as decimal(38,18),\n\t\tLCAOCCOFFDATE as timestamp,\n\t\tLCAWRKPLCCOD as decimal(38,18),\n\t\tLCAREGNDATE as timestamp,\n\t\tLCAOCCOFFYNSW as string,\n\t\tLCAREGRESS as decimal(38,18),\n\t\tLCACLMPEAID as decimal(38,18),\n\t\tLCAOCCOWNYNSW as string,\n\t\tLCAREGNSIGN as string,\n\t\tLCAMUOFFPROS as decimal(38,18),\n\t\tLCAREGCURR as string,\n\t\tLCAREGAMT as decimal(38,18),\n\t\tLCAMUOWNPROS as decimal(38,18),\n\t\tLCALIMDAYS as decimal(38,18),\n\t\tLCAREGTEXT70 as string,\n\t\tLCAEUOFFPROS as decimal(38,18),\n\t\tLCAMUOFFGRP as decimal(38,18),\n\t\tLCAEUOWNPROS as decimal(38,18),\n\t\tLCABIRTNO as string,\n\t\tDATE_INSERTED as timestamp,\n\t\tDATE_LAST_UPDATED as timestamp,\n\t\tINSERTED_BY as string,\n\t\tLAST_UPDATED_BY as string,\n\t\tMAP_DATE as timestamp,\n\t\tLCAADJSIGN as string,\n\t\tLCACLMID as string,\n\t\tLCALOADATE as timestamp,\n\t\tLCAEXTCLMID as string,\n\t\tLCATLOTYPE as double,\n\t\tLCACATEGORYTYPE as string,\n\t\tLCARECOVPOTAMT as decimal(38,18),\n\t\tLCARECOVCCVID as decimal(38,18),\n\t\tLCARECOVREMDATE as timestamp,\n\t\tLCARECOVACHCURR as string,\n\t\tLCARECOVPOTINTNOTE as string,\n\t\tLCARECOVACHYNSW as string,\n\t\tLCARECOVACHINTNOTE as string,\n\t\tLCARECOVACHDATE as timestamp,\n\t\tLCARECOVPOTCURR as string,\n\t\tLCARECOVACHSIGN as string,\n\t\tLCARECOVPOTYNSW as string,\n\t\tLCARECOVACHAMT as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> lcatable\nmapsys derive(CODE_TYPE_ID = toString(toInteger(CODE_TYPE_ID))) ~> DerivedColumn1\nsigtable derive(SIGOFFICE = toString(toInteger(SIGOFFICE))) ~> DerivedColumn2\nDerivedColumn1 sink(input(\n\t\tsource_code_key as string,\n\t\tsource_system as string,\n\t\tcode_type_id as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tsource_code_key = SOURCE_CODE_KEY,\n\t\tsource_system = SOURCE_SYSTEM,\n\t\tcode_type_id = CODE_TYPE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1\nlcatable sink(input(\n\t\tlcauwsign as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tlcauwsign = LCAUWSIGN\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink3\nDerivedColumn2 sink(input(\n\t\tsigsign as string,\n\t\tsigoffice as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tmapColumn(\n\t\tsigsign = SIGSIGN,\n\t\tsigoffice = SIGOFFICE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink4"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Parquet13')]",
				"[concat(variables('factoryId'), '/datasets/Parquet12')]",
				"[concat(variables('factoryId'), '/datasets/Parquet11')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable7')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable9')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable10')]"
			]
		}
	]
}