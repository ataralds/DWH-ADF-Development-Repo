{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DWH-ADF-Development"
		},
		"AzureDatabricks_development_connection_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks_development_connection'"
		},
		"dwhdatalakedevelopment_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'dwhdatalakedevelopment'"
		},
		"OracelStageITF_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OracelStageITF'"
		},
		"OracleCStage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OracleCStage'"
		},
		"dwhdatalakedevelopment_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://dwhdatalakedevelopment.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks_development_connection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Connection to DataBricks Development",
				"annotations": [
					"databricks development connection"
				],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://westeurope.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_development_connection_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS3_v2",
					"newClusterNumOfWorker": "1",
					"newClusterVersion": "5.5.x-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dwhdatalakedevelopment')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ADF Development connection to dwhdatalakedevelopment",
				"annotations": [
					"datalake development connection"
				],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('dwhdatalakedevelopment_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('dwhdatalakedevelopment_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AMSSRV049')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Integration runtime hosted on AMSSRV049",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_rg9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dwhdatalakedevelopment",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"fileSystem": "test"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dwhdatalakedevelopment')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracelStageITF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('OracelStageITF_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AMSSRV049",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AMSSRV049')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleCStage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('OracleCStage_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AMSSRV049",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/AMSSRV049')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_rg9')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OracelStageITF",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "STAGE_ITF",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OracelStageITF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/perben1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach_rg9",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_rg9",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "STAGE_ITF.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "test//@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SourceDataset_rg9",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationDataset_rg9",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "G_EMPLOYEE"
								},
								"destination": {
									"fileName": "STAGE_ITF.G_EMPLOYEE.txt"
								}
							},
							{
								"source": {
									"table": "G_INCIDENT"
								},
								"destination": {
									"fileName": "STAGE_ITF.G_INCIDENT.txt"
								}
							},
							{
								"source": {
									"table": "G_SYNDICATE"
								},
								"destination": {
									"fileName": "STAGE_ITF.G_SYNDICATE.txt"
								}
							}
						]
					}
				},
				"folder": {
					"name": "perben"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_rg9')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_rg9')]"
			]
		}
	]
}