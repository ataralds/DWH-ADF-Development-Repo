{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DWH-ADF-Development"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyOltp05ConfigFile')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_Configfile",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "AZURE_READ.AZURE_CONFIG"
							},
							{
								"name": "Destination",
								"value": "raw/Static/config_file.parquet"
							}
						],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config \nwhere oracle_schema_name not like 'AGRINT'",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "lake_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Test"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Agresso')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Temp copy job to get the Agresso data",
				"activities": [
					{
						"name": "ForEach_Agresso",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_Agresso",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "STAGE_ITF.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "dwh-stage/Agresso/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "scr_oracle_agresso",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Agresso",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().destination.fileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "S_UDV_EMPLOYEE"
								},
								"destination": {
									"fileName": "udv_employee.parquet"
								}
							},
							{
								"source": {
									"table": "S_UDV_OFFICE"
								},
								"destination": {
									"fileName": "udv_office.parquet"
								}
							},
							{
								"source": {
									"table": "S_UDV_ORGUNIT"
								},
								"destination": {
									"fileName": "udv_orgunit.parquet"
								}
							}
						]
					}
				},
				"folder": {
					"name": "copy job/dwh_stage/Agresso"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_exact_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name = 'EXACT_SRC'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "oracle_exact",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Exact",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_lloyds_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name = 'LLOYDS'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Oracle_lloyds",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Lloyds",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_mapsys_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name not like  'AGRINT'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Oracle_oltp05",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "SELECT * FROM @{item().table_name} ",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "mapsys",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_oltp05_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name not like  'AGRINT'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "oracle_scr_oltp05",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Oltp05",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_paris_fap_rsa_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This copy job is getting the views from config on paris c_stage. Testing the fap/rsa loading time. ",
				"activities": [
					{
						"name": "Lookup_Paris",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select TABLE_NAME table_name from azure_config where load_ind = 'N'\nand table_name not in ('\"p_filtable_cor\"','\"p_faptable\"')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_config_paris",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachParis",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Paris",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Paris').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Paris",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "oracle_paris_fap_rsa",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "faptable_rsatable",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/paris"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_paris_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This copy job is getting the views from config on paris c_stage. Temp, before we get SQL up running. ",
				"activities": [
					{
						"name": "Lookup_Paris",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select TABLE_NAME table_name from azure_config where load_ind = 'Y'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_config_paris",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachParis",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Paris",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Paris').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Paris",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "scr_oracle_paris",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Paris",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/paris"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_saleforce_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name = 'SALEFORCE'",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "oracle_scr_oltp05",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Salesforce",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_static_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name = 'STATIC'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "oracle_scr_oltp05",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Static",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_stage_exact_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LkpSrcLoadStatusExact",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:03:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select fn_check_exact_source_load LOAD_STATUS from dummy_table_dataset",
								"partitionOption": "None",
								"queryTimeout": "00:05:00"
							},
							"dataset": {
								"referenceName": "Oracle_oltp05_dummy_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If_table_is_loaded",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LkpSrcLoadStatusExact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LkpSrcLoadStatusExact').output.firstRow.LOAD_STATUS,'N')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "copy_exact_to_lake",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "copy_exact_to_lake",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vTableLoaded",
										"value": "'Empty Table'"
									}
								}
							]
						}
					}
				],
				"variables": {
					"vTableLoaded": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copy_exact_to_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_stage_lloyds_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LkpSourceLoadStatusLloyds",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:03:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select fn_check_lloyds_source_load  LOAD_STATUS from dummy_table_dataset",
								"partitionOption": "None",
								"queryTimeout": "00:05:00"
							},
							"dataset": {
								"referenceName": "Oracle_oltp05_dummy_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If_table_is_loaded",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LkpSourceLoadStatusLloyds",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LkpSourceLoadStatusLloyds').output.firstRow.LOAD_STATUS,'N')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "copy_lloyds_to_lake",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "copy_lloyds_to_lake",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vTableLoaded",
										"value": "'Empty Table'"
									}
								}
							]
						}
					}
				],
				"variables": {
					"vTableLoaded": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copy_lloyds_to_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_static_stage_dwh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_stage_lloyds_table",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "load_stage_lloyds_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_copy_static_to_lake",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy_static_to_lake",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "error_in_pipeline_resolved",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_copy_static_to_lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "error_in_pipeline_resolved",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pErrorPipelineStatus": {
									"value": "@activity('pl_copy_static_to_lake').error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"variables": {
					"vInnerFailStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/load_stage_lloyds_table')]",
				"[concat(variables('factoryId'), '/pipelines/copy_static_to_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_master_pre')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_static_stage_dwh",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "load_static_stage_dwh",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "copy_exact_to_lake",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_static_stage_dwh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy_exact_to_lake",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "This should be email",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "load_static_stage_dwh",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vFailStatus",
							"value": "'Pipeline failed'"
						}
					}
				],
				"variables": {
					"vFailStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/load_static_stage_dwh')]",
				"[concat(variables('factoryId'), '/pipelines/copy_exact_to_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_master_revit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_master_pre",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "load_master_pre",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "load_pre_dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_master_pre",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "load_pre_dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"variables": {
					"vMasterRevitErrorStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/load_master_pre')]"
			]
		}
	]
}