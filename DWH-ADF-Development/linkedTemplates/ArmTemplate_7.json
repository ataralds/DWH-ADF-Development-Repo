{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DWH-ADF-Development"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/copy_lloyds_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name = 'LLOYDS'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Oracle_lloyds",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Lloyds",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_mapsys_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name not like  'AGRINT'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "Oracle_oltp05",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "SELECT * FROM @{item().table_name} ",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "mapsys",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_oltp05_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name not like  'AGRINT'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "oracle_scr_oltp05",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Oltp05",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_paris_fap_rsa_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This copy job is getting the views from config on paris c_stage. Testing the fap/rsa loading time. ",
				"activities": [
					{
						"name": "Lookup_Paris",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select TABLE_NAME table_name from azure_config where load_ind = 'N'\nand table_name not in ('\"p_filtable_cor\"','\"p_faptable\"')",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_config_paris",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachParis",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Paris",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Paris').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Paris",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "oracle_paris_fap_rsa",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "faptable_rsatable",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/paris"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_paris_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This copy job is getting the views from config on paris c_stage. Temp, before we get SQL up running. ",
				"activities": [
					{
						"name": "Lookup_Paris",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select TABLE_NAME table_name from azure_config where load_ind = 'Y'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_config_paris",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachParis",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_Paris",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_Paris').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Paris",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "scr_oracle_paris",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Paris",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/paris"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_saleforce_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name = 'SALEFORCE'",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "oracle_scr_oltp05",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Salesforce",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_static_to_lake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_oltp05",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select table_name table_name from azure_config where oracle_schema_name = 'STATIC'\n",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "oracle_configfile_oltp05",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachOltp05",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_oltp05",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_oltp05').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy Oltp05",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "OracleSource",
											"oracleReaderQuery": {
												"value": "SELECT * FROM @{item().table_name} ",
												"type": "Expression"
											},
											"partitionOption": "None",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "oracle_scr_oltp05",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "Static",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@{item().table_name}",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"folder": {
					"name": "copy job/dwh_stage/oltp05"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/m_crossreference')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "m_crossreference",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "m_crossreference",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"OmMapCodeValues": {
										"fileName": "\"map_code_values\""
									},
									"OmMapCodeType": {
										"fileName": "\"map_code_type\""
									},
									"tCrossReference": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/m_hlp_exchange_rate_usd')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "m_hlp_exchange_rate_usd",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "m_hlp_exchange_rate_usd",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"hlpExhangeRate": {},
									"hlpExchangeRateUSD": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/m_pre_dim_agreement_pa')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "m_pre_dim_agreement_pa",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "m_pre_dim_agreement_pa",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Pagatable": {
										"fileName": "\"p_agatable\""
									},
									"Pagztable": {
										"fileName": "\"p_agztable\""
									},
									"Ppebtable": {
										"fileName": "\"p_pebtable\""
									},
									"tcrossreference": {
										"fileName": "tcrossreference.parquet"
									},
									"SrcSfCompany": {
										"fileName": "\"sf_company_new\""
									},
									"DimTime": {
										"fileName": "\"sta_dim_time\""
									},
									"PreDimAgreement": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pre_dim_vessel_type_group')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "m_pre_dim_vessel_type_group",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "m_pre_dim_vessel_type_group",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"StaVesselTypeGroup": {
										"fileName": "\"sta_vessl_type_group\""
									},
									"StaRiskDriverGroup": {
										"fileName": "\"sta_risk_driver_group\""
									},
									"PreDimVesselTypeGroup": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_exchange_rate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup_exchange_file_status",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select \"file_arrival_status\" from \"hlp_exchange_rate_status\"",
								"partitionOption": "None",
								"queryTimeout": "00:10:00"
							},
							"dataset": {
								"referenceName": "oracle_exchange_rate_status",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If Condition1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "lookup_exchange_file_status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('lookup_exchange_file_status').output.firstRow.file_arrival_status,'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "pipeline_send_email",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pipeline_send_email",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"pPipelineName": "Pipeline Name",
											"pEmailSubject": "ADF DWH Alert ! Exchange rate file not arrived to load and copy into Azure.",
											"pEmailBody": "Exchange rate file not available",
											"pEmailTo": "sudipta.dutta@gard.no;siv.borve@gard.no"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "copy_exchange_rate_to_lake",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "copy_exchange_rate_to_lake",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							]
						}
					},
					{
						"name": "error_handling",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline_error_handling",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "load_exchange_rate",
								"pPipelineErrorMsg": "Pipeline failed. Please check"
							}
						}
					},
					{
						"name": "pipeline_send_email_1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "If Condition1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline_send_email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "load_exchange_rate",
								"pEmailSubject": "ADF DWH Alert ! Exchange rate copy job completed successfully",
								"pEmailBody": "HLP_EXCHNAGE_RATE data copied into Azure SQL server successfully",
								"pEmailTo": "sudipta.dutta@gard.no;siv.borve@gard.no"
							}
						}
					}
				],
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_pre_dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "vPreDim",
							"value": "'This is inside load_pre_dim'"
						}
					},
					{
						"name": "m_pre_dim_agreement_pa",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "m_pre_dim_agreement_pa",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"variables": {
					"vPreDim": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_prepare"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/m_pre_dim_agreement_pa')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_stage_common')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "m_hlp_exchange_rate_usd",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "m_hlp_exchange_rate_usd",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/m_hlp_exchange_rate_usd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_stage_exact_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LkpSrcLoadStatusExact",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:03:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select fn_check_exact_source_load LOAD_STATUS from dummy_table_dataset",
								"partitionOption": "None",
								"queryTimeout": "00:05:00"
							},
							"dataset": {
								"referenceName": "Oracle_oltp05_dummy_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If_table_is_loaded",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LkpSrcLoadStatusExact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LkpSrcLoadStatusExact').output.firstRow.LOAD_STATUS,'N')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "copy_exact_to_lake",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "copy_exact_to_lake",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vTableLoaded",
										"value": "'Empty Table'"
									}
								}
							]
						}
					}
				],
				"variables": {
					"vTableLoaded": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_stage_lloyds_table')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LkpSourceLoadStatusLloyds",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:03:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "select fn_check_lloyds_source_load  LOAD_STATUS from dummy_table_dataset",
								"partitionOption": "None",
								"queryTimeout": "00:05:00"
							},
							"dataset": {
								"referenceName": "Oracle_oltp05_dummy_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "If_table_is_loaded",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "LkpSourceLoadStatusLloyds",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LkpSourceLoadStatusLloyds').output.firstRow.LOAD_STATUS,'N')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "copy_lloyds_to_lake",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "copy_lloyds_to_lake",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "vTableLoaded",
										"value": "'Empty Table'"
									}
								}
							]
						}
					}
				],
				"variables": {
					"vTableLoaded": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/copy_lloyds_to_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_master_dwh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_pre_dim",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_stage_common",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "load_pre_dim",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "load_stage_common",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "load_stage_common",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"variables": {
					"vMasterRevitErrorStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_master"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/load_pre_dim')]",
				"[concat(variables('factoryId'), '/pipelines/load_stage_common')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_static_stage_dwh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_stage_lloyds_table",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "load_stage_lloyds_table",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "pl_copy_static_to_lake",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy_static_to_lake",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "error_handling",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "pl_copy_static_to_lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline_error_handling",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": {
									"value": "copy_static_to_lake",
									"type": "Expression"
								},
								"pPipelineErrorMsg": {
									"value": "@activity('pl_copy_static_to_lake').error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "error_handling_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_stage_lloyds_table",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline_error_handling",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": {
									"value": "load_stage_lloyds_table",
									"type": "Expression"
								},
								"pPipelineErrorMsg": {
									"value": "@activity('load_stage_lloyds_table').error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"variables": {
					"vInnerFailStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/load_stage_lloyds_table')]",
				"[concat(variables('factoryId'), '/pipelines/copy_static_to_lake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trgr_load_exchange_rate')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is to execute exchange rate copy job",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "load_exchange_rate",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2020-05-12T10:32:00.000Z",
						"endTime": "2020-07-01T10:32:00.000Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								15
							],
							"hours": [
								22
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/load_exchange_rate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_master_pre_dwh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_static_stage_dwh",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "load_static_stage_dwh",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "copy_exact_to_lake",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_static_stage_dwh",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "copy_exact_to_lake",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "error_handling",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "copy_exact_to_lake",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline_error_handling",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "copy_exact_to_lake",
								"pPipelineErrorMsg": {
									"value": "@activity('copy_exact_to_lake').error.message",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "error_handling_copy1",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "load_static_stage_dwh",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipeline_error_handling",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"pPipelineName": "load_static_stage_dwh",
								"pPipelineErrorMsg": {
									"value": "@activity('load_static_stage_dwh').error.message",
									"type": "Expression"
								}
							}
						}
					}
				],
				"variables": {
					"vFailStatus": {
						"type": "String"
					}
				},
				"folder": {
					"name": "pipeline/dwh_stage"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/load_static_stage_dwh')]"
			]
		}
	]
}