{
	"name": "M_DIM_BUSINESS_AREA_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ParquetTCROSS",
						"type": "DatasetReference"
					},
					"name": "TCrossReference"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "marts_dim_business_area",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "FilterCodetypeIDandTargetCode"
				},
				{
					"name": "AggregateTargetCode"
				},
				{
					"name": "DeriveTopGrpBus"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "Aggregate2"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "Aggregate3"
				},
				{
					"name": "UnionTopGrp"
				},
				{
					"name": "UnionGrpBua"
				},
				{
					"name": "UnionBus"
				},
				{
					"name": "SelectAll"
				},
				{
					"name": "DeriveIDcolumns"
				},
				{
					"name": "SurrogateKeyDimensionKey"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> TCrossReference\nTCrossReference filter(CODE_TYPE_ID == 106.0 && TARGET_CODE != 'PI') ~> FilterCodetypeIDandTargetCode\nFilterCodetypeIDandTargetCode aggregate(groupBy(TARGET_CODE),\n\tTARGET_DESCRIPTION = first(TARGET_DESCRIPTION)) ~> AggregateTargetCode\nAggregateTargetCode derive(TOP_KEY = 'ALL',\n\t\tTOP_DESCRIPTION = 'All Business Areas',\n\t\tGRP_KEY = case(TARGET_CODE =='EN' || TARGET_CODE =='BU', 'EG', case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'PI', TARGET_CODE)),\n\t\tGRP_DESCRIPTION = case(TARGET_CODE =='EN' || TARGET_CODE =='BU', 'Energy+', case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'P&I', TARGET_CODE)),\n\t\tBUA_KEY = case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'PI', TARGET_CODE),\n\t\tBUA_DESCRIPTION = case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'P&I', TARGET_CODE)) ~> DeriveTopGrpBus\nDeriveTopGrpBus derive(each(match(!startsWith(name,'TOP')), $$ = '')) ~> DerivedColumn1\nDerivedColumn1 aggregate(groupBy(TOP_KEY),\n\teach(match(name!='TOP_KEY'), $$ = first($$))) ~> Aggregate1\nDeriveTopGrpBus derive(each(match(!startsWith(name,'TOP')&&!startsWith(name,'GRP')), $$ = '')) ~> DerivedColumn2\nDerivedColumn2 aggregate(groupBy(GRP_KEY),\n\teach(match(name!='GRP_KEY'), $$ = first($$))) ~> Aggregate2\nDeriveTopGrpBus derive(each(match(!startsWith(name,'TOP')&&!startsWith(name,'GRP')&&!startsWith(name,'BUA')), $$ = '')) ~> DerivedColumn3\nDerivedColumn3 aggregate(groupBy(BUA_KEY),\n\teach(match(name!='BUA_KEY'), $$ = first($$))) ~> Aggregate3\nAggregate1, Aggregate2 union(byName: true)~> UnionTopGrp\nUnionTopGrp, Aggregate3 union(byName: true)~> UnionGrpBua\nUnionGrpBua, DeriveTopGrpBus union(byName: true)~> UnionBus\nDeriveTopGrpBus select(mapColumn(\n\t\tTARGET_CODE,\n\t\tTARGET_DESCRIPTION,\n\t\tTOP_KEY,\n\t\tTOP_DESCRIPTION,\n\t\tGRP_KEY,\n\t\tGRP_DESCRIPTION,\n\t\tBUA_KEY,\n\t\tBUA_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectAll\nUnionBus derive(BUS_ID = '',\n\t\tBUA_ID = '',\n\t\tGRP_ID = '',\n\t\tTOP_ID = '') ~> DeriveIDcolumns\nDeriveIDcolumns keyGenerate(output(DIMENSION_KEY as long),\n\tstartAt: 1L) ~> SurrogateKeyDimensionKey\nSurrogateKeyDimensionKey select(mapColumn(\n\t\tDIMENSION_KEY,\n\t\tTOP_ID,\n\t\tTOP_KEY,\n\t\tTOP_DESCRIPTION,\n\t\tGRP_ID,\n\t\tGRP_KEY,\n\t\tGRP_DESCRIPTION,\n\t\tBUA_ID,\n\t\tBUA_KEY,\n\t\tBUA_DESCRIPTION,\n\t\tBUS_ID,\n\t\tBUS_KEY = TARGET_CODE,\n\t\tBUS_DESCRIPTION = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\tdimension_key as long,\n\t\ttop_description as string,\n\t\tgrp_key as string,\n\t\tgrp_description as string,\n\t\ttop_id as decimal(28,10),\n\t\tbua_description as string,\n\t\tbus_key as string,\n\t\tbua_id as decimal(28,10),\n\t\tbua_key as string,\n\t\ttop_key as string,\n\t\tgrp_id as decimal(28,10),\n\t\tbus_description as string,\n\t\tbus_id as decimal(28,10)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tdimension_key = DIMENSION_KEY,\n\t\ttop_description = TOP_DESCRIPTION,\n\t\tgrp_key = GRP_KEY,\n\t\tgrp_description = GRP_DESCRIPTION,\n\t\ttop_id = TOP_ID,\n\t\tbua_description = BUA_DESCRIPTION,\n\t\tbus_key = BUS_KEY,\n\t\tbua_id = BUA_ID,\n\t\tbua_key = BUA_KEY,\n\t\ttop_key = TOP_KEY,\n\t\tgrp_id = GRP_ID,\n\t\tbus_description = BUS_DESCRIPTION,\n\t\tbus_id = BUS_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}