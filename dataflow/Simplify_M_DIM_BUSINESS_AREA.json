{
	"name": "Simplify_M_DIM_BUSINESS_AREA",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "TCrossReferenceParquet",
						"type": "DatasetReference"
					},
					"name": "TCrossReference"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FilterCodetypeIDandTargetCode"
				},
				{
					"name": "AggregateTargetCode"
				},
				{
					"name": "DeriveTopGrpBus"
				},
				{
					"name": "SelectTop"
				},
				{
					"name": "SelectGrp"
				},
				{
					"name": "SelectBua"
				},
				{
					"name": "UnionTopGrp"
				},
				{
					"name": "UnionGrpBua"
				},
				{
					"name": "SelectBus"
				},
				{
					"name": "AggregateBua"
				},
				{
					"name": "AggregateGrp"
				},
				{
					"name": "AggregateTop"
				},
				{
					"name": "UnionBus"
				},
				{
					"name": "AddDimensionKey"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "DeriveGrpID"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "DeriveBusID"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "SelectGrpColumns"
				},
				{
					"name": "SelectTopColumns"
				},
				{
					"name": "SelectBuaColumns"
				},
				{
					"name": "SelectBusColumns"
				}
			],
			"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> TCrossReference\nTCrossReference filter(CODE_TYPE_ID == 106.0 && TARGET_CODE != 'PI') ~> FilterCodetypeIDandTargetCode\nFilterCodetypeIDandTargetCode aggregate(groupBy(TARGET_CODE),\n\tTARGET_DESCRIPTION = first(TARGET_DESCRIPTION)) ~> AggregateTargetCode\nAggregateTargetCode derive(top_key = 'ALL',\n\t\ttop_description = 'All Business Areas',\n\t\tgrp_key = case(TARGET_CODE =='EN' || TARGET_CODE =='BU', 'EG', case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'PI', TARGET_CODE)),\n\t\tgrp_description = case(TARGET_CODE =='EN' || TARGET_CODE =='BU', 'Energy+', case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'P&I', TARGET_CODE)),\n\t\tbua_key = case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'PI', TARGET_CODE),\n\t\tbua_description = case( TARGET_CODE =='PM' || TARGET_CODE =='PF', 'P&I', TARGET_CODE)) ~> DeriveTopGrpBus\nDeriveTopGrpBus select(mapColumn(\n\t\ttop_key,\n\t\ttop_description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTop\nDeriveTopGrpBus select(mapColumn(\n\t\ttop_key,\n\t\ttop_description,\n\t\tgrp_key,\n\t\tgrp_description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectGrp\nDeriveTopGrpBus select(mapColumn(\n\t\ttop_key,\n\t\ttop_description,\n\t\tgrp_key,\n\t\tgrp_description,\n\t\tbua_key,\n\t\tbua_description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectBua\nAggregateTop, AggregateGrp union(byName: true)~> UnionTopGrp\nUnionTopGrp, AggregateBua union(byName: true)~> UnionGrpBua\nDeriveTopGrpBus select(mapColumn(\n\t\tbus_key = TARGET_CODE,\n\t\tbus_description = TARGET_DESCRIPTION,\n\t\ttop_key,\n\t\ttop_description,\n\t\tgrp_key,\n\t\tgrp_description,\n\t\tbua_key,\n\t\tbua_description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectBus\nSelectBua aggregate(groupBy(bua_key),\n\teach(match(name != 'bua_key'), $$ = first($$))) ~> AggregateBua\nSelectGrp aggregate(groupBy(grp_key),\n\teach(match(name != 'grp_key'), $$ = first($$))) ~> AggregateGrp\nSelectTop aggregate(groupBy(top_key),\n\teach(match(name != 'top_key'), $$ = first($$))) ~> AggregateTop\nUnionGrpBua, SelectBus union(byName: true)~> UnionBus\nUnionBus keyGenerate(output(dimension_key as long),\n\tstartAt: 1L) ~> AddDimensionKey\nAddDimensionKey split(isNull(grp_key),\n\t!isNull(grp_key) &&\r\nisNull(bua_key) \r\n,\n\t!isNull(grp_key) &&\r\n!isNull(bua_key) &&\r\nisNull(bus_key)\r\n,\n\tdisjoint: false) ~> ConditionalSplit1@(TopLevel, GrpLevel, BuaLevel, BusLevel)\nSelectGrpColumns derive(grp_id = dimension_key*-1,\n\t\tdimension_key = dimension_key*-1) ~> DeriveGrpID\nSelectBuaColumns derive(bua_id = dimension_key*-1,\n\t\tdimension_key = dimension_key*-1) ~> DerivedColumn1\nSelectBusColumns derive(bus_id = dimension_key) ~> DeriveBusID\nConditionalSplit1@TopLevel derive(top_id = dimension_key*-1,\n\t\tdimension_key = dimension_key*-1) ~> DerivedColumn2\nConditionalSplit1@GrpLevel select(mapColumn(\n\t\tgrp_key,\n\t\tdimension_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectGrpColumns\nDerivedColumn2 select(mapColumn(\n\t\ttop_key,\n\t\tdimension_key,\n\t\ttop_id\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTopColumns\nConditionalSplit1@BuaLevel select(mapColumn(\n\t\tbua_key,\n\t\tdimension_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectBuaColumns\nConditionalSplit1@BusLevel select(mapColumn(\n\t\tbus_key,\n\t\tdimension_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectBusColumns"
		}
	}
}