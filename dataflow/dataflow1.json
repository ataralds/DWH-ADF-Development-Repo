{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tfipcrstamp as string,\n\t\tfipfipid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select fipcrstamp, fipfipid from dwh_stage.p_fiptable where fipfipid=\\'P 1868784\\'',\n\tformat: 'query') ~> source1\nsource1 derive(created_date = case(\r\n     greaterOrEqual(length(trim(fipcrstamp)),12 ),\r\n     case(\r\n                greater(substring(fipcrstamp,1,4),'1900')\r\n                && (greaterOrEqual(substring(fipcrstamp,5,2),'01') && lesserOrEqual(substring(fipcrstamp,5,2),'12'))\r\n                && (greaterOrEqual(substring(fipcrstamp,7,2),'01') && lesserOrEqual(substring(fipcrstamp,7,2),'31'))\r\n                && (greaterOrEqual(substring(fipcrstamp,9,2),'00') && lesserOrEqual(substring(fipcrstamp,9,2),'23'))\r\n                && (greaterOrEqual(substring(fipcrstamp,11,2),'00') && lesserOrEqual(substring(fipcrstamp,11,2),'59')) \r\n               ,toTimestamp(concat(substring(fipcrstamp,1,8),substring(fipcrstamp,9,2),':',substring(fipcrstamp,11,2)),'yyyymmdd hh:mm')\r\n               ,toTimestamp(concat(substring(fipcrstamp,1,8),substring(fipcrstamp,9,2),':',substring(fipcrstamp,11,2)),'yyyymmdd hh:mm')\r\n                ),\r\n    toTimestamp('01/01/1900 12:00','dd/mm/yyyy hh:mm')),\n\t\tasdf = toTimestamp(concat(substring(fipcrstamp,1,8),' ',substring(fipcrstamp,9,2),':',substring(fipcrstamp,11,2)),'yyyymmdd hh:mm'),\n\t\tasdfasdf = toTimestamp('01/01/1900 12:00','dd/mm/yyyy hh:mm')) ~> DerivedColumn1\nDerivedColumn1 sink(input(\n\t\tcreated_date as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tcreated_date = asdf\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}