{
	"name": "m_dim_agrement_type",
	"properties": {
		"description": "m_pre_dim_agreement_type + constant",
		"folder": {
			"name": "dwh_prepare"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "pre_dim_agreement_type",
						"type": "DatasetReference"
					},
					"name": "PreDimAgreementType"
				},
				{
					"dataset": {
						"referenceName": "dim_agreement_type",
						"type": "DatasetReference"
					},
					"name": "DimAgreementTypeInput"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dim_agreement_type",
						"type": "DatasetReference"
					},
					"name": "DimAgreementTypeUpdates"
				}
			],
			"transformations": [
				{
					"name": "AddConstant"
				},
				{
					"name": "LookupUpdates"
				},
				{
					"name": "InputFromPreviousUpdates"
				},
				{
					"name": "ConditionalSplit1"
				}
			],
			"script": "source(output(\n\t\tdescription as string,\n\t\tkey as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\twildcardPaths:['Pre_Dim/pre_dim_agreement_type.parquet']) ~> PreDimAgreementType\nsource(output(\n\t\tdescription as string,\n\t\tkey as string,\n\t\ttop_code as string,\n\t\ttop_desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\twildcardPaths:['dim/dim_agreement_type.parquet']) ~> DimAgreementTypeInput\nPreDimAgreementType derive(top_code = 'ALL',\n\t\ttop_desc = 'All Agreement Types') ~> AddConstant\nAddConstant, InputFromPreviousUpdates lookup(key == keyFromPreviousUpdates,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupUpdates\nDimAgreementTypeInput select(mapColumn(\n\t\tdescription,\n\t\tkeyFromPreviousUpdates = key,\n\t\ttop_code,\n\t\ttop_desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> InputFromPreviousUpdates\nLookupUpdates split(!isNull(keyFromPreviousUpdates),\n\tdisjoint: false) ~> ConditionalSplit1@(ExistingRows, NewRows)\nConditionalSplit1@ExistingRows sink(input(\n\t\tPK_KEY as string,\n\t\tCPT_DESCRIPTION as string,\n\t\tCPT_NUMBER as integer,\n\t\tINSERTED_BY as string,\n\t\tDATE_INSERTED as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['dim_agreement_type.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimAgreementTypeUpdates"
		}
	}
}