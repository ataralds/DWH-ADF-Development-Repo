{
	"name": "m_dim_vessel_type_group",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "VesselTypeGroup"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "LlyodsVessel"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "tcross"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dim_vessel_type_group",
						"type": "DatasetReference"
					},
					"name": "DimVesselTyprGroup"
				}
			],
			"transformations": [
				{
					"name": "Deduplicator"
				},
				{
					"name": "VesselType"
				},
				{
					"name": "VesselTypeCode"
				},
				{
					"name": "xrefvesseltype"
				},
				{
					"name": "VesselTypeCrossRef"
				},
				{
					"name": "CodeType"
				},
				{
					"name": "onlycrossref"
				},
				{
					"name": "notInVslTypeGrp"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "notin"
				},
				{
					"name": "finalunion"
				},
				{
					"name": "vesseltypegroupselected"
				},
				{
					"name": "DefaultNull"
				},
				{
					"name": "renamingcolumns"
				},
				{
					"name": "DeriveTopLevels"
				},
				{
					"name": "AlterRow"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "Aggregate2"
				}
			],
			"script": "source(output(\n\t\tvtg_key as string,\n\t\tvtg_main_group_level_1_sort as string,\n\t\tvtg_main_group_level_2_code as short,\n\t\tvtg_description as string,\n\t\tvtg_main_group_level_2_desc as string,\n\t\tvtg_main_group_level_1_desc as string,\n\t\tvtg_main_group_level_1_code as short,\n\t\tvtg_main_group_level_2_sort as string,\n\t\tdate_last_updated as timestamp,\n\t\tdate_inserted as timestamp,\n\t\tlast_updated_by as string,\n\t\tinserted_by as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_prepare.pre_dim_vessel_type_group',\n\tformat: 'query',\n\twildcardPaths:['Pre_Dim/pre_dim_vessel_type_group.parquet']) ~> VesselTypeGroup\nsource(output(\n\t\tvessel_type as string,\n\t\tvessel_type_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select vessel_type,vessel_type_code  from dwh_stage.lloyds_vessel',\n\tformat: 'query') ~> LlyodsVessel\nsource(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference',\n\tformat: 'query') ~> tcross\nLlyodsVessel aggregate(groupBy(vessel_type,\n\t\tvessel_type_code),\n\tvessel_types = first(vessel_type)) ~> Deduplicator\ntcross filter(code_type_id == 45) ~> VesselType\nDeduplicator select(mapColumn(\n\t\tvessel_type_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> VesselTypeCode\nVesselType select(mapColumn(\n\t\tTarget_Code_vessel_type = target_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefvesseltype\nVesselTypeCode, xrefvesseltype union(byName: false)~> VesselTypeCrossRef\nVesselTypeGroup select(mapColumn(\n\t\tvtg_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CodeType\nAggregate1, CodeType join(vessel_type_code == vtg_key,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> onlycrossref\nonlycrossref filter(iif(isNull(vtg_key),1,0) == 1) ~> notInVslTypeGrp\nnotInVslTypeGrp derive(NA = 'N/A',\n\t\tnot_applicable = 'Not Applicable',\n\t\tconst_number = toInteger(null())) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\tvtg_key,\n\t\tvtg_description = not_applicable,\n\t\tvtg_main_group_level_1_code = const_number,\n\t\tvtg_main_group_level_1_desc = not_applicable,\n\t\tvtg_main_group_level_1_sort = not_applicable,\n\t\tvtg_main_group_level_2_code = const_number,\n\t\tvtg_main_group_level_2_desc = not_applicable,\n\t\tvtg_main_group_level_2_sort = not_applicable\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> notin\nvesseltypegroupselected, notin union(byName: false)~> finalunion\nVesselTypeGroup select(mapColumn(\n\t\tvtg_key,\n\t\tvtg_description,\n\t\tvtg_main_group_level_1_code,\n\t\tvtg_main_group_level_1_desc,\n\t\tvtg_main_group_level_1_sort,\n\t\tvtg_main_group_level_2_code,\n\t\tvtg_main_group_level_2_desc,\n\t\tvtg_main_group_level_2_sort\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> vesseltypegroupselected\nAggregate2 derive(vtg_key = iifNull(trim(vtg_key),'N/A'),\n\t\tvtg_description = iifNull(trim(vtg_description),'N/A'),\n\t\tvtg_main_group_level_1_code = iifNull(vtg_main_group_level_1_code,0),\n\t\tvtg_main_group_level_1_desc = iifNull(trim(vtg_main_group_level_1_desc),'N/A'),\n\t\tvtg_main_group_level_1_sort = iifNull(trim(vtg_main_group_level_1_sort),'N/A'),\n\t\tvtg_main_group_level_2_code = iifNull(vtg_main_group_level_2_code,0),\n\t\tvtg_main_group_level_2_desc = iifNull(trim(vtg_main_group_level_2_desc),'N/A'),\n\t\tvtg_main_group_level_2_sort = iifNull(trim(vtg_main_group_level_2_sort),'N/A')) ~> DefaultNull\nDefaultNull select(mapColumn(\n\t\tvtg_key,\n\t\tvtg_description,\n\t\tvtg_main_group_level_1_code,\n\t\tvtg_main_group_level_1_desc,\n\t\tvtg_main_group_level_1_sort,\n\t\tvtg_main_group_level_2_code,\n\t\tvtg_main_group_level_2_desc,\n\t\tvtg_main_group_level_2_sort\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renamingcolumns\nrenamingcolumns derive(top_key = 'ALL',\n\t\ttop_description = 'All Source Systems') ~> DeriveTopLevels\nDeriveTopLevels alterRow(upsertIf(iifNull(vtg_key,'A')!='A')) ~> AlterRow\nVesselTypeCrossRef aggregate(groupBy(vessel_type_code),\n\tvessel_type_code_grp = first(vessel_type_code)) ~> Aggregate1\nfinalunion aggregate(groupBy(vtg_key),\n\teach(match(name!='vtg_key'), $$ = first($$))) ~> Aggregate2\nAlterRow sink(input(\n\t\tdimension_key as long,\n\t\tvtg_key as string,\n\t\tvtg_main_group_level_2_code as integer,\n\t\tvtg_main_group_level_1_code as integer,\n\t\ttop_key as string,\n\t\ttop_description as string,\n\t\tvtg_description as string,\n\t\tvtg_main_group_level_2_sort as string,\n\t\tvtg_main_group_level_2_desc as string,\n\t\tvtg_main_group_level_1_sort as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['vtg_key'],\n\tformat: 'table',\n\tmapColumn(\n\t\tvtg_key,\n\t\tvtg_main_group_level_2_code,\n\t\tvtg_main_group_level_1_code,\n\t\ttop_key,\n\t\ttop_description,\n\t\tvtg_description,\n\t\tvtg_main_group_level_2_sort,\n\t\tvtg_main_group_level_2_desc,\n\t\tvtg_main_group_level_1_sort\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DimVesselTyprGroup"
		}
	}
}