{
	"name": "m_fact_trading_certificate",
	"properties": {
		"folder": {
			"name": "marts/fact"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "PreFactTradingCertificate"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "DimCoverage"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "DimCurrentVessel"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "DimPartner"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "DimCapitalBranch"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "fact_trading_certificate",
						"type": "DatasetReference"
					},
					"name": "FactTradingCertificate"
				}
			],
			"transformations": [
				{
					"name": "lkpdimCoverage"
				},
				{
					"name": "lkpdimCurrentVessel"
				},
				{
					"name": "lkpdimPartner"
				},
				{
					"name": "upsert"
				},
				{
					"name": "lkpcapbranch"
				}
			],
			"script": "source(output(\n\t\tpk_trading_certificate as string,\n\t\tsection as decimal(28,10),\n\t\ttrading_certificate_type as string,\n\t\tdim_client_key as string,\n\t\tdate_valid_to as date,\n\t\tobject_key as string,\n\t\tdim_coverage_key as string,\n\t\tdm_number as decimal(28,10),\n\t\tdate_valid_from as date,\n\t\tdate_inserted as timestamp,\n\t\tlast_updated_by as string,\n\t\tinserted_by as string,\n\t\tdate_last_updated as timestamp,\n\t\tdim_capital_branch_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_prepare.pre_fact_trading_certificate',\n\tformat: 'query') ~> PreFactTradingCertificate\nsource(output(\n\t\tcov_key as string,\n\t\tdim_coverage as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select cov_key, dimension_key as dim_coverage from marts.dim_coverage',\n\tformat: 'query') ~> DimCoverage\nsource(output(\n\t\tves_key as string,\n\t\tdim_current_vessel as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select coalesce(ves_key,\\'N/A\\') as ves_key, dimension_key as dim_current_vessel from marts.dim_current_vessel',\n\tformat: 'query') ~> DimCurrentVessel\nsource(output(\n\t\tprt_key as string,\n\t\tdim_client as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select prt_key, dimension_key as dim_client from marts.dim_partner',\n\tformat: 'query') ~> DimPartner\nsource(output(\n\t\tbra_key as string,\n\t\tdim_capital_branch as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select bra_key, dimension_key as dim_capital_branch from marts.dim_capital_branch',\n\tformat: 'query') ~> DimCapitalBranch\nPreFactTradingCertificate, DimCoverage lookup(dim_coverage_key == cov_key,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpdimCoverage\nlkpdimCoverage, DimCurrentVessel lookup(object_key == ves_key,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpdimCurrentVessel\nlkpdimCurrentVessel, DimPartner lookup(dim_client_key == prt_key,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpdimPartner\nlkpcapbranch alterRow(upsertIf(true())) ~> upsert\nlkpdimPartner, DimCapitalBranch lookup(dim_capital_branch_key == bra_key,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpcapbranch\nupsert sink(input(\n\t\ttrading_certificate_key as string,\n\t\tdim_coverage as long,\n\t\tdim_current_vessel as long,\n\t\tdim_partner as long,\n\t\ttrading_certificate_type as string,\n\t\tdate_valid_from as date,\n\t\tsection as decimal(28,10),\n\t\tdate_valid_to as date,\n\t\tdm_number as decimal(28,10),\n\t\tdim_capital_branch as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\ttrading_certificate_key = pk_trading_certificate,\n\t\ttrading_certificate_type,\n\t\tdate_valid_to,\n\t\tdm_number,\n\t\tdate_valid_from,\n\t\tdim_coverage,\n\t\tdim_current_vessel,\n\t\tdim_partner = dim_client,\n\t\tdim_capital_branch\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> FactTradingCertificate"
		}
	}
}