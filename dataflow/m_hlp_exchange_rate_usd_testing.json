{
	"name": "m_hlp_exchange_rate_usd_testing",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "mapsys"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FlrCurrency"
				},
				{
					"name": "Select1_Auto_Mapping"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Filter1"
				},
				{
					"name": "Select2RuleBased"
				}
			],
			"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> mapsys\nmapsys filter(SOURCE_SYSTEM == 'PARIS' && CODE_TYPE_ID==124) ~> FlrCurrency\nFlrCurrency select(mapColumn(\n\t\tTARGET_CODE,\n\t\tTARGET_DESCRIPTION,\n\t\tNEW_TARGET_CODE = TARGET_CODE\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: true) ~> Select1_Auto_Mapping\nSelect1_Auto_Mapping derive(Derived_column = TARGET_CODE+'   dervied test',\n\t\tDerived_new_target_code = NEW_TARGET_CODE+' test') ~> DerivedColumn1\nmapsys filter(SOURCE_SYSTEM == 'PARIS' && CODE_TYPE_ID==124) ~> Filter1\nFilter1 select(mapColumn(\n\t\teach(match(startsWith(name,'TARGET')),\n\t\t\t$$+'_ruleBased' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2RuleBased"
		}
	}
}