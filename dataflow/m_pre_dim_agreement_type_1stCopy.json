{
	"name": "m_pre_dim_agreement_type_1stCopy",
	"properties": {
		"folder": {
			"name": "dwh_prepare"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "TCrossReference"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_agreement_type",
						"type": "DatasetReference"
					},
					"name": "PreDimAgreementTypeInsert"
				}
			],
			"transformations": [
				{
					"name": "FilterAgreementType113"
				},
				{
					"name": "Deduplicator"
				},
				{
					"name": "RenameOutputColumn"
				}
			],
			"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> TCrossReference\nTCrossReference filter(CODE_TYPE_ID == 113) ~> FilterAgreementType113\nFilterAgreementType113 aggregate(groupBy(TARGET_DESCRIPTION),\n\tTARGET_CODE = first(TARGET_CODE)) ~> Deduplicator\nDeduplicator select(mapColumn(\n\t\tdescription = TARGET_DESCRIPTION,\n\t\tkey = TARGET_CODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameOutputColumn\nRenameOutputColumn sink(input(\n\t\tPK_KEY as string,\n\t\tCPT_DESCRIPTION as string,\n\t\tCPT_NUMBER as integer,\n\t\tINSERTED_BY as string,\n\t\tDATE_INSERTED as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['pre_dim_agreement_type.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimAgreementTypeInsert"
		}
	}
}