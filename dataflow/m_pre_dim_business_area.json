{
	"name": "m_pre_dim_business_area",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "TCrossReference"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FilterBuinessAreaAndNoPICode"
				},
				{
					"name": "Deduplicator"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> TCrossReference\nTCrossReference filter(CODE_TYPE_ID==106 && TARGET_CODE!='PI') ~> FilterBuinessAreaAndNoPICode\nFilterBuinessAreaAndNoPICode aggregate(groupBy(TARGET_CODE,\n\t\tTARGET_DESCRIPTION),\n\teach(match(!in(['TARGET_CODE','TARGET_DESCRIPTION'],name)), $$ = first($$))) ~> Deduplicator\nDeduplicator derive(GRP_CODE = case(in(['EN','BU'],TARGET_CODE), 'EG', case(in(['PM', 'PF'], TARGET_CODE), 'PI', TARGET_CODE)),\n\t\tGRP_DESCRIPTION = case(in(['EN','BU'],TARGET_CODE), 'Energy+', case(in(['PM', 'PF'], TARGET_CODE), 'P&I', TARGET_DESCRIPTION)),\n\t\tBUA_CODE = case(in(['PM','PF'],TARGET_CODE), 'PI', TARGET_CODE),\n\t\tBUA_DESCRIPTION = case(in(['PM','PF'],TARGET_CODE), 'P&I', TARGET_DESCRIPTION),\n\t\tKEY = TARGET_CODE,\n\t\tDESCRIPTION = TARGET_DESCRIPTION) ~> DerivedColumn1"
		}
	}
}