{
	"name": "m_pre_dim_claim_team",
	"properties": {
		"description": "Created by olseir, 22.06.2020. ",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "lcctable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "lcatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "sigtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "crossreference"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "sUdvAgsEmployee"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "sUdvOrgunit"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Union1"
				},
				{
					"name": "Filter1",
					"description": "Code_type_id = 329 (employee)  and source_system = 'PARIS' "
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "Join1"
				},
				{
					"name": "AddingKeyColoum"
				},
				{
					"name": "RemoveDuplicates"
				},
				{
					"name": "Join2"
				},
				{
					"name": "Lookup2"
				}
			],
			"script": "source(output(\n\t\tlccuwsign as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select lccuwsign from dwh_stage.p_lcctable',\n\tformat: 'query') ~> lcctable\nsource(output(\n\t\tlcauwsign as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select lcauwsign from dwh_stage.p_lcatable',\n\tformat: 'query') ~> lcatable\nsource(output(\n\t\tsigsign as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select sigsign from dwh_stage.p_sigtable',\n\tformat: 'query') ~> sigtable\nsource(output(\n\t\tcode_type_id as long,\n\t\tsource_system as string,\n\t\ttarget_code as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select code_type_id, source_system,  target_code, source_code_key from dwh_stage.t_crossreference',\n\tformat: 'query') ~> crossreference\nsource(output(\n\t\tad_name as string,\n\t\tcostcenter as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select  ad_name, costcenter from dwh_stage.s_udv_ags_employee ',\n\tformat: 'query') ~> sUdvAgsEmployee\nsource(output(\n\t\tdescription as string,\n\t\tcc_value as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select description , cc_value from dwh_stage.s_udv_orgunit',\n\tformat: 'query') ~> sUdvOrgunit\nlcctable, lcatable union(byName: false)~> Union1\ncrossreference filter(code_type_id==329 && source_system == 'PARIS') ~> Filter1\nsigtable, Lookup2 lookup(sigsign == source_code_key,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nRemoveDuplicates, Lookup1 join(lccuwsign == sigsign,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive(PK_pre_dim_claim_team = concat('P',sigsign)) ~> AddingKeyColoum\nUnion1 aggregate(groupBy(lccuwsign),\n\tlccuwsign_aggr = first(lccuwsign)) ~> RemoveDuplicates\nsUdvAgsEmployee, sUdvOrgunit join(costcenter == cc_value,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> Join2\nFilter1, Join2 lookup(crossreference@target_code == ad_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup2"
		}
	}
}