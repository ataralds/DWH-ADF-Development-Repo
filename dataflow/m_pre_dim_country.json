{
	"name": "m_pre_dim_country",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "vcrossreference"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "preDimCountry",
						"type": "DatasetReference"
					},
					"name": "preDimCountry"
				}
			],
			"transformations": [
				{
					"name": "country50"
				},
				{
					"name": "area219"
				},
				{
					"name": "regionA374"
				},
				{
					"name": "region367"
				},
				{
					"name": "region219"
				},
				{
					"name": "join1xRefCountryRegion"
				},
				{
					"name": "xRefCountry50"
				},
				{
					"name": "xRefRegion219"
				},
				{
					"name": "xRefArea219"
				},
				{
					"name": "Join1"
				},
				{
					"name": "area3"
				},
				{
					"name": "JoinxRefCountryRegionA"
				},
				{
					"name": "xRefRegionA374"
				},
				{
					"name": "JoinxRefCountryRegionARegion"
				},
				{
					"name": "xRefRegion367"
				},
				{
					"name": "Join0"
				},
				{
					"name": "area2"
				},
				{
					"name": "JoinCountryRegion"
				},
				{
					"name": "JoinArea"
				},
				{
					"name": "area1"
				},
				{
					"name": "setOperation"
				},
				{
					"name": "deduplicator"
				},
				{
					"name": "expression"
				},
				{
					"name": "alterRow"
				},
				{
					"name": "predimcountrytable"
				},
				{
					"name": "TemoColumn1"
				},
				{
					"name": "TempCOlumn2"
				},
				{
					"name": "TempColumn3"
				},
				{
					"name": "TempColumn4"
				},
				{
					"name": "TempColumn5"
				}
			],
			"script": "source(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference',\n\tformat: 'query') ~> vcrossreference\nvcrossreference filter(code_type_id==50) ~> country50\nvcrossreference filter(code_type_id==219) ~> area219\nvcrossreference filter(code_type_id==374) ~> regionA374\nvcrossreference filter(code_type_id==367) ~> region367\nvcrossreference filter(code_type_id==219) ~> region219\nxRefCountry50, xRefRegion219 join(country_parent_target_code == region_target_code\n\t&& country_parent_code_type_id == region_code_type_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> join1xRefCountryRegion\nTempColumn5 select(mapColumn(\n\t\tcountry_source_code_key = source_code_key,\n\t\tcountry_source_system = source_system,\n\t\tcountry_target_code = target_code,\n\t\tcountry_target_description = target_description,\n\t\tcountry_code_type = code_type,\n\t\tcountry_code_type_id = code_type_id,\n\t\tcountry_parent_code_type_id = parent_code_type_id,\n\t\tcountry_parent_target_code = parent_target_code,\n\t\tcountry_code2 = code2,\n\t\tcountry_om_x_ref = om_x_ref\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xRefCountry50\nTemoColumn1 select(mapColumn(\n\t\tregion_source_code_key = source_code_key,\n\t\tregion_source_system = source_system,\n\t\tregion_target_code = target_code,\n\t\tregion_target_description = target_description,\n\t\tregion_code_type = code_type,\n\t\tregion_code_type_id = code_type_id,\n\t\tregion_parent_code_type_id = parent_code_type_id,\n\t\tregion_parent_target_code = parent_target_code,\n\t\tregion_code2 = code2,\n\t\tregion_om_x_ref = om_x_ref\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xRefRegion219\nTempColumn4 select(mapColumn(\n\t\tarea_source_code_key = source_code_key,\n\t\tarea_source_system = source_system,\n\t\tarea_target_code = target_code,\n\t\tarea_target_description = target_description,\n\t\tarea_code_type = code_type,\n\t\tarea_code_type_id = code_type_id,\n\t\tarea_parent_code_type_id = parent_code_type_id,\n\t\tarea_parent_target_code = parent_code_type_id,\n\t\tarea_code2 = code2,\n\t\tarea_om_x_ref = om_x_ref\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xRefArea219\njoin1xRefCountryRegion, xRefArea219 join(country_parent_target_code == area_target_code\n\t&& country_parent_code_type_id == area_code_type_id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join1\nJoin1 select(mapColumn(\n\t\tcountry_target_code,\n\t\tcountry_target_description,\n\t\tcountry_code2,\n\t\tcountry_om_x_ref,\n\t\tregion_target_code,\n\t\tregion_target_description,\n\t\tarea_target_code,\n\t\tarea_target_description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> area3\nxRefCountry50, xRefRegionA374 join(country_parent_code_type_id == region_A_code_type_id\n\t&& country_parent_target_code == region_A_target_code,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinxRefCountryRegionA\nTempColumn3 select(mapColumn(\n\t\tregion_A_source_code_key = source_code_key,\n\t\tregion_A_source_system = source_system,\n\t\tregion_A_target_code = target_code,\n\t\tregion_A_target_description = target_description,\n\t\tregion_A_code_type = code_type,\n\t\tregion_A_code_type_id = code_type_id,\n\t\tregion_A_parent_code_type_id = parent_code_type_id,\n\t\tregion_A_parent_target_code = parent_target_code,\n\t\tregion_A_code2 = code2,\n\t\tregion_A_om_x_ref = om_x_ref\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xRefRegionA374\nJoinxRefCountryRegionA, xRefRegion367 join(region_A_parent_code_type_id == region_code_type_id\n\t&& region_A_parent_target_code == region_target_code,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinxRefCountryRegionARegion\nTempCOlumn2 select(mapColumn(\n\t\tregion_source_code_key = source_code_key,\n\t\tregion_source_system = source_system,\n\t\tregion_target_code = target_code,\n\t\tregion_target_description = target_description,\n\t\tregion_code_type = code_type,\n\t\tregion_code_type_id = code_type_id,\n\t\tregion_parent_code_type_id = parent_code_type_id,\n\t\tregion_parent_target_code = parent_target_code,\n\t\tregion_code2 = code2,\n\t\tregion_om_x_ref = om_x_ref\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xRefRegion367\nJoinxRefCountryRegionARegion, xRefArea219 join(region_parent_code_type_id == area_code_type_id\n\t&& region_parent_target_code == area_target_code,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> Join0\nJoin0 select(mapColumn(\n\t\tcountry_target_code,\n\t\tcountry_target_description,\n\t\tcountry_code2,\n\t\tcountry_om_x_ref,\n\t\tregion_target_code,\n\t\tregion_target_description,\n\t\tarea_target_code,\n\t\tarea_target_description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> area2\nxRefCountry50, xRefRegion367 join(country_parent_code_type_id == region_code_type_id\n\t&& country_parent_target_code == region_target_code,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinCountryRegion\nJoinCountryRegion, xRefArea219 join(region_parent_code_type_id == area_code_type_id\n\t&& region_parent_target_code == area_target_code,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinArea\nJoinArea select(mapColumn(\n\t\tcountry_target_code,\n\t\tcountry_target_description,\n\t\tcountry_code2,\n\t\tcountry_om_x_ref,\n\t\tregion_target_code,\n\t\tregion_target_description,\n\t\tarea_target_code,\n\t\tarea_target_description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> area1\narea1, area2, area3 union(byName: true)~> setOperation\nsetOperation aggregate(groupBy(country_target_description,\n\t\tcountry_code2,\n\t\tcountry_om_x_ref,\n\t\tregion_target_code,\n\t\tregion_target_description,\n\t\tarea_target_code,\n\t\tarea_target_description),\n\tcountry_target_code = first(country_target_code)) ~> deduplicator\ndeduplicator derive(ar2_target_code = case\n(\n    compare(area_target_code,'AME')==0, area_target_code, \n    (\n        case\n        (\n            compare(area_target_code,'ASI')==0, area_target_code, \n            (\n                case\n                    (\n                        compare(area_target_code,'EUR')==0, \n                        \n                            case\n                                (\n                                    compare(region_target_code,'SCA')==0, region_target_code, area_target_code \n                                ), \n                                case\n                                    (\n                                        compare(area_target_code,'RUS')==0, 'EUR', 'OTH'\n                                    ) \n                        \n                    )\n            )\n        )\n    )\n),\n\t\tar2_target_description = case\n(\n    compare(area_target_code,'AME')==0, area_target_description, \n    (\n        case\n        (\n            compare(area_target_code,'ASI')==0, area_target_description, \n            (\n                case\n                    (\n                        compare(area_target_code,'EUR')==0, \n                        \n                            case\n                                (\n                                    compare(region_target_code,'SCA')==0, region_target_description, area_target_description \n                                ), \n                                case\n                                    (\n                                        compare(area_target_code,'RUS')==0, 'Europe', 'Other'\n                                    ) \n                        \n                    )\n            )\n        )\n    )\n),\n\t\tlast_updated_by = 'm_pre_dim_country',\n\t\tcon_2ltr_code = '',\n\t\tcon_country_name = '',\n\t\tcon_oecd = '',\n\t\tcon_currency_code = '',\n\t\tcon_eu = '') ~> expression\npredimcountrytable alterRow(upsertIf(!isNull(pk_key))) ~> alterRow\nexpression select(mapColumn(\n\t\tpk_key = country_target_code,\n\t\treg_code = region_target_code,\n\t\treg_description = region_target_description,\n\t\tar1_code = area_target_code,\n\t\tar1_description = area_target_description,\n\t\tar2_code = ar2_target_code,\n\t\tar2_description = ar2_target_description,\n\t\tlast_updated_by,\n\t\tcon_2ltr_code,\n\t\tcon_country_name,\n\t\tcon_oecd,\n\t\tcon_currency_code,\n\t\tcon_eu\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> predimcountrytable\nregion219 derive(parent_code_type_id = 0,\n\t\tparent_target_code = '') ~> TemoColumn1\nregion367 derive(parent_code_type_id = 0,\n\t\tparent_target_code = '') ~> TempCOlumn2\nregionA374 derive(parent_code_type_id = 0,\n\t\tparent_target_code = '') ~> TempColumn3\narea219 derive(parent_code_type_id = 0,\n\t\tparent_target_code = '') ~> TempColumn4\ncountry50 derive(parent_code_type_id = 0,\n\t\tparent_target_code = '') ~> TempColumn5\nalterRow sink(input(\n\t\tpk_key as string,\n\t\tar1_description as string,\n\t\tdate_last_updated as timestamp,\n\t\treg_code as string,\n\t\tcon_2ltr_code as string,\n\t\tcon_currency_code as string,\n\t\tar1_code as string,\n\t\tcon_oecd as string,\n\t\tlast_updated_by as string,\n\t\tcon_country_name as string,\n\t\tinserted_by as string,\n\t\tcon_eu as string,\n\t\treg_description as string,\n\t\tdate_inserted as timestamp,\n\t\tar2_code as string,\n\t\tar2_description as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> preDimCountry"
		}
	}
}