{
	"name": "m_pre_dim_country",
	"properties": {
		"folder": {
			"name": "dwh_prepare"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "VCrossReference"
				},
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "TCrossReference"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "TVCrossRef"
				},
				{
					"name": "COUNTRY50"
				},
				{
					"name": "AREA219"
				},
				{
					"name": "REGIONA374"
				},
				{
					"name": "REGION367"
				},
				{
					"name": "REGION219"
				},
				{
					"name": "Join1COUNTRYREGION"
				},
				{
					"name": "PrefixCOUNTRY50"
				},
				{
					"name": "PrefixREGION219"
				},
				{
					"name": "PrefixAREA219"
				},
				{
					"name": "Join1"
				},
				{
					"name": "AREA3"
				},
				{
					"name": "Join0COUNTRYREGIONA"
				},
				{
					"name": "PrefixREGIONA374"
				},
				{
					"name": "Join0COUNTRYREGIONAREGION"
				},
				{
					"name": "PrefixREGION367"
				},
				{
					"name": "Join0"
				},
				{
					"name": "AREA2"
				},
				{
					"name": "JoinCOUNTRYREGION"
				},
				{
					"name": "Join"
				},
				{
					"name": "AREA1"
				},
				{
					"name": "SetOperation"
				},
				{
					"name": "Deduplicator"
				},
				{
					"name": "Expression"
				}
			],
			"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tPARENT_CODE_TYPE_ID as double,\n\t\tPARENT_TARGET_CODE as string,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> VCrossReference\nsource(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> TCrossReference\nVCrossReference, TCrossReference union(byName: true)~> TVCrossRef\nTVCrossRef filter(CODE_TYPE_ID==50) ~> COUNTRY50\nTVCrossRef filter(CODE_TYPE_ID==219) ~> AREA219\nTVCrossRef filter(CODE_TYPE_ID==374) ~> REGIONA374\nTVCrossRef filter(CODE_TYPE_ID==367) ~> REGION367\nTVCrossRef filter(CODE_TYPE_ID==219) ~> REGION219\nPrefixCOUNTRY50, PrefixREGION219 join(COUNTRY_PARENT_TARGET_CODE == REGION_TARGET_CODE\n\t&& COUNTRY_PARENT_CODE_TYPE_ID == REGION_CODE_TYPE_ID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1COUNTRYREGION\nCOUNTRY50 select(mapColumn(\n\t\tCOUNTRY_SOURCE_CODE_KEY = SOURCE_CODE_KEY,\n\t\tCOUNTRY_SOURCE_SYSTEM = SOURCE_SYSTEM,\n\t\tCOUNTRY_TARGET_CODE = TARGET_CODE,\n\t\tCOUNTRY_TARGET_DESCRIPTION = TARGET_DESCRIPTION,\n\t\tCOUNTRY_CODE_TYPE = CODE_TYPE,\n\t\tCOUNTRY_CODE_TYPE_ID = CODE_TYPE_ID,\n\t\tCOUNTRY_PARENT_CODE_TYPE_ID = PARENT_CODE_TYPE_ID,\n\t\tCOUNTRY_PARENT_TARGET_CODE = PARENT_TARGET_CODE,\n\t\tCOUNTRY_CODE2 = CODE2,\n\t\tCOUNTRY_OM_X_REF = OM_X_REF\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PrefixCOUNTRY50\nREGION219 select(mapColumn(\n\t\tREGION_SOURCE_CODE_KEY = SOURCE_CODE_KEY,\n\t\tREGION_SOURCE_SYSTEM = SOURCE_SYSTEM,\n\t\tREGION_TARGET_CODE = TARGET_CODE,\n\t\tREGION_TARGET_DESCRIPTION = TARGET_DESCRIPTION,\n\t\tREGION_CODE_TYPE = CODE_TYPE,\n\t\tREGION_CODE_TYPE_ID = CODE_TYPE_ID,\n\t\tREGION_PARENT_CODE_TYPE_ID = PARENT_CODE_TYPE_ID,\n\t\tREGION_PARENT_TARGET_CODE = PARENT_TARGET_CODE,\n\t\tREGION_CODE2 = CODE2,\n\t\tREGION_OM_X_REF = OM_X_REF\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PrefixREGION219\nAREA219 select(mapColumn(\n\t\tAREA_SOURCE_CODE_KEY = SOURCE_CODE_KEY,\n\t\tAREA_SOURCE_SYSTEM = SOURCE_SYSTEM,\n\t\tAREA_TARGET_CODE = TARGET_CODE,\n\t\tAREA_TARGET_DESCRIPTION = TARGET_DESCRIPTION,\n\t\tAREA_CODE_TYPE = CODE_TYPE,\n\t\tAREA_CODE_TYPE_ID = CODE_TYPE_ID,\n\t\tAREA_PARENT_CODE_TYPE_ID = PARENT_CODE_TYPE_ID,\n\t\tAREA_PARENT_TARGET_CODE = PARENT_TARGET_CODE,\n\t\tAREA_CODE2 = CODE2,\n\t\tAREA_OM_X_REF = OM_X_REF\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PrefixAREA219\nJoin1COUNTRYREGION, PrefixAREA219 join(COUNTRY_PARENT_TARGET_CODE == AREA_TARGET_CODE\n\t&& COUNTRY_PARENT_CODE_TYPE_ID == AREA_CODE_TYPE_ID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nJoin1 select(mapColumn(\n\t\tCOUNTRY_TARGET_CODE,\n\t\tCOUNTRY_TARGET_DESCRIPTION,\n\t\tCOUNTRY_CODE2,\n\t\tCOUNTRY_OM_X_REF,\n\t\tREGION_TARGET_CODE,\n\t\tREGION_TARGET_DESCRIPTION,\n\t\tAREA_TARGET_CODE,\n\t\tAREA_TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AREA3\nPrefixCOUNTRY50, PrefixREGIONA374 join(COUNTRY_PARENT_CODE_TYPE_ID == REGION_A_CODE_TYPE_ID\n\t&& COUNTRY_PARENT_TARGET_CODE == REGION_A_TARGET_CODE,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join0COUNTRYREGIONA\nREGIONA374 select(mapColumn(\n\t\tREGION_A_SOURCE_CODE_KEY = SOURCE_CODE_KEY,\n\t\tREGION_A_SOURCE_SYSTEM = SOURCE_SYSTEM,\n\t\tREGION_A_TARGET_CODE = TARGET_CODE,\n\t\tREGION_A_TARGET_DESCRIPTION = TARGET_DESCRIPTION,\n\t\tREGION_A_CODE_TYPE = CODE_TYPE,\n\t\tREGION_A_CODE_TYPE_ID = CODE_TYPE_ID,\n\t\tREGION_A_PARENT_CODE_TYPE_ID = PARENT_CODE_TYPE_ID,\n\t\tREGION_A_PARENT_TARGET_CODE = PARENT_TARGET_CODE,\n\t\tREGION_A_CODE2 = CODE2,\n\t\tREGION_A_OM_X_REF = OM_X_REF\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PrefixREGIONA374\nJoin0COUNTRYREGIONA, PrefixREGION367 join(REGION_A_PARENT_CODE_TYPE_ID == REGION_CODE_TYPE_ID\n\t&& REGION_A_PARENT_TARGET_CODE == REGION_TARGET_CODE,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join0COUNTRYREGIONAREGION\nREGION367 select(mapColumn(\n\t\tREGION_SOURCE_CODE_KEY = SOURCE_CODE_KEY,\n\t\tREGION_SOURCE_SYSTEM = SOURCE_SYSTEM,\n\t\tREGION_TARGET_CODE = TARGET_CODE,\n\t\tREGION_TARGET_DESCRIPTION = TARGET_DESCRIPTION,\n\t\tREGION_CODE_TYPE = CODE_TYPE,\n\t\tREGION_CODE_TYPE_ID = CODE_TYPE_ID,\n\t\tREGION_PARENT_CODE_TYPE_ID = PARENT_CODE_TYPE_ID,\n\t\tREGION_PARENT_TARGET_CODE = PARENT_TARGET_CODE,\n\t\tREGION_CODE2 = CODE2,\n\t\tREGION_OM_X_REF = OM_X_REF\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PrefixREGION367\nJoin0COUNTRYREGIONAREGION, PrefixAREA219 join(REGION_PARENT_CODE_TYPE_ID == AREA_CODE_TYPE_ID\n\t&& REGION_PARENT_TARGET_CODE == AREA_TARGET_CODE,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join0\nJoin0 select(mapColumn(\n\t\tCOUNTRY_TARGET_CODE,\n\t\tCOUNTRY_TARGET_DESCRIPTION,\n\t\tCOUNTRY_CODE2,\n\t\tCOUNTRY_OM_X_REF,\n\t\tREGION_TARGET_CODE,\n\t\tREGION_TARGET_DESCRIPTION,\n\t\tAREA_TARGET_CODE,\n\t\tAREA_TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AREA2\nPrefixCOUNTRY50, PrefixREGION367 join(COUNTRY_PARENT_CODE_TYPE_ID == REGION_CODE_TYPE_ID\n\t&& COUNTRY_PARENT_TARGET_CODE == REGION_TARGET_CODE,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> JoinCOUNTRYREGION\nJoinCOUNTRYREGION, PrefixAREA219 join(REGION_PARENT_CODE_TYPE_ID == AREA_CODE_TYPE_ID\n\t&& REGION_PARENT_TARGET_CODE == AREA_TARGET_CODE,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join\nJoin select(mapColumn(\n\t\tCOUNTRY_TARGET_CODE,\n\t\tCOUNTRY_TARGET_DESCRIPTION,\n\t\tCOUNTRY_CODE2,\n\t\tCOUNTRY_OM_X_REF,\n\t\tREGION_TARGET_CODE,\n\t\tREGION_TARGET_DESCRIPTION,\n\t\tAREA_TARGET_CODE,\n\t\tAREA_TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AREA1\nAREA1, AREA2, AREA3 union(byName: true)~> SetOperation\nSetOperation aggregate(groupBy(COUNTRY_TARGET_CODE,\n\t\tCOUNTRY_CODE2,\n\t\tCOUNTRY_OM_X_REF,\n\t\tREGION_TARGET_CODE,\n\t\tREGION_TARGET_DESCRIPTION,\n\t\tAREA_TARGET_CODE,\n\t\tAREA_TARGET_DESCRIPTION),\n\tCOUNTRY_TARGET_DESCRIPTION = first(COUNTRY_TARGET_DESCRIPTION)) ~> Deduplicator\nDeduplicator derive(TARGET_CODE_AR2 = case\r\n(\r\n    compare(AREA_TARGET_CODE,'AME')==0, AREA_TARGET_CODE, \r\n    (\r\n        case\r\n        (\r\n            compare(AREA_TARGET_CODE,'ASI')==0, AREA_TARGET_CODE, \r\n            (\r\n                case\r\n                    (\r\n                        compare(AREA_TARGET_CODE,'EUR')==0, \r\n                        \r\n                            case\r\n                                (\r\n                                    compare(REGION_TARGET_CODE,'SCA')==0, REGION_TARGET_CODE, AREA_TARGET_CODE \r\n                                ), \r\n                                case\r\n                                    (\r\n                                        compare(AREA_TARGET_CODE,'RUS')==0, 'EUR', 'OTH'\r\n                                    ) \r\n                        \r\n                    )\r\n            )\r\n        )\r\n    )\r\n),\n\t\tTARGET_DESC_AR2 = case\r\n(\r\n    compare(AREA_TARGET_CODE,'AME')==0, AREA_TARGET_DESCRIPTION, \r\n    (\r\n        case\r\n        (\r\n            compare(AREA_TARGET_CODE,'ASI')==0, AREA_TARGET_DESCRIPTION, \r\n            (\r\n                case\r\n                    (\r\n                        compare(AREA_TARGET_CODE,'EUR')==0, \r\n                        \r\n                            case\r\n                                (\r\n                                    compare(REGION_TARGET_CODE,'SCA')==0, REGION_TARGET_DESCRIPTION, AREA_TARGET_DESCRIPTION \r\n                                ), \r\n                                case\r\n                                    (\r\n                                        compare(AREA_TARGET_CODE,'RUS')==0, 'Europe', 'Other'\r\n                                    ) \r\n                        \r\n                    )\r\n            )\r\n        )\r\n    )\r\n)) ~> Expression"
		}
	}
}