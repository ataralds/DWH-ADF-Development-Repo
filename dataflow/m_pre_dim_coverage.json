{
	"name": "m_pre_dim_coverage",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "TCrossReference"
				},
				{
					"dataset": {
						"referenceName": "Oltp05",
						"type": "DatasetReference"
					},
					"name": "CoverageGroup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_coverage",
						"type": "DatasetReference"
					},
					"name": "preDimCoverage"
				}
			],
			"transformations": [
				{
					"name": "ProdGroups",
					"description": "Filtering rows on 'CODE_TYPE_ID' =-3"
				},
				{
					"name": "CoverageCodes",
					"description": "Filtering rows on 'CODE_TYPE_ID' = 122 (Coverage code)"
				},
				{
					"name": "CoverageColumns",
					"description": "Removing unused columns"
				},
				{
					"name": "ProdColumns",
					"description": "Removing unused columns"
				},
				{
					"name": "JoinProdAndCoverage"
				},
				{
					"name": "Deduplicate"
				},
				{
					"name": "DerviveProdGroupProdDesc",
					"description": "Creatingprd product_group and pruduct_desc"
				},
				{
					"name": "LookupCoverageGroup"
				},
				{
					"name": "SelectOutputColumns"
				},
				{
					"name": "SortTable"
				},
				{
					"name": "DeriveConstants"
				}
			],
			"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> TCrossReference\nsource(output(\n\t\tcoverage_code as string,\n\t\tcoverage_desc as string,\n\t\tdate_inserted as timestamp,\n\t\tdate_updated as timestamp,\n\t\tenergy_exp_group_code as string,\n\t\tenergy_exp_group_desc as string,\n\t\texposure_group_code as string,\n\t\texposure_group_desc as string,\n\t\tgic_group_code as string,\n\t\tgic_group_desc as string,\n\t\tinserted_by as string,\n\t\tlayer_group_code as string,\n\t\tlayer_group_descr as string,\n\t\tpk_coverage_group as double,\n\t\tsort_order as double,\n\t\tupdated_by as string,\n\t\twar_indicator as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> CoverageGroup\nTCrossReference filter(CODE_TYPE_ID == -3) ~> ProdGroups\nTCrossReference filter(CODE_TYPE_ID == 122) ~> CoverageCodes\nCoverageCodes select(mapColumn(\n\t\tcoverage_source_code = SOURCE_CODE_KEY,\n\t\tsource_system = SOURCE_SYSTEM,\n\t\tcoverage_target_code = TARGET_CODE,\n\t\tcoverage_target_desc = TARGET_DESCRIPTION,\n\t\tcode_type = CODE_TYPE,\n\t\tcode_type_id = CODE_TYPE_ID,\n\t\tcode2 = CODE2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> CoverageColumns\nProdGroups select(mapColumn(\n\t\tcoverage_source_code = SOURCE_CODE_KEY,\n\t\tprd_group_target_code = TARGET_CODE,\n\t\tsource_system = SOURCE_SYSTEM,\n\t\tprd_group_target_desc = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ProdColumns\nCoverageColumns, ProdColumns join(CoverageColumns@coverage_source_code == ProdColumns@coverage_source_code\n\t&& CoverageColumns@source_system == ProdColumns@source_system,\n\tjoinType:'left',\n\tbroadcast: 'none')~> JoinProdAndCoverage\nDerviveProdGroupProdDesc aggregate(groupBy(coverage_target_code,\n\t\tproduct_group,\n\t\tproduct_descr,\n\t\tcode2),\n\tcoverage_target_desc = first(coverage_target_desc)) ~> Deduplicate\nJoinProdAndCoverage derive(product_group = coalesce(prd_group_target_code,'N/A'),\n\t\tproduct_descr = coalesce(prd_group_target_desc, 'Not Applicable')) ~> DerviveProdGroupProdDesc\nDeduplicate, CoverageGroup lookup(coverage_target_code == coverage_code,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupCoverageGroup\nDeriveConstants select(mapColumn(\n\t\tpk_key = coverage_target_code,\n\t\tcov_description = coverage_target_desc,\n\t\tcov_exposure_group_code = exposure_group_code,\n\t\tcov_exposure_group_desc = exposure_group_desc,\n\t\tgrp_key = product_group,\n\t\tgrp_description = product_descr,\n\t\tcov_energy_exp_group_code = energy_exp_group_code,\n\t\tcov_energy_exp_group_desc = energy_exp_group_desc,\n\t\tcov_layer_group_code = layer_group_code,\n\t\tcov_layer_group_descr = layer_group_descr,\n\t\tcov_gic_group_code = gic_group_code,\n\t\tcov_gic_group_desc = gic_group_desc,\n\t\tcov_3ltr_code = code2,\n\t\tlast_updatet_by\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOutputColumns\nSelectOutputColumns sort(asc(pk_key, true)) ~> SortTable\nLookupCoverageGroup derive(last_updatet_by = 'm_pre_dim_coverage') ~> DeriveConstants\nSortTable sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['pre_dim_coverage.parquet'],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> preDimCoverage"
		}
	}
}