{
	"name": "m_pre_dim_coverage",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "TCrossReference"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "CoverageGroup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_coverage",
						"type": "DatasetReference"
					},
					"name": "preDimCoverageInsert"
				}
			],
			"transformations": [
				{
					"name": "filterCoverageCodes",
					"description": "Filtering rows on 'CODE_TYPE_ID' = 122 (Coverage code)"
				},
				{
					"name": "xRefCoverage",
					"description": "Removing unused columns"
				},
				{
					"name": "Deduplicate"
				},
				{
					"name": "DerviveProdGroupProdDesc",
					"description": "Creating prd product_group and pruduct_desc"
				},
				{
					"name": "LookupCoverageGroup"
				},
				{
					"name": "SelectOutputColumns"
				},
				{
					"name": "LastUpdatedBy",
					"description": "Creating constant 'lastUpdatedBy'"
				},
				{
					"name": "AlterRow"
				}
			],
			"script": "source(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * \\nfrom dwh_stage.t_crossreference',\n\tformat: 'query') ~> TCrossReference\nsource(output(\n\t\tenergy_exp_group_desc as string,\n\t\tsort_order as long,\n\t\tcoverage_desc as string,\n\t\tlayer_group_descr as string,\n\t\tgic_group_desc as string,\n\t\twar_indicator as string,\n\t\tdate_updated as date,\n\t\tpk_coverage_group as long,\n\t\tupdated_by as string,\n\t\tcoverage_code as string,\n\t\tinserted_by as string,\n\t\tdate_inserted as date,\n\t\texposure_group_code as string,\n\t\texposure_group_desc as string,\n\t\tgic_group_code as string,\n\t\tlayer_group_code as string,\n\t\tenergy_exp_group_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select *\\nfrom dwh_stage.sta_coverage_group',\n\tformat: 'query') ~> CoverageGroup\nTCrossReference filter(code_type_id == 122) ~> filterCoverageCodes\nfilterCoverageCodes select(mapColumn(\n\t\teach(match(true()),\n\t\t\t$$ + '_coverage' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xRefCoverage\nDerviveProdGroupProdDesc aggregate(groupBy(product_group,\n\t\tproduct_descr,\n\t\tcode2_coverage,\n\t\ttarget_description_coverage),\n\ttarget_code_coverage = first(target_code_coverage)) ~> Deduplicate\nxRefCoverage derive(product_group = 'N/A',\n\t\tproduct_descr = 'Not Applicable') ~> DerviveProdGroupProdDesc\nDeduplicate, CoverageGroup lookup(coverage_target_code == coverage_code,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCoverageGroup\nLastUpdatedBy select(mapColumn(\n\t\tpk_key = target_description_coverage,\n\t\tcov_description = target_code_coverage,\n\t\tcov_exposure_group_code = exposure_group_code,\n\t\tcov_exposure_group_desc = exposure_group_desc,\n\t\tgrp_key = product_group,\n\t\tgrp_description = product_descr,\n\t\tcov_energy_exp_group_code = energy_exp_group_code,\n\t\tcov_energy_exp_group_desc = energy_exp_group_desc,\n\t\tcov_layer_group_code = layer_group_code,\n\t\tcov_layer_group_descr = layer_group_descr,\n\t\tcov_gic_group_code = gic_group_code,\n\t\tcov_gic_group_desc = gic_group_desc,\n\t\tcov_3ltr_code = target_description_coverage,\n\t\tlast_updated_by\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOutputColumns\nLookupCoverageGroup derive(last_updated_by = 'm_pre_dim_coverage') ~> LastUpdatedBy\nSelectOutputColumns alterRow(upsertIf(true())) ~> AlterRow\nAlterRow sink(input(\n\t\tpk_key as string,\n\t\tcov_exposure_group_desc as string,\n\t\tcov_3ltr_code as string,\n\t\tcov_energy_exp_group_desc as string,\n\t\tcov_gic_group_code as string,\n\t\tcov_layer_group_code as string,\n\t\tcov_exposure_group_code as string,\n\t\tgrp_key as string,\n\t\tcov_description as string,\n\t\tcov_layer_group_descr as string,\n\t\tcov_energy_exp_group_code as string,\n\t\tgrp_description as string,\n\t\tcov_gic_group_desc as string,\n\t\tdate_last_updated as timestamp,\n\t\tdate_inserted as timestamp,\n\t\tlast_updated_by as string,\n\t\tinserted_by as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['pk_key'],\n\tformat: 'table',\n\tmapColumn(\n\t\tpk_key,\n\t\tcov_exposure_group_desc,\n\t\tcov_3ltr_code,\n\t\tcov_energy_exp_group_desc,\n\t\tcov_gic_group_code,\n\t\tcov_layer_group_code,\n\t\tcov_exposure_group_code,\n\t\tcov_description,\n\t\tcov_layer_group_descr,\n\t\tcov_energy_exp_group_code,\n\t\tcov_gic_group_desc,\n\t\tlast_updated_by\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> preDimCoverageInsert"
		}
	}
}