{
	"name": "m_pre_dim_coverage_test",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "dwh_stage_mapsys",
						"type": "DatasetReference"
					},
					"name": "TCrossReference"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FilterCodeTypeIDEquals122"
				},
				{
					"name": "FilterCodeTypeIDEqualsMinus3"
				},
				{
					"name": "JoinPrdGroups"
				},
				{
					"name": "ChangeToPrdNames"
				},
				{
					"name": "ChangeToCoverageNames"
				},
				{
					"name": "SetNotAppliacable"
				},
				{
					"name": "Deduplicate"
				},
				{
					"name": "RemoveUnusedColumns"
				}
			],
			"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> TCrossReference\nTCrossReference filter(CODE_TYPE_ID == 122) ~> FilterCodeTypeIDEquals122\nTCrossReference filter(CODE_TYPE_ID == -3) ~> FilterCodeTypeIDEqualsMinus3\nChangeToCoverageNames, ChangeToPrdNames join(ChangeToCoverageNames@COVERAGE_SOURCE_CODE == ChangeToPrdNames@COVERAGE_SOURCE_CODE\n\t&& ChangeToCoverageNames@SOURCE_SYSTEM == ChangeToPrdNames@SOURCE_SYSTEM,\n\tjoinType:'left',\n\tbroadcast: 'none')~> JoinPrdGroups\nFilterCodeTypeIDEqualsMinus3 select(mapColumn(\n\t\tCOVERAGE_SOURCE_CODE = SOURCE_CODE_KEY,\n\t\tSOURCE_SYSTEM,\n\t\tPRD_GROUP_TARGET_CODE = TARGET_CODE,\n\t\tPRD_GROUP_TARGET_DESCR = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ChangeToPrdNames\nFilterCodeTypeIDEquals122 select(mapColumn(\n\t\tCOVERAGE_SOURCE_CODE = SOURCE_CODE_KEY,\n\t\tSOURCE_SYSTEM,\n\t\tCOVERAGE_TARGET_CODE = TARGET_CODE,\n\t\tCOVERAGE_TARGET_DESCR = TARGET_DESCRIPTION,\n\t\tCODE_TYPE_ID,\n\t\tCODE2,\n\t\tOM_X_REF\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ChangeToCoverageNames\nJoinPrdGroups derive(PRD_GROUP_TARGET_CODE = case(isNull(PRD_GROUP_TARGET_CODE),'N/A', PRD_GROUP_TARGET_CODE),\n\t\tPRD_GROUP_TARGET_DESCR = case(isNull(PRD_GROUP_TARGET_DESCR), 'Not Applicable', PRD_GROUP_TARGET_DESCR)) ~> SetNotAppliacable\nRemoveUnusedColumns aggregate(groupBy(COVERAGE_TARGET_CODE),\n\teach(match(name !='COVERAGE_TARGET_CODE'), $$ = first($$))) ~> Deduplicate\nSetNotAppliacable select(mapColumn(\n\t\tCOVERAGE_TARGET_CODE,\n\t\tCOVERAGE_TARGET_DESCR,\n\t\tCODE2,\n\t\tPRD_GROUP_TARGET_CODE,\n\t\tPRD_GROUP_TARGET_DESCR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveUnusedColumns"
		}
	}
}