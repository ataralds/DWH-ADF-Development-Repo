{
	"name": "m_pre_dim_currency",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "HlpExchangeRateToUsd"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "tCrossReference"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_currency",
						"type": "DatasetReference"
					},
					"name": "preDimCurrency"
				}
			],
			"transformations": [
				{
					"name": "FilterDates",
					"description": "Filtering rows on 'EXCHANGE_FROM_DATE' <= currentTimestamp"
				},
				{
					"name": "AllExchangeDates",
					"description": "Removing unused columns"
				},
				{
					"name": "NewestExchangeDates",
					"description": "Get newest ExchangeFromDate for each currency"
				},
				{
					"name": "JoinNewestDateWithRate",
					"description": "Inner join to get newest exchange rate for each currency"
				},
				{
					"name": "LastKnownRate",
					"description": "Creating/updating columns"
				},
				{
					"name": "xrefCurrency"
				},
				{
					"name": "Deduplicate"
				},
				{
					"name": "RemoveExtraColumn",
					"description": "Remove duplicated column"
				},
				{
					"name": "Expression",
					"description": "Case currency from is USD, rate equals 1.\nAdd last_updated_by column"
				},
				{
					"name": "LookupAllCurrencies"
				},
				{
					"name": "SelectOutputColums",
					"description": "Selecting and renaming relevant columns"
				},
				{
					"name": "ReplaceNull",
					"description": "Replacing null values with N/A"
				},
				{
					"name": "AlterRow",
					"description": "Upsert if not null"
				},
				{
					"name": "currency124"
				},
				{
					"name": "DeriveNTcolumns"
				}
			],
			"script": "source(output(\n\t\texchange_from_date as date,\n\t\texchange_rate as decimal(28,10),\n\t\tfrom_currency_code as string,\n\t\tto_currency_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select exchange_from_date, exchange_rate, from_currency_code, to_currency_code\\nfrom dwh_stage.hlp_exchange_rate_to_usd',\n\tformat: 'query') ~> HlpExchangeRateToUsd\nsource(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference',\n\tformat: 'query') ~> tCrossReference\nHlpExchangeRateToUsd filter(exchange_from_date <= currentDate()) ~> FilterDates\nHlpExchangeRateToUsd select(mapColumn(\n\t\texchange_rate_allDates = exchange_rate,\n\t\tfrom_currency_code_allDates = from_currency_code,\n\t\texchange_from_date_allDates = exchange_from_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> AllExchangeDates\nFilterDates aggregate(groupBy(from_currency_code),\n\texchange_from_date = max(exchange_from_date)) ~> NewestExchangeDates\nNewestExchangeDates, AllExchangeDates join(from_currency_code == from_currency_code_allDates\n\t&& exchange_from_date == exchange_from_date_allDates,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinNewestDateWithRate\nRemoveExtraColumn derive(exchange_rate = case(exchange_rate==0, toDecimal(null()),toDecimal(exchange_rate))) ~> LastKnownRate\ncurrency124 select(mapColumn(\n\t\ttarget_code_currency = target_code,\n\t\ttarget_description_currency = target_description\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefCurrency\nxrefCurrency aggregate(groupBy(target_code_currency),\n\ttarget_description = first(target_description_currency)) ~> Deduplicate\nJoinNewestDateWithRate select(mapColumn(\n\t\tfrom_currency_code,\n\t\texchange_rate = exchange_rate_allDates,\n\t\tfrom_currency_code = from_currency_code_allDates,\n\t\texchange_from_date = exchange_from_date_allDates\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveExtraColumn\nReplaceNull derive(curr_last_exchange_rate_to_usd = case(from_currency_code=='USD', toDecimal(1), exchange_rate),\n\t\tlast_updated_by = 'm_pre_dim_currency') ~> Expression\nDeduplicate, LastKnownRate lookup(target_code_currency == from_currency_code,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupAllCurrencies\nExpression select(mapColumn(\n\t\tpk_key = target_code_currency,\n\t\tcur_description = target_description,\n\t\tcurr_last_exchange_rate_to_usd,\n\t\tlast_updated_by\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOutputColums\nLookupAllCurrencies derive(from_currency_code = case(isNull(from_currency_code),'N/A',from_currency_code)) ~> ReplaceNull\nSelectOutputColums alterRow(upsertIf(true())) ~> AlterRow\ntCrossReference filter(code_type_id == 124) ~> currency124\nExpression derive(country_code_sap = 'N/A',\n\t\teu = 'N/A',\n\t\toecd = 'N/A') ~> DeriveNTcolumns\nDeriveNTcolumns sink(input(\n\t\tpk_key as string,\n\t\tcur_oecd as string,\n\t\tdate_last_updated as timestamp,\n\t\tdate_inserted as timestamp,\n\t\tinserted_by as string,\n\t\tcur_last_exch_rate_to_usd as decimal(28,10),\n\t\tlast_updated_by as string,\n\t\tcur_description as string,\n\t\tcur_2ltr_code as string,\n\t\tcur_eu as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tpk_key,\n\t\tcur_oecd = oecd,\n\t\tcur_last_exch_rate_to_usd = curr_last_exchange_rate_to_usd,\n\t\tlast_updated_by,\n\t\tcur_description,\n\t\tcur_2ltr_code = country_code_sap,\n\t\tcur_eu = eu\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> preDimCurrency"
		}
	}
}