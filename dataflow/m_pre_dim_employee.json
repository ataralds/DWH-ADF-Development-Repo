{
	"name": "m_pre_dim_employee",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "tcrossreference"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "udvAgressoEmployee"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_employee",
						"type": "DatasetReference"
					},
					"name": "preDimEmployee"
				}
			],
			"transformations": [
				{
					"name": "employee"
				},
				{
					"name": "deduplicator"
				},
				{
					"name": "xrefEmployee"
				},
				{
					"name": "empname"
				},
				{
					"name": "LkpUdvAgsEmployee"
				},
				{
					"name": "deduplicator0"
				},
				{
					"name": "alterRow"
				},
				{
					"name": "addLastupdatedby"
				},
				{
					"name": "predimemployeetable"
				},
				{
					"name": "emp1Pos1"
				}
			],
			"script": "source(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference',\n\tformat: 'query') ~> tcrossreference\nsource(output(\n\t\tcontract_date_from as date,\n\t\tposition_title as string,\n\t\tstatus as string,\n\t\tjobphone as string,\n\t\temail as string,\n\t\tlast_name as string,\n\t\tlast_update as date,\n\t\tjobmobile as string,\n\t\tmain_position as short,\n\t\tcontract_date_to as date,\n\t\thr_manager as string,\n\t\tstatus_description as string,\n\t\tposition_date_to as date,\n\t\tad_name as string,\n\t\tcompany_name as string,\n\t\tpostiion_date_from as date,\n\t\tstatus_date_to as date,\n\t\tcostcenter_date_to as date,\n\t\tcostcenter_description as string,\n\t\tcostcenter_manager as string,\n\t\tmain_employer as integer,\n\t\tcontract_description as string,\n\t\tstatus_date_from as date,\n\t\tseniority as string,\n\t\tcostcenter_date_from as date,\n\t\tfirst_name as string,\n\t\tdisplay_name as string,\n\t\toffice as string,\n\t\tposition as string,\n\t\tseniority_title as string,\n\t\temployee_id as string,\n\t\tcostcenter as string,\n\t\tcontract_type as string,\n\t\tcompany as string,\n\t\tshortphone as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.s_udv_ags_employee',\n\tformat: 'query',\n\twildcardPaths:['Agresso/s_udv_ags_employee.parquet']) ~> udvAgressoEmployee\ntcrossreference filter(code_type_id == 329) ~> employee\nxrefEmployee aggregate(groupBy(target_description_employee),\n\ttarget_code_employee = first(target_code_employee)) ~> deduplicator\nemployee select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'),\n\t\t\tlower($$)+'_employee' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefEmployee\nLkpUdvAgsEmployee derive(emp_name = substring(target_description_employee, 1, 40)) ~> empname\ndeduplicator, emp1Pos1 lookup(target_code_employee == ad_name,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpUdvAgsEmployee\nempname aggregate(groupBy(employee_id,\n\t\tfirst_name,\n\t\tlast_name,\n\t\tjobmobile,\n\t\temail,\n\t\toffice,\n\t\temp_name,\n\t\tjobphone),\n\ttarget_code_employee = first(target_code_employee)) ~> deduplicator0\npredimemployeetable alterRow(upsertIf(true())) ~> alterRow\ndeduplicator0 derive(last_updated_by = 'pre_dim_employee',\n\t\tincident_team_code = '',\n\t\tincident_team_desc = '') ~> addLastupdatedby\naddLastupdatedby select(mapColumn(\n\t\temp_source_key = target_code_employee,\n\t\tagresso_emp_id = employee_id,\n\t\temp_first_name = first_name,\n\t\temp_last_name = last_name,\n\t\temp_job_mobile = jobmobile,\n\t\temp_job_email = email,\n\t\tmain_gard_office_location = office,\n\t\temp_name,\n\t\tlast_updated_by,\n\t\tincident_team_code,\n\t\tincident_team_desc,\n\t\temp_job_phone = jobphone\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> predimemployeetable\nudvAgressoEmployee filter(main_employer == 1 && main_position == 1 && postiion_date_from <= currentDate('CET')) ~> emp1Pos1\nalterRow sink(input(\n\t\tpk_key as string,\n\t\temp_name as string,\n\t\tincident_team_code as string,\n\t\tdate_last_updated as timestamp,\n\t\temp_senior_cl_hnd_from_date as date,\n\t\tdate_inserted as timestamp,\n\t\temp_job_email as string,\n\t\temp_first_name as string,\n\t\temp_senior_cl_hnd_to_date as date,\n\t\temp_job_phone as string,\n\t\temp_last_name as string,\n\t\tincident_team_desc as string,\n\t\tlast_updated_by as string,\n\t\temp_job_mobile as string,\n\t\tagresso_emp_id as string,\n\t\tinserted_by as string,\n\t\tmain_gard_office_location as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['pk_key'],\n\tformat: 'table',\n\tmapColumn(\n\t\temp_name,\n\t\tpk_key = emp_source_key,\n\t\tincident_team_code,\n\t\temp_job_email,\n\t\temp_first_name,\n\t\temp_job_phone,\n\t\temp_last_name,\n\t\tincident_team_desc,\n\t\tlast_updated_by,\n\t\temp_job_mobile,\n\t\tagresso_emp_id,\n\t\tmain_gard_office_location\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> preDimEmployee"
		}
	}
}