{
	"name": "m_pre_dim_ig_claim_type",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "tcross"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_ig_claim_type",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "deduplicate"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\ttarget_description as string,\n\t\ttarget_code as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: '\\nSELECT [target_description]\\n      ,[target_code]\\n  FROM [dwh_stage].[t_crossreference]\\nWHERE CODE_TYPE_ID =776',\n\tformat: 'query') ~> tcross\ntcross aggregate(groupBy(target_description,\n\t\ttarget_code),\n\ttarget_descriptions = first(target_description)) ~> deduplicate\ndeduplicate derive(inserted_by = 'pre_dim_ig_claim_type') ~> DerivedColumn1\nDerivedColumn1 alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tigt_ig_claim_type as string,\n\t\ttop_id as long,\n\t\tigt_ig_claim_type_desc as string,\n\t\tigt_id as long,\n\t\tdate_last_updated as timestamp,\n\t\tlast_updated_by as string,\n\t\tinserted_by as string,\n\t\tdate_inserted as timestamp,\n\t\tigt_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['igt_key'],\n\tformat: 'table',\n\tmapColumn(\n\t\tigt_ig_claim_type_desc = target_description,\n\t\tinserted_by,\n\t\tigt_key = target_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}