{
	"name": "m_pre_dim_incident_pa",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "hlpExchangeRateToUsd"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "fil"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "fal"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "lcc"
				},
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "tCrossReference"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "lcf"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "lca"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "obb"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "oba"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "currency"
				},
				{
					"name": "exchrateUSD"
				},
				{
					"name": "filtable"
				},
				{
					"name": "lccmax"
				},
				{
					"name": "faltable",
					"description": "fal table with currency column from tcrossreference"
				},
				{
					"name": "claimIncurredUsd"
				},
				{
					"name": "xRefCurrency"
				},
				{
					"name": "AggregateClaimIncurred"
				},
				{
					"name": "AggregateLccId"
				},
				{
					"name": "maxSumClaimIncurredUsd"
				},
				{
					"name": "kjkgh"
				},
				{
					"name": "JoinLcc"
				},
				{
					"name": "LccClaim"
				},
				{
					"name": "lcftrtmco"
				},
				{
					"name": "lcftable"
				},
				{
					"name": "selectLcf"
				},
				{
					"name": "selectlca"
				},
				{
					"name": "lcatable",
					"description": "Filtering rows on lcaclodate not null"
				},
				{
					"name": "lfalca"
				},
				{
					"name": "FilterDates"
				},
				{
					"name": "maxlcfchngtime"
				},
				{
					"name": "obbtable"
				},
				{
					"name": "obatable"
				},
				{
					"name": "lcaoba"
				},
				{
					"name": "obaobb"
				},
				{
					"name": "filterTimerange",
					"description": "Filtering rows on lcaclmdate between obbstdate and obbendate."
				},
				{
					"name": "lccfal"
				},
				{
					"name": "lccfil"
				},
				{
					"name": "lccexchrateusd"
				},
				{
					"name": "LookupCurrency"
				},
				{
					"name": "lcctable"
				},
				{
					"name": "JoinTmpLccClaim"
				}
			],
			"script": "source(output(\n\t\tFROM_CURRENCY_ID as double,\n\t\tTO_CURRENCY_ID as double,\n\t\tEXCHANGE_FROM_DATE as timestamp,\n\t\tEXCHANGE_RATE as decimal(38,18),\n\t\tEXCHANGE_TO_DATE as timestamp,\n\t\tFROM_CURRENCY_CODE as string,\n\t\tTO_CURRENCY_CODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> hlpExchangeRateToUsd\nsource(output(\n\t\tfilacseq as decimal(38,18),\n\t\tfilacstat as string,\n\t\tfilagaid as string,\n\t\tfilcadate as timestamp,\n\t\tfilcasign as string,\n\t\tfilcastamp as string,\n\t\tfilcdoctype as string,\n\t\tfilcfunc as string,\n\t\tfilcordocn as decimal(38,18),\n\t\tfilcortyp as decimal(38,18),\n\t\tfilcosig1 as string,\n\t\tfilcosig2 as string,\n\t\tfilcrdate as timestamp,\n\t\tfilcrsign as string,\n\t\tfilcrstamp as string,\n\t\tfilcspbusndiv as decimal(38,18),\n\t\tfilcspbusnfunc as string,\n\t\tfilcspcondgrp as decimal(38,18),\n\t\tfilcspintrst as string,\n\t\tfilcsplimit as decimal(38,18),\n\t\tfilctrldate as timestamp,\n\t\tfilctrlsign as string,\n\t\tfildistext35 as string,\n\t\tfildocdate as timestamp,\n\t\tfildocmain as string,\n\t\tfildocn as decimal(38,18),\n\t\tfildodate as timestamp,\n\t\tfildostamp as string,\n\t\tfilexpdate as timestamp,\n\t\tfilexpeosign as string,\n\t\tfilexpstatus as string,\n\t\tfilexternalref as string,\n\t\tfilfilid as string,\n\t\tfilgldate as timestamp,\n\t\tfilglrunno as decimal(38,18),\n\t\tfilglstamp as string,\n\t\tfilingform as string,\n\t\tfilknvmark as string,\n\t\tfillisig1 as string,\n\t\tfillisig2 as string,\n\t\tfilnoaccounting as string,\n\t\tfilordate as timestamp,\n\t\tfiloridintrstdate as timestamp,\n\t\tfilorsign as string,\n\t\tfilorstamp as string,\n\t\tfilrefbase as decimal(38,18),\n\t\tfilresig1 as decimal(38,18),\n\t\tfilresig2 as decimal(38,18),\n\t\tfilvaldate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> fil\nsource(output(\n\t\tfalaccadrpeaid as decimal(38,18),\n\t\tfalaccamtp as decimal(38,18),\n\t\tfalaccdescr as string,\n\t\tfalaccpara as string,\n\t\tfalaccsw1 as string,\n\t\tfalaclcode as string,\n\t\tfalacstat as string,\n\t\tfaladvcod as decimal(38,18),\n\t\tfalagaid as string,\n\t\tfalagno as decimal(38,18),\n\t\tfalbalance as decimal(38,18),\n\t\tfalbaldescr as string,\n\t\tfalbillingno as decimal(38,18),\n\t\tfalbordadr as decimal(38,18),\n\t\tfalbordref as string,\n\t\tfalbroker as decimal(38,18),\n\t\tfalcashco as decimal(38,18),\n\t\tfalcathbtid as decimal(38,18),\n\t\tfalcctid as string,\n\t\tfalcedent as decimal(38,18),\n\t\tfalcedsecisolan as string,\n\t\tfalcedsecurno as decimal(38,18),\n\t\tfalclmadrpeaid as decimal(38,18),\n\t\tfalclmcat as string,\n\t\tfalclmreserve as decimal(38,18),\n\t\tfalcomcod as string,\n\t\tfalcovshare as decimal(38,18),\n\t\tfalcurr as string,\n\t\tfaldedamtp as decimal(38,18),\n\t\tfaldedcur as string,\n\t\tfaldedtamtp as decimal(38,18),\n\t\tfaldescr50 as string,\n\t\tfalduedate as timestamp,\n\t\tfalduest as decimal(38,18),\n\t\tfalelremitdescr as string,\n\t\tfalfalid as string,\n\t\tfalfblid as string,\n\t\tfalfilid as string,\n\t\tfalgenamtp as decimal(38,18),\n\t\tfalgencurr as string,\n\t\tfalicaid as string,\n\t\tfalinaid as string,\n\t\tfalinout as string,\n\t\tfalintamtp as decimal(38,18),\n\t\tfaliuwid as string,\n\t\tfaliyear as decimal(38,18),\n\t\tfallcaid as string,\n\t\tfallccid as string,\n\t\tfalln5 as decimal(38,18),\n\t\tfalmailaddress as string,\n\t\tfalmark as string,\n\t\tfalnreaccnynsw as string,\n\t\tfalnsci as decimal(38,18),\n\t\tfalobno as decimal(38,18),\n\t\tfalolddocno as decimal(38,18),\n\t\tfalorgins as decimal(38,18),\n\t\tfaloridintrstdate as timestamp,\n\t\tfaloutcode as decimal(38,18),\n\t\tfaloutform as string,\n\t\tfaloutstanding as decimal(38,18),\n\t\tfalownret as decimal(38,18),\n\t\tfalpaycod as decimal(38,18),\n\t\tfalpglb as decimal(38,18),\n\t\tfalpglbaccno as decimal(38,18),\n\t\tfalpgqid as string,\n\t\tfalplgroup as decimal(38,18),\n\t\tfalreaccn as string,\n\t\tfalrecamtp as decimal(38,18),\n\t\tfalreccur as string,\n\t\tfalrectamtp as decimal(38,18),\n\t\tfalsettled as decimal(38,18),\n\t\tfalshare as decimal(38,18),\n\t\tfalsource as decimal(38,18),\n\t\tfaluwbid as string,\n\t\tfaluwndisc as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> fal\nsource(output(\n\t\tlccadddescrlev1 as string,\n\t\tlccadddescrlev2 as string,\n\t\tlccadddescrlev3 as string,\n\t\tlccadddescrlev4 as string,\n\t\tlccadditionaltxt as string,\n\t\tlccadjuster as string,\n\t\tlccalleged1 as string,\n\t\tlccalleged2 as string,\n\t\tlccallegedtxt as string,\n\t\tlccamount as decimal(38,18),\n\t\tlccamtdispunknown as string,\n\t\tlcccargotype as string,\n\t\tlcccarriagemethod as string,\n\t\tlcccause as string,\n\t\tlcccausetxt as string,\n\t\tlccclmamtynsw as string,\n\t\tlccclmdet as string,\n\t\tlccclmtype as string,\n\t\tlccclupcommenced as decimal(38,18),\n\t\tlccclupcompleted as decimal(38,18),\n\t\tlccconseq as string,\n\t\tlccconseqos as string,\n\t\tlcccurr as string,\n\t\tlccdecision as decimal(38,18),\n\t\tlccdisembarkedat as string,\n\t\tlccdisembarkeddate as timestamp,\n\t\tlccdisembarkiso as string,\n\t\tlccembarkedat as string,\n\t\tlccembarkeddate as timestamp,\n\t\tlccembarkiso as string,\n\t\tlccemergevac as string,\n\t\tlccfduty as decimal(38,18),\n\t\tlccgrossamount as decimal(38,18),\n\t\tlccgrosssettle as decimal(38,18),\n\t\tlcchandlebyclms as string,\n\t\tlccinitcontpoint as string,\n\t\tlccinlitigation as string,\n\t\tlccjurisdiction as string,\n\t\tlccladid as decimal(38,18),\n\t\tlcclcaid as string,\n\t\tlcclccid as string,\n\t\tlcclightcccid as string,\n\t\tlccln6 as decimal(38,18),\n\t\tlccloconvess as string,\n\t\tlccloconvesstxt as string,\n\t\tlccmafareatxt as string,\n\t\tlccmaffectarea as string,\n\t\tlccmanos as string,\n\t\tlccmanouver as string,\n\t\tlccmfkey as string,\n\t\tlccnpersons as decimal(38,18),\n\t\tlccothshipname as string,\n\t\tlccpeaid as decimal(38,18),\n\t\tlccpilotname as string,\n\t\tlccpilotonboard as string,\n\t\tlccpollutant as string,\n\t\tlccradnavynsw as string,\n\t\tlccrecovccvid as decimal(38,18),\n\t\tlccrecovcom as string,\n\t\tlccrecovcurr as string,\n\t\tlccrecovery as decimal(38,18),\n\t\tlccrecovyn as string,\n\t\tlccremarks as string,\n\t\tlccrolecat as string,\n\t\tlccrule as string,\n\t\tlccruleofcov as string,\n\t\tlccsettlement as decimal(38,18),\n\t\tlcctext as string,\n\t\tlcctrtmco as decimal(38,18),\n\t\tlccuwsign as string,\n\t\tlccvessdevi as string,\n\t\tlccvisiblcccid as string,\n\t\tlccvoyagefr as string,\n\t\tlccvoyageto as string,\n\t\tlccvoyfriso as string,\n\t\tlccvoytoiso as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> lcc\nsource(output(\n\t\tsource_code_key as string,\n\t\tsource_system as string,\n\t\ttarget_code as string,\n\t\ttarget_description as string,\n\t\tcode_type_id as double,\n\t\tcode2 as string,\n\t\tom_x_ref as string,\n\t\tcode_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> tCrossReference\nsource(output(\n\t\tlcfccod2 as string,\n\t\tlcfccod2trmtdate as timestamp,\n\t\tlcfccod2txt35 as string,\n\t\tlcfchngtime as string,\n\t\tlcflcaid as string,\n\t\tlcfnextdate as timestamp,\n\t\tlcfsign as string,\n\t\tlcftrtmco as decimal(38,18),\n\t\tlcfwrkplccod as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> lcf\nsource(output(\n\t\tlcaacstat as string,\n\t\tlcaadjsign as string,\n\t\tlcaagaid as string,\n\t\tlcaareacd as string,\n\t\tlcaareadescr as string,\n\t\tlcaautosetleyn as string,\n\t\tlcabigevent as string,\n\t\tlcabirtno as string,\n\t\tlcabonynsw as string,\n\t\tlcacagtyp as string,\n\t\tlcacalclamtfrinjured as string,\n\t\tlcacategorytype as string,\n\t\tlcacattype as string,\n\t\tlcaccod2 as string,\n\t\tlcaccod2date as timestamp,\n\t\tlcaccod2trmtdate as timestamp,\n\t\tlcaccod2txt35 as string,\n\t\tlcacefocc as string,\n\t\tlcacefocm as string,\n\t\tlcacefouc as string,\n\t\tlcaclintc as decimal(38,18),\n\t\tlcaclmcac as string,\n\t\tlcaclmdate as timestamp,\n\t\tlcaclmdatechd as string,\n\t\tlcaclmid as decimal(38,18),\n\t\tlcaclmintynsw as string,\n\t\tlcaclmn3 as decimal(38,18),\n\t\tlcaclmpeaid as decimal(38,18),\n\t\tlcaclmtype as string,\n\t\tlcaclodate as timestamp,\n\t\tlcacndid as string,\n\t\tlcacommonynsw as string,\n\t\tlcacompllevel as string,\n\t\tlcaconflictclm as string,\n\t\tlcacrdate as timestamp,\n\t\tlcacrobbid as string,\n\t\tlcacrsign as string,\n\t\tlcacyear as decimal(38,18),\n\t\tlcaecauseco as string,\n\t\tlcaecfid as string,\n\t\tlcaeclid as string,\n\t\tlcaecoid as string,\n\t\tlcaenassshr as decimal(38,18),\n\t\tlcaenintrst as string,\n\t\tlcaeuoffpros as decimal(38,18),\n\t\tlcaeuownpros as decimal(38,18),\n\t\tlcaexppdate as timestamp,\n\t\tlcaextadjynsw as string,\n\t\tlcaextclmid as string,\n\t\tlcafileref as decimal(38,18),\n\t\tlcafinalstatmdate as timestamp,\n\t\tlcafoadate as timestamp,\n\t\tlcafpareacd as string,\n\t\tlcafromareacd as string,\n\t\tlcageodescr as string,\n\t\tlcahour as decimal(38,18),\n\t\tlcaicaid as string,\n\t\tlcaimpexp as decimal(38,18),\n\t\tlcainsamt as decimal(38,18),\n\t\tlcainscurr as string,\n\t\tlcainsured as decimal(38,18),\n\t\tlcainsuredmno as string,\n\t\tlcainsuredmof as string,\n\t\tlcaintnote as string,\n\t\tlcaisrndcontrssigned as string,\n\t\tlcajurisdiction as string,\n\t\tlcaknvmark as string,\n\t\tlcalabid as string,\n\t\tlcalcaid as string,\n\t\tlcaldescr as string,\n\t\tlcaliabcode as decimal(38,18),\n\t\tlcaliabtxt as string,\n\t\tlcalimamt as decimal(38,18),\n\t\tlcalimcurr as string,\n\t\tlcalimdays as decimal(38,18),\n\t\tlcalimdedamt as decimal(38,18),\n\t\tlcalimrenewed as decimal(38,18),\n\t\tlcaloadate as timestamp,\n\t\tlcalodescr as string,\n\t\tlcalossco as string,\n\t\tlcalrgclmynsw as string,\n\t\tlcaltdate as timestamp,\n\t\tlcaludate as timestamp,\n\t\tlcalusign as string,\n\t\tlcamanhavsalaer as string,\n\t\tlcamfkey as string,\n\t\tlcamoveddate as timestamp,\n\t\tlcamovedsign as string,\n\t\tlcamovedto as string,\n\t\tlcamplamt as decimal(38,18),\n\t\tlcamplcurr as string,\n\t\tlcamuoffgrp as decimal(38,18),\n\t\tlcamuoffpros as decimal(38,18),\n\t\tlcamuownpros as decimal(38,18),\n\t\tlcan1nooftreatm as decimal(38,18),\n\t\tlcan2nooftreatm as decimal(38,18),\n\t\tlcan3nooftreatm as decimal(38,18),\n\t\tlcan4nooftreatm as decimal(38,18),\n\t\tlcan5nooftreatm as decimal(38,18),\n\t\tlcan6nooftreatm as decimal(38,18),\n\t\tlcan7nooftreatm as decimal(38,18),\n\t\tlcan8nooftreatm as decimal(38,18),\n\t\tlcancauseco as string,\n\t\tlcanextdate as timestamp,\n\t\tlcanextsign as string,\n\t\tlcanmclef as string,\n\t\tlcanoofpers as decimal(38,18),\n\t\tlcaobno as decimal(38,18),\n\t\tlcaoccoffdate as timestamp,\n\t\tlcaoccoffynsw as string,\n\t\tlcaoccownynsw as string,\n\t\tlcaoffice as decimal(38,18),\n\t\tlcaonoffs as decimal(38,18),\n\t\tlcaoutstm as string,\n\t\tlcapilotonboard as string,\n\t\tlcaportcccid as string,\n\t\tlcaportunlid as string,\n\t\tlcaprepayamtp as decimal(38,18),\n\t\tlcaprepaycurr as string,\n\t\tlcaprocess as string,\n\t\tlcarecovachamt as decimal(38,18),\n\t\tlcarecovachcurr as string,\n\t\tlcarecovachdate as timestamp,\n\t\tlcarecovachintnote as string,\n\t\tlcarecovachsign as string,\n\t\tlcarecovachynsw as string,\n\t\tlcarecovccvid as decimal(38,18),\n\t\tlcarecovpotamt as decimal(38,18),\n\t\tlcarecovpotcurr as string,\n\t\tlcarecovpotintnote as string,\n\t\tlcarecovpotynsw as string,\n\t\tlcarecovremdate as timestamp,\n\t\tlcareduceprem as string,\n\t\tlcaregamt as decimal(38,18),\n\t\tlcaregcurr as string,\n\t\tlcaregndate as timestamp,\n\t\tlcaregnsign as string,\n\t\tlcaregress as decimal(38,18),\n\t\tlcaregtext70 as string,\n\t\tlcarepdate as timestamp,\n\t\tlcaresumtionfrom as string,\n\t\tlcataucode as decimal(38,18),\n\t\tlcatautxt as string,\n\t\tlcataxno as string,\n\t\tlcatcauseco as string,\n\t\tlcatimnote as string,\n\t\tlcatlotype as decimal(38,18),\n\t\tlcatmcloludate as timestamp,\n\t\tlcatmclolusign as string,\n\t\tlcatmduedate as timestamp,\n\t\tlcatmextdocid as decimal(38,18),\n\t\tlcatmextduedate as timestamp,\n\t\tlcatmextludate as timestamp,\n\t\tlcatmextlusign as string,\n\t\tlcatmludate as timestamp,\n\t\tlcatmlusign as string,\n\t\tlcatmstatus as string,\n\t\tlcatoareacd as string,\n\t\tlcatranme as string,\n\t\tlcatranty as decimal(38,18),\n\t\tlcatrtmco as decimal(38,18),\n\t\tlcatzone as string,\n\t\tlcauwsign as string,\n\t\tlcawocdate as timestamp,\n\t\tlcawocstat as string,\n\t\tlcaworkplace as decimal(38,18),\n\t\tlcawrkclaim as decimal(38,18),\n\t\tlcawrkplccod as decimal(38,18),\n\t\tlcaxlmref as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> lca\nsource(output(\n\t\tobbaccname as string,\n\t\tobbadr1 as string,\n\t\tobbadr2 as string,\n\t\tobbadr3 as string,\n\t\tobbadr4 as string,\n\t\tobbadr5 as string,\n\t\tobbareadescr as string,\n\t\tobbareafactorgroup as string,\n\t\tobbarmdgrdalways as string,\n\t\tobbaviatdescr as string,\n\t\tobbavproof as string,\n\t\tobbbnr as decimal(38,18),\n\t\tobbbonus as decimal(38,18),\n\t\tobbbreth as decimal(38,18),\n\t\tobbbuildfactor as decimal(38,18),\n\t\tobbbuiltmonth as decimal(38,18),\n\t\tobbbuiltyear as decimal(38,18),\n\t\tobbcagsubtyp as decimal(38,18),\n\t\tobbcapoty as decimal(38,18),\n\t\tobbcargodescr as string,\n\t\tobbcargotype as string,\n\t\tobbccbid as string,\n\t\tobbcefoen as string,\n\t\tobbcefofb as string,\n\t\tobbcefoty as string,\n\t\tobbcffid as string,\n\t\tobbclass as string,\n\t\tobbclass2 as string,\n\t\tobbcoordx as decimal(38,18),\n\t\tobbcoordy as decimal(38,18),\n\t\tobbcrdate as timestamp,\n\t\tobbcrsign as string,\n\t\tobbcrwisolan as string,\n\t\tobbcsvdate as timestamp,\n\t\tobbcsvtext as string,\n\t\tobbcumobno as decimal(38,18),\n\t\tobbcurr as string,\n\t\tobbdepth as decimal(38,18),\n\t\tobbdistrict as string,\n\t\tobbdwt as decimal(38,18),\n\t\tobbendate as timestamp,\n\t\tobbengfab as string,\n\t\tobbenginehp as string,\n\t\tobbengineyear as decimal(38,18),\n\t\tobbexname as string,\n\t\tobbfishlimit as string,\n\t\tobbfishsize as decimal(38,18),\n\t\tobbfishunit as string,\n\t\tobbfloor as decimal(38,18),\n\t\tobbfmark as string,\n\t\tobbformt as decimal(38,18),\n\t\tobbgeodescr as string,\n\t\tobbgeox as decimal(38,18),\n\t\tobbgeoy as decimal(38,18),\n\t\tobbgnr as decimal(38,18),\n\t\tobbgrpdescr as string,\n\t\tobbgrpfactorgroup as string,\n\t\tobbgrt as decimal(38,18),\n\t\tobbhinumber as string,\n\t\tobbhulltype as string,\n\t\tobbimpexp as decimal(38,18),\n\t\tobbinjurydescr as string,\n\t\tobbinstrument as decimal(38,18),\n\t\tobbinsynsw as string,\n\t\tobbismdate as timestamp,\n\t\tobbismsocity as string,\n\t\tobbkmavle as decimal(38,18),\n\t\tobbkmstan as decimal(38,18),\n\t\tobbkmyear as decimal(38,18),\n\t\tobbkmyrvalue as decimal(38,18),\n\t\tobbknowninjury as string,\n\t\tobbknvmark as string,\n\t\tobbkonst as string,\n\t\tobbkwh as decimal(38,18),\n\t\tobblandinggear as decimal(38,18),\n\t\tobblastvaldatebuildings as timestamp,\n\t\tobblastvaldateequipment as timestamp,\n\t\tobblbunit as string,\n\t\tobblength as decimal(38,18),\n\t\tobblicences as decimal(38,18),\n\t\tobbloc as string,\n\t\tobbludate as timestamp,\n\t\tobblusign as string,\n\t\tobbm3 as decimal(38,18),\n\t\tobbmainoshid as decimal(38,18),\n\t\tobbmaintlevel as decimal(38,18),\n\t\tobbmanager as decimal(38,18),\n\t\tobbmanerknum as string,\n\t\tobbmanisolan as string,\n\t\tobbmaterial as string,\n\t\tobbmcpid as string,\n\t\tobbmvaynsw as string,\n\t\tobbname as string,\n\t\tobbncaid as string,\n\t\tobbnoofcrew as decimal(38,18),\n\t\tobbnoofflat as decimal(38,18),\n\t\tobbnoofofficers as decimal(38,18),\n\t\tobbnoofother as decimal(38,18),\n\t\tobbnoofpax as decimal(38,18),\n\t\tobbobbid as string,\n\t\tobbobjdescr as string,\n\t\tobbobjema as decimal(38,18),\n\t\tobbobjemi as decimal(38,18),\n\t\tobbobno as decimal(38,18),\n\t\tobbobnorf as decimal(38,18),\n\t\tobbobver as decimal(38,18),\n\t\tobboffisolan as string,\n\t\tobboflid as decimal(38,18),\n\t\tobboshid as decimal(38,18),\n\t\tobbowndate as timestamp,\n\t\tobbowner as decimal(38,18),\n\t\tobbownynsw as string,\n\t\tobbpilotcert as string,\n\t\tobbpilothour as decimal(38,18),\n\t\tobbportcccid as string,\n\t\tobbportdescr as string,\n\t\tobbportunlid as string,\n\t\tobbraptorid as string,\n\t\tobbrecontrfactor as decimal(38,18),\n\t\tobbregdate as timestamp,\n\t\tobbrentstat as decimal(38,18),\n\t\tobbrespdate as timestamp,\n\t\tobbresptext as string,\n\t\tobbrotation as decimal(38,18),\n\t\tobbshbisolan as string,\n\t\tobbshpbld as decimal(38,18),\n\t\tobbsnr as decimal(38,18),\n\t\tobbsocity as string,\n\t\tobbsocity2 as string,\n\t\tobbspeedlimit as decimal(38,18),\n\t\tobbsrcob as string,\n\t\tobbstandard as decimal(38,18),\n\t\tobbstdate as timestamp,\n\t\tobbtaxno as string,\n\t\tobbtotamt as decimal(38,18),\n\t\tobbtradisolan as string,\n\t\tobbtradtextkey as string,\n\t\tobbtradunlid as string,\n\t\tobbtranme as string,\n\t\tobbtranty as decimal(38,18),\n\t\tobbtypedescr as string,\n\t\tobbuhcid as decimal(38,18),\n\t\tobbusecod as string,\n\t\tobbverstat as string,\n\t\tobbvescod as string,\n\t\tobbvesisolan as string,\n\t\tobbwater as string,\n\t\tobbweigthgroup as string,\n\t\tobbx1factorgroup as string,\n\t\tobbx2factorgroup as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> obb\nsource(output(\n\t\tobaassetno as decimal(38,18),\n\t\tobaassetsubno as decimal(38,18),\n\t\tobacallno as string,\n\t\tobachassis as string,\n\t\tobacomp2 as decimal(38,18),\n\t\tobacrdate as timestamp,\n\t\tobacrsign as string,\n\t\tobaextnote as string,\n\t\tobaimono as decimal(38,18),\n\t\tobaimoynsw as string,\n\t\tobaintnote as string,\n\t\tobaknvmark as string,\n\t\tobalongtermrate as decimal(38,18),\n\t\tobaludate as timestamp,\n\t\tobalusign as string,\n\t\tobammsino as decimal(38,18),\n\t\tobancmid as string,\n\t\tobancnid as string,\n\t\tobancsid as string,\n\t\tobanjcid as string,\n\t\tobanpcid as decimal(38,18),\n\t\tobaobno as decimal(38,18),\n\t\tobaobrt as decimal(38,18),\n\t\tobaorgbui as decimal(38,18),\n\t\tobaorgbuiltmonth as decimal(38,18),\n\t\tobaoxno as decimal(38,18),\n\t\tobapeaid as decimal(38,18),\n\t\tobatrackit as string,\n\t\tobatrackit1 as string,\n\t\tobatrackit2 as string,\n\t\tobatrackit3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> oba\ntCrossReference filter(source_system == 'PARIS' && code_type_id == 124) ~> currency\nhlpExchangeRateToUsd select(mapColumn(\n\t\tEXCHANGE_FROM_DATE,\n\t\tEXCHANGE_RATE,\n\t\tFROM_CURRENCY_CODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> exchrateUSD\nfil select(mapColumn(\n\t\tfilfilid,\n\t\tfilvaldate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> filtable\nlcc select(mapColumn(\n\t\teach(match(in(['lcclcaid','lcclccid'], name)),\n\t\t\t$$ + '_max' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lccmax\nLookupCurrency select(mapColumn(\n\t\tfalfilid,\n\t\tfalinout,\n\t\tfaloutcode,\n\t\tfalsettled,\n\t\tfaloutstanding,\n\t\tfallccid,\n\t\tfalcurr = xRefCurrency@target_code_currency\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> faltable\nlccexchrateusd derive(claim_incurred_usd = case(faltable@falinout == 'I'||(faltable@falinout == 'O'&&faltable@faloutcode==2), coalesce(faltable@faloutstanding/exchrateUSD@EXCHANGE_RATE,0), toDecimal(0)) +\r\ncase(faltable@falinout == 'I'||(faltable@falinout == 'O'&&faltable@faloutcode==2), coalesce(faltable@falsettled/exchrateUSD@EXCHANGE_RATE,0), toDecimal(0))) ~> claimIncurredUsd\ncurrency select(mapColumn(\n\t\teach(match(name=='source_code_key'||name=='target_code'),\n\t\t\t$$+'_currency' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xRefCurrency\nclaimIncurredUsd aggregate(groupBy(lcclccid_max,\n\t\tlcclcaid_max),\n\tsum_claim_incurred_usd = sum(claim_incurred_usd)) ~> AggregateClaimIncurred\nAggregateClaimIncurred aggregate(groupBy(lcclcaid_max,\n\t\tsum_claim_incurred_usd),\n\tlcclccid_max = min(lcclccid_max)) ~> AggregateLccId\nAggregateLccId aggregate(groupBy(lcclcaid_max),\n\tmax_sum_claim_incurred_usd = max(sum_claim_incurred_usd)) ~> maxSumClaimIncurredUsd\nJoinTmpLccClaim, AggregateLccId join(maxSumClaimIncurredUsd@lcclcaid_max undefined AggregateLccId@{}\n\t&& max_sum_claim_incurred_usd undefined sum_claim_incurred_usd,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> kjkgh\nkjkgh, lcctable join(lcclccid_max undefined lcctable@lcclccid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinLcc\nJoinLcc select(mapColumn(\n\t\tlcclcaid = maxSumClaimIncurredUsd@lcclcaid_max,\n\t\tlcclccid = lcclccid_max,\n\t\tlccvoyagefr = lcctable@lccvoyagefr,\n\t\tlccvoyageto = lcctable@lccvoyageto,\n\t\tlccuwsign = lcctable@lccuwsign\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> LccClaim\nlcf filter(contains([2,4], #item == lcftrtmco)) ~> lcftrtmco\nselectLcf derive(lcfchngtime = toDate(left(lcfchngtime,8),'yyyyMMdd')) ~> lcftable\nlcftrtmco select(mapColumn(\n\t\tlcfchngtime,\n\t\tlcflcaid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectLcf\nlca select(mapColumn(\n\t\tlcalcaid,\n\t\tlcaicaid,\n\t\tlcaclmdate,\n\t\tlcaobno,\n\t\tlcaclodate,\n\t\tlcalabid,\n\t\tlcatrtmco,\n\t\tlcauwsign,\n\t\tlcaacstat,\n\t\tlcacrsign,\n\t\tlcawrkplccod,\n\t\tlcacrdate,\n\t\tlcaltdate,\n\t\tlcaadjsign,\n\t\tlcacefocc,\n\t\tlcaclmcac,\n\t\tlcacefocm,\n\t\tlcabirtno,\n\t\tlcaextclmid,\n\t\tlcalossco,\n\t\tlcatlotype,\n\t\tlcacategorytype,\n\t\tlcaobno,\n\t\tlcaldescr,\n\t\tlcaportunlid,\n\t\tlcamfkey,\n\t\tlcaprocess\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectlca\nselectlca filter(!isNull(lcaclodate)) ~> lcatable\nlcftable, lcatable join(lcflcaid undefined lcalcaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> lfalca\nlfalca filter(lcfchngtime < toDate(lcaclmdate)) ~> FilterDates\nFilterDates aggregate(groupBy(lcflcaid),\n\tmax_lcfchngtime = max(lcfchngtime)) ~> maxlcfchngtime\nobb select(mapColumn(\n\t\teach(match(in(['obbobno','obbstdate','obbname','obbendate','obbstdate'],name)))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> obbtable\noba select(mapColumn(\n\t\tobaimono,\n\t\tobaobno\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> obatable\nobatable, lca join(obaobno undefined lcaobno,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> lcaoba\nlcaoba, obb join(obaobno undefined obbobno,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> obaobb\nobaobb filter((coalesce(lcaclmdate,currentTimestamp()) > coalesce(obbstdate,addDays(currentTimestamp(),-36500))) &&\r\n(coalesce(lcaclmdate, currentTimestamp()) < coalesce(obbendate,addDays(currentTimestamp(),36500)))) ~> filterTimerange\nlccmax, faltable join(lcclccid_max == fallccid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> lccfal\nlccfal, filtable join(falfilid == filfilid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> lccfil\nlccfil, exchrateUSD join(filvaldate == EXCHANGE_FROM_DATE\n\t&& coalesce(falcurr,'USD') == FROM_CURRENCY_CODE,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> lccexchrateusd\nfal, xRefCurrency lookup(falcurr == source_code_key_currency,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupCurrency\nlcc select(mapColumn(\n\t\teach(match(in(['lcclcaid','lcclccid','lccvoyagefr','lccvoyageto','lccclmtype','lccuwsign'], name)))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lcctable\nmaxSumClaimIncurredUsd, lcctable join(lcclcaid_max == lcclcaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinTmpLccClaim"
		}
	}
}