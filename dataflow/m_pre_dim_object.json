{
	"name": "m_pre_dim_object",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "lloydsvesselhistory"
				},
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "lloydscompany"
				},
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "tcrossreference"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_object",
						"type": "DatasetReference"
					},
					"name": "preDimObject"
				}
			],
			"transformations": [
				{
					"name": "companyMgr"
				},
				{
					"name": "benificialOwner"
				},
				{
					"name": "commercialOperator"
				},
				{
					"name": "regOwner"
				},
				{
					"name": "manager"
				},
				{
					"name": "companyGBowner"
				},
				{
					"name": "companyOperator"
				},
				{
					"name": "companyRegOwner"
				},
				{
					"name": "companyGBOwnerCnty"
				},
				{
					"name": "companyMgrCnty"
				},
				{
					"name": "companyOperatorCnty"
				},
				{
					"name": "tmptabell"
				},
				{
					"name": "derivedColumns"
				},
				{
					"name": "marketArea"
				},
				{
					"name": "country"
				},
				{
					"name": "objectTypeDesc"
				},
				{
					"name": "flagDesc"
				},
				{
					"name": "beneficialOwnerCountry"
				},
				{
					"name": "managerCountry"
				},
				{
					"name": "operatorCountry"
				},
				{
					"name": "commercialOwnerCntry"
				},
				{
					"name": "companyComOwnerCnty"
				},
				{
					"name": "xrefMarketArea"
				},
				{
					"name": "xrefCountry"
				},
				{
					"name": "xrefOTDesc"
				},
				{
					"name": "xrefFlagDesc"
				},
				{
					"name": "selectOutputColumn"
				},
				{
					"name": "expression"
				},
				{
					"name": "alterRow"
				}
			],
			"script": "source(output(\n\t\tVESSEL_KEY_COLUMN as double,\n\t\tVESSEL_ID as decimal(38,18),\n\t\tIMO as decimal(38,18),\n\t\tVESSEL_NAME as string,\n\t\tYEAR_OF_BUILD as decimal(38,18),\n\t\tFLAG as string,\n\t\tCALL_SIGN as string,\n\t\tMMSI as string,\n\t\tPORT_OF_REGISTRY as string,\n\t\tGROSS as decimal(38,18),\n\t\tNET as decimal(38,18),\n\t\tDWT as decimal(38,18),\n\t\tVESSEL_TYPE_CODE as string,\n\t\tVESSEL_TYPE as string,\n\t\tSTATUS as string,\n\t\tRECORD_LAST_UPDATED as timestamp,\n\t\tBREADTH_EXTREME as decimal(38,18),\n\t\tBREADTH_MOULDED as decimal(38,18),\n\t\tDEPTH as decimal(38,18),\n\t\tDRAFT as decimal(38,18),\n\t\tFREEBOARD as decimal(38,18),\n\t\tLBP as decimal(38,18),\n\t\tLOA as decimal(38,18),\n\t\tLRG as decimal(38,18),\n\t\tTPCMI as decimal(38,18),\n\t\tMANIFOLD_TO_BOW as decimal(38,18),\n\t\tPARALLEL_BODY_LENGTH as decimal(38,18),\n\t\tKTM as decimal(38,18),\n\t\tFORMULA_DWT as decimal(38,18),\n\t\tCONVENTION_69_IND as string,\n\t\tDISPLACEMENT as decimal(38,18),\n\t\tPANAMA_NRT as decimal(38,18),\n\t\tSUEZ_NRT as decimal(38,18),\n\t\tBULBOUS_BOW_IND as string,\n\t\tHULL_TYPE as string,\n\t\tHULL_DESIGN as string,\n\t\tMATERIAL_OF_BUILD as string,\n\t\tNO_DECKS as decimal(38,18),\n\t\tHELI_DECK_IND as string,\n\t\tNO_WATERTIGHT_COMPARTMENTS as decimal(38,18),\n\t\tNO_BULKHEADS as decimal(38,18),\n\t\tTHRUSTER_IND as string,\n\t\tENGINE_POSITION as string,\n\t\tTOTAL_TANKS as decimal(38,18),\n\t\tNO_WING_TANKS as decimal(38,18),\n\t\tNO_CENTRE_TANKS as decimal(38,18),\n\t\tSTRENGTHENED_FOR_HEAVY_CARGO as string,\n\t\tORE_CARGO_IND as string,\n\t\tFUEL_CAPACITY as decimal(38,18),\n\t\tFUEL_CONSUMPTION as string,\n\t\tPROPULSION_TYPE as string,\n\t\tPROPULSION_TEXT as string,\n\t\tSPEED as decimal(38,18),\n\t\tSPEED_TYPE as string,\n\t\tNO_CREW as decimal(38,18),\n\t\tNO_PASSENGERS as decimal(38,18),\n\t\tNO_BERTHS as decimal(38,18),\n\t\tNO_CABINS as decimal(38,18),\n\t\tLANE_LENGTH as decimal(38,18),\n\t\tLANE_WIDTH as decimal(38,18),\n\t\tNO_REEFER_PLUGS as decimal(38,18),\n\t\tCONVERSION_TEXT as string,\n\t\tCONVERSION_DATE as timestamp,\n\t\tHATCH_TYPE as string,\n\t\tGEARLESS_IND as string,\n\t\tCO2_IND as string,\n\t\tBALE_CAPACITY as decimal(38,18),\n\t\tBALLAST_CAPACITY as decimal(38,18),\n\t\tBOLLARD_PULL as decimal(38,18),\n\t\tCAR_CAPACITY as decimal(38,18),\n\t\tTRAILER_CAPACITY as decimal(38,18),\n\t\tGAS_CAPACITY as decimal(38,18),\n\t\tGRAIN_CAPACITY as decimal(38,18),\n\t\tLIQUID_CAPACITY as decimal(38,18),\n\t\tLIQUID_CAPACITY_BARRELS as decimal(38,18),\n\t\tORE_CAPACITY_TONNES as decimal(38,18),\n\t\tPUMP_CAPACITY_CUBIC as decimal(38,18),\n\t\tPUMP_CAPACITY_TONNES as decimal(38,18),\n\t\tPUMP_DESCRIPTION as string,\n\t\tREFRIGERATED_CAPACITY as decimal(38,18),\n\t\tDECK_TANK_CAPACITY as decimal(38,18),\n\t\tSLOP_TANK_CAPACITY as decimal(38,18),\n\t\tTEU_CAPACITY as decimal(38,18),\n\t\tTEU_DECK_CAPACITY as decimal(38,18),\n\t\tTEU_HOLD_CAPACITY as decimal(38,18),\n\t\tTEU_OPERATION_CAPACITY as decimal(38,18),\n\t\tREFRIGERATED_TEU_CAPACITY as decimal(38,18),\n\t\tTEU_14T_CAPACITY as decimal(38,18),\n\t\tTOTAL_HATCHES as decimal(38,18),\n\t\tMAXIMUM_HATCH_WIDTH as decimal(38,18),\n\t\tMAXIMUM_HATCH_LENGTH as decimal(38,18),\n\t\tTOTAL_HOLDS as decimal(38,18),\n\t\tMAXIMUM_HOLD_WIDTH as decimal(38,18),\n\t\tMAXIMUM_HOLD_LENGTH as decimal(38,18),\n\t\tMAXIMUM_HOLD_DEPTH as decimal(38,18),\n\t\tBOW_CHAIN_STOPPERS as string,\n\t\tSPM_IND as string,\n\t\tBOW_LOAD_DISCHARGE as string,\n\t\tSTERN_LOAD_DISCHARGE as string,\n\t\tMANIFOLD_TYPE as string,\n\t\tMANIFOLD_DISTANCE as decimal(38,18),\n\t\tCLS_IND as string,\n\t\tIMO_RATING_1 as string,\n\t\tIMO_RATING_2 as string,\n\t\tIMO_RATING_3 as string,\n\t\tNO_GRADES as decimal(38,18),\n\t\tNO_LINES as decimal(38,18),\n\t\tSBT_IND as string,\n\t\tSTAINLES_STEEL_TANKS as string,\n\t\tNO_STAINLESS_STEEL_TANKS as decimal(38,18),\n\t\tTANK_COATED_IND as string,\n\t\tTANK_COATED_TEXT as string,\n\t\tTANK_TEXT as string,\n\t\tTOTAL_PUMPS as decimal(38,18),\n\t\tHEAT_EXCHANGERS as string,\n\t\tCOIL_IND as string,\n\t\tCOIL_TEXT as string,\n\t\tCOW_IND as string,\n\t\tFLASH_POINT_60_IND as string,\n\t\tAMMONIA_IND as string,\n\t\tETHYLENE_IND as string,\n\t\tIGS_IND as string,\n\t\tLNG_CONTAINMENT_IND as string,\n\t\tGAS_MIN_PRESSURE as decimal(38,18),\n\t\tGAS_MAX_PRESSURE as decimal(38,18),\n\t\tPRESSURISED_IND as string,\n\t\tSEMI_PRESSURISED_IND as string,\n\t\tREFRIGERATED_IND as string,\n\t\tVCM_IND as string,\n\t\tTOTAL_GENERATORS as decimal(38,18),\n\t\tTOTAL_GENERATOR_POWER as decimal(38,18),\n\t\tTOTAL_AC_CURRENT_GENERATORS as decimal(38,18),\n\t\tTOTAL_DC_CURRENT_GENERATORS as decimal(38,18),\n\t\tTOTAL_BOILERS as decimal(38,18),\n\t\tCOMMON_BOILER_TYPE as string,\n\t\tTOTAL_LIFTING_GEAR as decimal(38,18),\n\t\tCOMMON_GEAR_TYPE_CODE as string,\n\t\tCOMMON_GEAR_TYPE as string,\n\t\tMAXIMUM_INDIVIDUAL_GEAR_SWL as decimal(38,18),\n\t\tTOTAL_PROPELLERS as decimal(38,18),\n\t\tCOMMON_PROPELLER_TYPE_CODE as string,\n\t\tCOMMON_PROPELLER_TYPE as string,\n\t\tBUILT_PLACE as string,\n\t\tYARD_NUMBER as string,\n\t\tVESSEL_BUILDER as string,\n\t\tORDER_DATE as timestamp,\n\t\tORDER_VALUE as decimal(38,18),\n\t\tORDER_CANCELLED as timestamp,\n\t\tSCHEDULED_CONSTRUCTION_END as timestamp,\n\t\tORIGINAL_SCHED_CONS_END as timestamp,\n\t\tCONSTRUCTION_START as timestamp,\n\t\tLAUNCH_DATE as timestamp,\n\t\tCONSTRUCTION_END as timestamp,\n\t\tDEAD_DATE as timestamp,\n\t\tLOSS_DATE as timestamp,\n\t\tBROKEN_END_DATE as timestamp,\n\t\tBREAKER_COMPANY as string,\n\t\tBROKEN_PLACE as string,\n\t\tLT_TONNES as decimal(38,18),\n\t\tCURRENT_NAME as string,\n\t\tSTART_DATE as timestamp,\n\t\tPREVIOUS_NAME as string,\n\t\tNAME_CHANGES_PREVIOUS_3_YEARS as decimal(38,18),\n\t\tCURRENT_FLAG as string,\n\t\tCURRENT_FLAG_START_DATE as timestamp,\n\t\tFLAG_OFFICIAL_NUMBER as string,\n\t\tPREVIOUS_FLAG as string,\n\t\tFLAG_CHANGES_PREVIOUS_3_YEARS as decimal(38,18),\n\t\tCLASS1_CODE as string,\n\t\tCLASS1 as string,\n\t\tCLASS1_START_DATE as timestamp,\n\t\tCLASS1_NOTATION as string,\n\t\tCLASS1_RATING as string,\n\t\tCLASS1_VESSEL_ID as string,\n\t\tCLASS1_ESP_IND as string,\n\t\tCLASS1_ICE_CLASS as string,\n\t\tCLASS1_ICE_CLASS_TEXT as string,\n\t\tCLASS1_SUSPENSION_IND as string,\n\t\tCLASS1_PROVISIONAL_IND as string,\n\t\tCLASS1_PROVISIONAL_END_DATE as timestamp,\n\t\tCLASS1_LAST_SURVEY_DATE as timestamp,\n\t\tCLASS2_CODE as string,\n\t\tCLASS2 as string,\n\t\tCLASS2_START_DATE as timestamp,\n\t\tCLASS2_NOTATION as string,\n\t\tCLASS2_RATING as string,\n\t\tCLASS2_VESSEL_ID as string,\n\t\tCLASS2_ESP_IND as string,\n\t\tCLASS2_ICE_CLASS as string,\n\t\tCLASS2_ICE_CLASS_TEXT as string,\n\t\tCLASS2_SUSPENSION_IND as string,\n\t\tCLASS2_PROVISIONAL_IND as string,\n\t\tCLASS2_PROVISIONAL_END_DATE as timestamp,\n\t\tCLASS2_LAST_SURVEY_DATE as timestamp,\n\t\tCLASS_CHANGES_PREVIOUS_3_YEARS as decimal(38,18),\n\t\tPI_CLUB_ID as string,\n\t\tPI_CLUB as string,\n\t\tPI_START_DATE as timestamp,\n\t\tPI_CHANGES_PREVIOUS_3_YEARS as decimal(38,18),\n\t\tEARLIEST_ENGINE_DOB as timestamp,\n\t\tNO_ENGINES as decimal(38,18),\n\t\tPOWER_KW as decimal(38,18),\n\t\tMAXIMUM_RPM as decimal(38,18),\n\t\tHP as decimal(38,18),\n\t\tENGINE_BUILDER as string,\n\t\tENGINE_BUILT_TOWN as string,\n\t\tENGINE_DESIGNATION as string,\n\t\tENGINE_DESIGNER as string,\n\t\tBORE as decimal(38,18),\n\t\tSTROKE as decimal(38,18),\n\t\tENGINE_ACTION as string,\n\t\tNO_CYLINDERS as decimal(38,18),\n\t\tCYLINDER_ARRANGEMENT as string,\n\t\tENGINE_TYPE as string,\n\t\tSTROKE_TYPE as decimal(38,18),\n\t\tFUEL_TYPE as string,\n\t\tFUEL_TYPE2 as string,\n\t\tINMARSAT_CODE as string,\n\t\tINMARSAT_NUMBER as string,\n\t\tANSWER_BACK as string,\n\t\tBENEFICIAL_OWNER_ID as decimal(38,18),\n\t\tBENEFICIAL_OWNER_START_DATE as timestamp,\n\t\tCOMMERCIAL_OPERATOR_ID as decimal(38,18),\n\t\tCOMMERCIAL_OP_START_DATE as timestamp,\n\t\tREGISTERED_OWNER_ID as decimal(38,18),\n\t\tREGISTERED_OWNER_START_DATE as timestamp,\n\t\tTHIRD_PARTY_OPERATOR_ID as decimal(38,18),\n\t\tTHIRD_PARTY_OPERATOR_START_DAT as timestamp,\n\t\tTECHNICAL_MANAGER_ID as decimal(38,18),\n\t\tTECHNICAL_MANAGER_START_DATE as timestamp,\n\t\tNOMINAL_OWNER_ID as decimal(38,18),\n\t\tNOMINAL_OWNER_START_DATE as timestamp,\n\t\tTOTAL_CASUALTIES as decimal(38,18),\n\t\tTOTAL_CASUALTIES_LAST_5_YEARS as decimal(38,18),\n\t\tTOTAL_CASUALTIES_LAST_12_MONTH as decimal(38,18),\n\t\tCASUALTY_DATE as timestamp,\n\t\tCOLLISIONS as decimal(38,18),\n\t\tMACHINERY_DAMAGE as decimal(38,18),\n\t\tHULL_DAMAGE as decimal(38,18),\n\t\tPIRACY as decimal(38,18),\n\t\tINCIDENTS_RESULT_IN_POLLUTION as decimal(38,18),\n\t\tINCIDENT_RESULT_IN_LOS_OF_LIFE as decimal(38,18),\n\t\tTOTAL_DEAD as decimal(38,18),\n\t\tTOTAL_MISSING as decimal(38,18),\n\t\tTOTAL_INJURED as decimal(38,18),\n\t\tLATEST_INCIDENT_PRECIS as string,\n\t\tTOTAL_INSPECTIONS as decimal(38,18),\n\t\tTOTAL_DETENTIONS as decimal(38,18),\n\t\tINSPECTIONS_LAST_3_YEARS as decimal(38,18),\n\t\tDETENTIONS_LAST_3_YEARS as decimal(38,18),\n\t\tINSPECTIONS_LAST_12_MONTHS as decimal(38,18),\n\t\tDETENTIONS_LAST_12_MONTHS as decimal(38,18),\n\t\tLATEST_INSPECTION_DATE as timestamp,\n\t\tNUMBER_DEFICIENCI_LAST_3_YEAR as decimal(38,18),\n\t\tDETENTION_IND as string,\n\t\tINSPECTION_PRECIS as string,\n\t\tNUMBER_OWNER as double,\n\t\tCOUNT_ENG_BUILDER as double,\n\t\tCOUNT_DESIGNATION as double,\n\t\tCOUNT_GBOWNER_CHG_5Y as double,\n\t\tVALID_FROM as timestamp,\n\t\tVALID_TO as timestamp,\n\t\tINSERT_DATE as timestamp,\n\t\tUPDATE_DATE as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\twildcardPaths:['Other/lloyds_vessel_history.parquet']) ~> lloydsvesselhistory\nsource(output(\n\t\tSNAPSHOT_DATE as timestamp,\n\t\tCOMPANY_ID as decimal(38,18),\n\t\tCOMPANY_NAME as string,\n\t\tCOMPANY_FIRST_YEAR as decimal(38,18),\n\t\tCOMPANY_FIRST_YEAR_QUALIFIER as string,\n\t\tCOMPANY_STATUS as string,\n\t\tOFFICE_STATUS as string,\n\t\tADDRESS_LINE_1 as string,\n\t\tADDRESS_LINE_2 as string,\n\t\tADDRESS_LINE_3 as string,\n\t\tADDRESS_LINE_4 as string,\n\t\tTOWN_CITY as string,\n\t\tCOUNTY_STATE as string,\n\t\tPOST_CODE_1 as string,\n\t\tPOST_CODE_2 as string,\n\t\tCOUNTRY as string,\n\t\tTELEPHONE as string,\n\t\tFAX as string,\n\t\tEMAIL as string,\n\t\tWEBSITE as string,\n\t\tISO3 as string,\n\t\tRECORD_LAST_UPDATED as timestamp,\n\t\tAUDIT_CREATED as timestamp,\n\t\tAUDIT_UPDATED as timestamp,\n\t\tLOAD_DATE as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> lloydscompany\nsource(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> tcrossreference\nlloydsvesselhistory, manager lookup(TECHNICAL_MANAGER_ID == company_id_mgr,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> companyMgr\nlloydscompany select(mapColumn(\n\t\tcompany_id_benOwner = COMPANY_ID,\n\t\tobj_gbo_owner = COMPANY_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> benificialOwner\nlloydscompany select(mapColumn(\n\t\tcompany_id_comOper = COMPANY_ID,\n\t\tobj_operator = COMPANY_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> commercialOperator\nlloydscompany select(mapColumn(\n\t\tcompany_id_regOwner = COMPANY_ID,\n\t\tobj_reg_owner = COMPANY_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> regOwner\nlloydscompany select(mapColumn(\n\t\tcompany_id_mgr = COMPANY_ID,\n\t\tobj_manager = COMPANY_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> manager\ncompanyMgr, benificialOwner lookup(BENEFICIAL_OWNER_ID == company_id_benOwner,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> companyGBowner\ncompanyGBowner, commercialOperator lookup(COMMERCIAL_OPERATOR_ID == company_id_comOper,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> companyOperator\ncompanyOperator, regOwner lookup(REGISTERED_OWNER_ID == company_id_regOwner,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> companyRegOwner\ncompanyRegOwner, beneficialOwnerCountry lookup(BENEFICIAL_OWNER_ID == company_id_benOwnCtry,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> companyGBOwnerCnty\ncompanyGBOwnerCnty, managerCountry lookup(TECHNICAL_MANAGER_ID == company_id_mgrCntry,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> companyMgrCnty\ncompanyMgrCnty, operatorCountry lookup(COMMERCIAL_OPERATOR_ID == company_id_operCntry,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> companyOperatorCnty\ncompanyComOwnerCnty select(mapColumn(\n\t\tkey = VESSEL_KEY_COLUMN,\n\t\tobj_object_name = VESSEL_NAME,\n\t\tobj_sourceid = VESSEL_ID,\n\t\tobj_imo_number = IMO,\n\t\tobj_built_year = YEAR_OF_BUILD,\n\t\tobj_flag_iso3_code = FLAG,\n\t\tobj_status_code = STATUS,\n\t\tobj_object_type_code = VESSEL_TYPE_CODE,\n\t\tobj_object_type = VESSEL_TYPE,\n\t\tobj_dwt = DWT,\n\t\tobj_fdwt = FORMULA_DWT,\n\t\tobj_gt = GROSS,\n\t\tobj_breadth_extreme = BREADTH_EXTREME,\n\t\tobj_breadth_moulded = BREADTH_MOULDED,\n\t\tobj_depth = DEPTH,\n\t\tobj_hull_type_code = HULL_TYPE,\n\t\tobj_material_build_code = MATERIAL_OF_BUILD,\n\t\tobj_num_of_decks = NO_DECKS,\n\t\tobj_num_of_total_tanks = TOTAL_TANKS,\n\t\tobj_propulsion_code = PROPULSION_TYPE,\n\t\tobj_speed = SPEED,\n\t\tobj_num_of_crew = NO_CREW,\n\t\tobj_num_of_passengers = NO_PASSENGERS,\n\t\tobj_cap_bale = BALE_CAPACITY,\n\t\tobj_cap_car = CAR_CAPACITY,\n\t\tobj_cap_trailer = TRAILER_CAPACITY,\n\t\tobj_cap_gas = GAS_CAPACITY,\n\t\tobj_cap_grain = GRAIN_CAPACITY,\n\t\tobj_cap_liquid = LIQUID_CAPACITY,\n\t\tobj_cap_teu = TEU_CAPACITY,\n\t\tobj_num_of_hatches = TOTAL_HATCHES,\n\t\tobj_num_of_holds = TOTAL_HOLDS,\n\t\tobj_num_of_propellers = TOTAL_PROPELLERS,\n\t\tobj_propeller_type_code = COMMON_PROPELLER_TYPE_CODE,\n\t\tobj_ship_builder = VESSEL_BUILDER,\n\t\tobj_date_construction_start = CONSTRUCTION_START,\n\t\tobj_date_launch = LAUNCH_DATE,\n\t\tobj_date_construction_end = CONSTRUCTION_END,\n\t\tobj_date_dead = DEAD_DATE,\n\t\tobj_class1_code = CLASS1_CODE,\n\t\tobj_class1 = CLASS1,\n\t\tobj_iceclass = CLASS1_ICE_CLASS,\n\t\tobj_iceclasstext = CLASS1_ICE_CLASS_TEXT,\n\t\tobj_class2_code = CLASS2_CODE,\n\t\tobj_class2 = CLASS2,\n\t\tobj_pandi_club_code = PI_CLUB_ID,\n\t\tobj_pandi_club = PI_CLUB,\n\t\tobj_total_kw = POWER_KW,\n\t\tobj_rpm = MAXIMUM_RPM,\n\t\tobj_hp = HP,\n\t\tobj_engine_builder = ENGINE_BUILDER,\n\t\tobj_engine_designation = ENGINE_DESIGNATION,\n\t\tobj_engine_designer = ENGINE_DESIGNER,\n\t\tobj_num_of_cylinders = NO_CYLINDERS,\n\t\tobj_cylinder_arrangement = CYLINDER_ARRANGEMENT,\n\t\tobj_engine_type = ENGINE_TYPE,\n\t\tobj_stroke_type = STROKE_TYPE,\n\t\tobj_fuel_type = FUEL_TYPE,\n\t\tobj_fuel_type_2 = FUEL_TYPE2,\n\t\tobj_manager_code = TECHNICAL_MANAGER_ID,\n\t\tobj_date_valid_from = VALID_FROM,\n\t\tobj_date_valid_to = VALID_TO,\n\t\tobj_manager,\n\t\tobj_gbo_owner,\n\t\tobj_operator,\n\t\tobj_reg_owner,\n\t\tobj_gb_owner_country_desc,\n\t\tobj_gbo_owner_country,\n\t\tobj_manager_country_desc,\n\t\tobj_manager_country_code,\n\t\tobj_operator_country_desc,\n\t\tobj_operator_country_code,\n\t\tobj_reg_owner_country_desc,\n\t\tobj_reg_owner_country\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tmptabell\ntmptabell derive(code_type_id_market = 806,\n\t\tcode_type_id_object_type = 45,\n\t\tsource_system = 'LLOYDS',\n\t\tcode_type_id_country = 50,\n\t\tcode_type_id_flac = 100,\n\t\tobj_gard_objectid = '',\n\t\tobj_flag_iso3 = '',\n\t\tobj_status = '',\n\t\tobj_class3 = '',\n\t\tobj_class3_code = '',\n\t\tobj_m3 = '',\n\t\tobj_ship_builder_country = '',\n\t\tobj_service_speed = '',\n\t\tobj_length_overall = '',\n\t\tobj_hullid = '',\n\t\tobj_date_built = '',\n\t\tobj_propeller_type_desc = '',\n\t\tobj_hull_type = '',\n\t\tobj_propulsion = '',\n\t\tobj_material_build = '',\n\t\ticeclass = '',\n\t\ticeclasstext = '',\n\t\tlast_updated_by = 'pre_dim_object',\n\t\tlloyds_vessel_id = obj_sourceid) ~> derivedColumns\nderivedColumns, xrefMarketArea lookup(code_type_id_market == code_type_id_xref_market\n\t&& source_system == source_system_xref_market\n\t&& obj_gbo_owner_country == source_code_key_xref_market,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> marketArea\nmarketArea, xrefCountry lookup(code_type_id_country == code_type_id_xref_country\n\t&& source_system == source_system_xref_country\n\t&& obj_gbo_owner_country == source_code_key_xref_country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> country\ncountry, xrefOTDesc lookup(obj_object_type_code == source_code_key_xref_OTDesc\n\t&& code_type_id_object_type == code_type_id_xref_OTDesc\n\t&& source_system == source_system_xref_OTDesc,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> objectTypeDesc\nobjectTypeDesc, xrefFlagDesc lookup(source_system == source_system_flagDesc\n\t&& obj_flag_iso3_code == source_code_key_flagDesc\n\t&& code_type_id_flac == code_type_id_flagDesc,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> flagDesc\nlloydscompany select(mapColumn(\n\t\tcompany_id_benOwnCtry = COMPANY_ID,\n\t\tobj_gb_owner_country_desc = COUNTRY,\n\t\tobj_gbo_owner_country = ISO3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> beneficialOwnerCountry\nlloydscompany select(mapColumn(\n\t\tcompany_id_mgrCntry = COMPANY_ID,\n\t\tobj_manager_country_desc = COUNTRY,\n\t\tobj_manager_country_code = ISO3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> managerCountry\nlloydscompany select(mapColumn(\n\t\tcompany_id_operCntry = COMPANY_ID,\n\t\tobj_operator_country_desc = COUNTRY,\n\t\tobj_operator_country_code = ISO3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> operatorCountry\nlloydscompany select(mapColumn(\n\t\tcompany_id_cowcnty = COMPANY_ID,\n\t\tobj_reg_owner_country_desc = COUNTRY,\n\t\tobj_reg_owner_country = ISO3\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> commercialOwnerCntry\ncompanyOperatorCnty, commercialOwnerCntry lookup(COMMERCIAL_OPERATOR_ID == company_id_cowcnty,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> companyComOwnerCnty\ntcrossreference select(mapColumn(\n\t\tsource_code_key_xref_market = SOURCE_CODE_KEY,\n\t\tsource_system_xref_market = SOURCE_SYSTEM,\n\t\tobj_market_area_code = TARGET_CODE,\n\t\tobj_market_area_desc = TARGET_DESCRIPTION,\n\t\tcode_type_id_xref_market = CODE_TYPE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefMarketArea\ntcrossreference select(mapColumn(\n\t\tcode_type_id_xref_country = CODE_TYPE_ID,\n\t\tsource_system_xref_country = SOURCE_SYSTEM,\n\t\tsource_code_key_xref_country = SOURCE_CODE_KEY,\n\t\tobj_market_area_country_code = TARGET_CODE,\n\t\tobj_market_area_country_desc = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefCountry\ntcrossreference select(mapColumn(\n\t\tsource_code_key_xref_OTDesc = SOURCE_CODE_KEY,\n\t\tsource_system_xref_OTDesc = SOURCE_SYSTEM,\n\t\ttarget_description_object_type = TARGET_DESCRIPTION,\n\t\tcode_type_id_xref_OTDesc = CODE_TYPE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefOTDesc\ntcrossreference select(mapColumn(\n\t\tsource_code_key_flagDesc = SOURCE_CODE_KEY,\n\t\tsource_system_flagDesc = SOURCE_SYSTEM,\n\t\ttarget_code_flag = TARGET_CODE,\n\t\ttarget_description_flag = TARGET_DESCRIPTION,\n\t\tcode_type_id_flagDesc = CODE_TYPE_ID\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefFlagDesc\nexpression select(mapColumn(\n\t\tobj_key = key,\n\t\tobj_imo_number,\n\t\tobj_built_year,\n\t\tobj_flag_iso3_code,\n\t\tobj_status_code,\n\t\tobj_object_type_code,\n\t\tobj_object_type,\n\t\tobj_dwt,\n\t\tobj_fdwt,\n\t\tobj_gt,\n\t\tobj_breadth_extreme,\n\t\tobj_breadth_moulded,\n\t\tobj_depth,\n\t\tobj_hull_type_code,\n\t\tobj_num_of_decks,\n\t\tobj_num_of_total_tanks,\n\t\tobj_propulsion_code,\n\t\tobj_speed,\n\t\tobj_num_of_crew,\n\t\tobj_num_of_passengers,\n\t\tobj_cap_bale,\n\t\tobj_cap_car,\n\t\tobj_cap_trailer,\n\t\tobj_cap_gas,\n\t\tobj_cap_grain,\n\t\tobj_cap_liquid,\n\t\tobj_cap_teu,\n\t\tobj_num_of_hatches,\n\t\tobj_num_of_holds,\n\t\tobj_num_of_propellers,\n\t\tobj_propeller_type_code,\n\t\tobj_ship_builder,\n\t\tobj_date_construction_start,\n\t\tobj_date_launch,\n\t\tobj_date_construction_end,\n\t\tobj_date_dead,\n\t\tobj_class1_code,\n\t\tobj_class1,\n\t\tobj_iceclass,\n\t\tobj_iceclasstext,\n\t\tobj_class2_code,\n\t\tobj_class2,\n\t\tobj_pandi_club_code,\n\t\tobj_pandi_club,\n\t\tobj_total_kw,\n\t\tobj_rpm,\n\t\tobj_hp,\n\t\tobj_engine_builder,\n\t\tobj_engine_designation,\n\t\tobj_engine_designer,\n\t\tobj_num_of_cylinders,\n\t\tobj_cylinder_arrangement,\n\t\tobj_engine_type,\n\t\tobj_stroke_type,\n\t\tobj_fuel_type,\n\t\tobj_manager_code,\n\t\tobj_date_valid_from,\n\t\tobj_date_valid_to,\n\t\tobj_manager,\n\t\tobj_gbo_owner,\n\t\tobj_operator,\n\t\tobj_reg_owner,\n\t\tobj_gb_owner_country_desc,\n\t\tobj_gbo_owner_country,\n\t\tobj_manager_country_desc,\n\t\tobj_manager_country_code,\n\t\tobj_operator_country_desc,\n\t\tobj_operator_country_code,\n\t\tobj_reg_owner_country_desc,\n\t\tobj_reg_owner_country,\n\t\tobj_gard_objectid,\n\t\tobj_flag_iso3,\n\t\tobj_status,\n\t\tobj_class3,\n\t\tobj_class3_code,\n\t\tobj_m3,\n\t\tobj_ship_builder_country,\n\t\tobj_service_speed,\n\t\tobj_length_overall,\n\t\tobj_hullid,\n\t\tobj_date_built,\n\t\tobj_propeller_type_desc,\n\t\tobj_hull_type,\n\t\tobj_propulsion,\n\t\tobj_material_build,\n\t\tlast_updated_by,\n\t\tlloyds_vessel_id,\n\t\tobj_market_area_code,\n\t\tobj_market_area_desc,\n\t\tobj_market_area_country_code,\n\t\tobj_market_area_country_desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectOutputColumn\nflagDesc derive(obj_object_type = case(isNull(target_description_object_type), obj_object_type, target_description_object_type),\n\t\tobj_flag_iso3 = case(isNull(target_description_flag), obj_flag_iso3, target_description_flag)) ~> expression\nselectOutputColumn alterRow(upsertIf(!isNull(obj_key))) ~> alterRow\nalterRow sink(input(\n\t\tagt_description as string,\n\t\tagt_key as string,\n\t\tlast_updated_by as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['pre_dim_object.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> preDimObject"
		}
	}
}