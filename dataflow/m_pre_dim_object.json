{
	"name": "m_pre_dim_object",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Lloyds",
						"type": "DatasetReference"
					},
					"name": "lloydsvesselhistory"
				},
				{
					"dataset": {
						"referenceName": "Lloyds",
						"type": "DatasetReference"
					},
					"name": "lloydscompany"
				},
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "tcrossreference"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "companyMgr"
				},
				{
					"name": "benificialOwner"
				},
				{
					"name": "commercialOperator"
				},
				{
					"name": "regOwner"
				},
				{
					"name": "technicalMgr"
				},
				{
					"name": "companyGBowner"
				},
				{
					"name": "companyOperator"
				},
				{
					"name": "companyRegOwner"
				},
				{
					"name": "companyGBOwnerCnty"
				},
				{
					"name": "companyMgrCnty"
				},
				{
					"name": "companyOperatorCnty"
				},
				{
					"name": "tmptabell"
				},
				{
					"name": "derivedColumns"
				},
				{
					"name": "marketArea"
				},
				{
					"name": "country"
				}
			],
			"script": "source(output(\n\t\tbreakercompanyid as decimal(38,18),\n\t\tbrokenenddate as timestamp,\n\t\tbrokenendqual as string,\n\t\tbrokenplaceid as decimal(38,18),\n\t\tbuiltplaceid as decimal(38,18),\n\t\tconsend as timestamp,\n\t\tconsendqual as string,\n\t\tconsstart as timestamp,\n\t\tconsstartqual as string,\n\t\tcreated as timestamp,\n\t\tdeaddate as timestamp,\n\t\tdeadqual as string,\n\t\tlaunchdate as timestamp,\n\t\tlaunchqual as string,\n\t\tlossdate as timestamp,\n\t\tlossqual as string,\n\t\tlttonnes as decimal(38,18),\n\t\tordercancelled as timestamp,\n\t\tordercancelledqual as string,\n\t\torderdate as timestamp,\n\t\torderqual as string,\n\t\tordervalue as decimal(38,18),\n\t\toriginalschedconsend as timestamp,\n\t\toriginalschedconsendqual as string,\n\t\trecordlastupdated as timestamp,\n\t\tscheduledconend as timestamp,\n\t\tscheduledconendqual as string,\n\t\tvesselbuilderid as decimal(38,18),\n\t\tvesselid as decimal(38,18),\n\t\tyardnumber as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\twildcardPaths:['Lloyds/\"lloyds_vessel_history\"']) ~> lloydsvesselhistory\nsource(output(\n\t\taddress_line_1 as string,\n\t\taddress_line_2 as string,\n\t\taddress_line_3 as string,\n\t\taddress_line_4 as string,\n\t\taudit_created as timestamp,\n\t\taudit_updated as timestamp,\n\t\tcompany_first_year as decimal(38,18),\n\t\tcompany_first_year_qualifier as string,\n\t\tcompany_id as decimal(38,18),\n\t\tcompany_name as string,\n\t\tcompany_status as string,\n\t\tcountry as string,\n\t\tcounty_state as string,\n\t\temail as string,\n\t\tfax as string,\n\t\tiso3 as string,\n\t\toffice_status as string,\n\t\tpost_code_1 as string,\n\t\tpost_code_2 as string,\n\t\trecord_last_updated as timestamp,\n\t\tsnapshot_date as timestamp,\n\t\ttelephone as string,\n\t\ttown_city as string,\n\t\twebsite as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\twildcardPaths:['Lloyds/\"lloyds_company\"']) ~> lloydscompany\nsource(output(\n\t\tFROM_CURRENCY_ID as double,\n\t\tTO_CURRENCY_ID as double,\n\t\tEXCHANGE_FROM_DATE as timestamp,\n\t\tEXCHANGE_RATE as decimal(38,18),\n\t\tEXCHANGE_TO_DATE as timestamp,\n\t\tFROM_CURRENCY_CODE as string,\n\t\tTO_CURRENCY_CODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\twildcardPaths:['Other']) ~> tcrossreference\nlloydsvesselhistory, technicalMgr lookup(ERROR_FUNCTION('') == company_id,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> companyMgr\nlloydscompany select(mapColumn(\n\t\taddress_line_1,\n\t\taddress_line_2,\n\t\taddress_line_3,\n\t\taddress_line_4,\n\t\taudit_created,\n\t\taudit_updated,\n\t\tcompany_first_year,\n\t\tcompany_first_year_qualifier,\n\t\tcompany_id,\n\t\tcompany_name,\n\t\tcompany_status,\n\t\tcountry,\n\t\tcounty_state,\n\t\temail,\n\t\tfax,\n\t\tiso3,\n\t\toffice_status,\n\t\tpost_code_1,\n\t\tpost_code_2,\n\t\trecord_last_updated,\n\t\tsnapshot_date,\n\t\ttelephone,\n\t\ttown_city,\n\t\twebsite\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> benificialOwner\nlloydscompany select(mapColumn(\n\t\taddress_line_1,\n\t\taddress_line_2,\n\t\taddress_line_3,\n\t\taddress_line_4,\n\t\taudit_created,\n\t\taudit_updated,\n\t\tcompany_first_year,\n\t\tcompany_first_year_qualifier,\n\t\tcompany_id,\n\t\tcompany_name,\n\t\tcompany_status,\n\t\tcountry,\n\t\tcounty_state,\n\t\temail,\n\t\tfax,\n\t\tiso3,\n\t\toffice_status,\n\t\tpost_code_1,\n\t\tpost_code_2,\n\t\trecord_last_updated,\n\t\tsnapshot_date,\n\t\ttelephone,\n\t\ttown_city,\n\t\twebsite\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> commercialOperator\nlloydscompany select(mapColumn(\n\t\taddress_line_1,\n\t\taddress_line_2,\n\t\taddress_line_3,\n\t\taddress_line_4,\n\t\taudit_created,\n\t\taudit_updated,\n\t\tcompany_first_year,\n\t\tcompany_first_year_qualifier,\n\t\tcompany_id,\n\t\tcompany_name,\n\t\tcompany_status,\n\t\tcountry,\n\t\tcounty_state,\n\t\temail,\n\t\tfax,\n\t\tiso3,\n\t\toffice_status,\n\t\tpost_code_1,\n\t\tpost_code_2,\n\t\trecord_last_updated,\n\t\tsnapshot_date,\n\t\ttelephone,\n\t\ttown_city,\n\t\twebsite\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> regOwner\nlloydscompany select(mapColumn(\n\t\taddress_line_1,\n\t\taddress_line_2,\n\t\taddress_line_3,\n\t\taddress_line_4,\n\t\taudit_created,\n\t\taudit_updated,\n\t\tcompany_first_year,\n\t\tcompany_first_year_qualifier,\n\t\tcompany_id,\n\t\tcompany_name,\n\t\tcompany_status,\n\t\tcountry,\n\t\tcounty_state,\n\t\temail,\n\t\tfax,\n\t\tiso3,\n\t\toffice_status,\n\t\tpost_code_1,\n\t\tpost_code_2,\n\t\trecord_last_updated,\n\t\tsnapshot_date,\n\t\ttelephone,\n\t\ttown_city,\n\t\twebsite\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> technicalMgr\ncompanyMgr, benificialOwner lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> companyGBowner\ncompanyGBowner, commercialOperator lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> companyOperator\ncompanyOperator, regOwner lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> companyRegOwner\ncompanyRegOwner, benificialOwner lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> companyGBOwnerCnty\ncompanyGBOwnerCnty, technicalMgr lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> companyMgrCnty\ncompanyMgrCnty, commercialOperator lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> companyOperatorCnty\ncompanyOperatorCnty select(mapColumn(\n\t\teach(match(true()),\n\t\t\t'obj_'+$$ = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tmptabell\ntmptabell derive(code_type_id_market = 806,\n\t\tsource_system = 'LLOYDS',\n\t\tcode_type_id_country = 50) ~> derivedColumns\nderivedColumns, tcrossreference lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> marketArea\nmarketArea, tcrossreference lookup(ERROR_FUNCTION('') == ERROR_FUNCTION(''),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> country"
		}
	}
}