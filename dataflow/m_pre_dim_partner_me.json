{
	"name": "m_pre_dim_partner_me",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "paatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "peatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pebtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "peztable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "qtbtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "crctable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "tcrossreference"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pectable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "cbsttable"
				},
				{
					"dataset": {
						"referenceName": "cbstable",
						"type": "DatasetReference"
					},
					"name": "cbstable2"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "SfCompany"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "maxpeb"
				},
				{
					"name": "pebmaxpeb"
				},
				{
					"name": "pebqtb"
				},
				{
					"name": "Prtstatus"
				},
				{
					"name": "prtpea"
				},
				{
					"name": "peacrc"
				},
				{
					"name": "paatable1"
				},
				{
					"name": "Paafiltered"
				},
				{
					"name": "crcpaa"
				},
				{
					"name": "paapez"
				},
				{
					"name": "lookupState"
				},
				{
					"name": "Expressions"
				},
				{
					"name": "Select1"
				},
				{
					"name": "lookupCapital"
				},
				{
					"name": "Select2"
				},
				{
					"name": "lookupCompSubtype"
				},
				{
					"name": "Select3"
				},
				{
					"name": "lookupCountry"
				},
				{
					"name": "Select4"
				},
				{
					"name": "lookupContractType"
				},
				{
					"name": "Select5"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Lookup2"
				},
				{
					"name": "partner"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "constantBroker"
				},
				{
					"name": "DerivedColumn4"
				},
				{
					"name": "constantcontract"
				},
				{
					"name": "Union1"
				},
				{
					"name": "deduplicate"
				},
				{
					"name": "state"
				},
				{
					"name": "capital"
				},
				{
					"name": "country"
				},
				{
					"name": "Select8"
				},
				{
					"name": "selectedcolumns"
				},
				{
					"name": "compsubtype"
				},
				{
					"name": "pebpeoopeaid"
				}
			],
			"script": "source(output(\n\t\tpaapeaid as long,\n\t\tpaafunct as integer,\n\t\tpaacaddress3 as string,\n\t\tpaalongname as string,\n\t\tpaacname as string,\n\t\tpaacaddress4 as string,\n\t\tpaacaddress2 as string,\n\t\tpaacaddress1 as string,\n\t\tpaactelex as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \t\t\\n                paapeaid,\\n\t\tpaafunct ,\\n\t\tpaacaddress3 ,\\n\t\tpaalongname ,\\n\t\tpaacname ,\\n\t\tpaacaddress4 ,\\n\t\tpaacaddress2 ,\\n\t\tpaacaddress1 ,\\n\t\tpaactelex \\n from dwh_stage.p_paatable\\n where ISNULL(paafunct,0) = 0',\n\tformat: 'query') ~> paatable\nsource(output(\n\t\tpeapeaid as long,\n\t\tpeamdescr as string,\n\t\tpeaccode as integer,\n\t\tpealeicode as string,\n\t\tpeasubtype as short,\n\t\tpeaextid2 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \\n\t\tpeapeaid,\\n\t\tpeamdescr,\\n\t\tpeaccode,\\n\t\tpealeicode,\\n\t\tpeasubtype,\\n\t\tpeaextid2\\nfrom dwh_stage.p_peatable',\n\tformat: 'query') ~> peatable\nsource(output(\n\t\tpebpebid as string,\n\t\tpebpeaid as long,\n\t\tpebpeoopeaid as long,\n\t\tpebratcod as string,\n\t\tpebratedate as date,\n\t\tpebisolan as string,\n\t\tpebratcomp as long,\n\t\tpebtaxno as string,\n\t\tpebpever as short,\n\t\tpebdunco as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \\n\t\tpebpebid,\\n\t\tpebpeaid,\\n\t\tpebpeoopeaid,\\n\t\tpebratcod,\\n\t\tpebratedate,\\n\t\tpebisolan,\\n\t\tpebratcomp,\\n\t\tpebtaxno,\\n\t\tpebpever,\\n                pebdunco\\nfrom   dwh_stage.p_pebtable',\n\tformat: 'query') ~> pebtable\nsource(output(\n\t\tpezpezid as long,\n\t\tpezdefbusnbranch as integer,\n\t\tpezdefcurr as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select pezpezid,\\n         pezdefbusnbranch,\\n         pezdefcurr\\n from dwh_stage.p_peztable',\n\tformat: 'query') ~> peztable\nsource(output(\n\t\tqtbfieldn as string,\n\t\tqtbdispynsw as string,\n\t\tqtbmdescr as string,\n\t\tqtbvalue as string,\n\t\tqtbsdescr as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_qtbtable\\nwhere qtbfieldn = \\'pebdunco\\'',\n\tformat: 'query') ~> qtbtable\nsource(output(\n\t\tcrcratcod as string,\n\t\tcrcmdescr as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select crcratcod,crcmdescr from dwh_stage.p_crctable',\n\tformat: 'query') ~> crctable\nsource(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference\\nwhere source_system = \\'PARIS\\'',\n\tformat: 'query') ~> tcrossreference\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> pectable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> cbsttable\nsource(output(\n\t\tpeamaxper as decimal(28,10),\n\t\tpeaccint as string,\n\t\tpeafromcomp as long,\n\t\tpeaknvmark as string,\n\t\tpeaoutgiro as integer,\n\t\tpeapurtyp as integer,\n\t\tpeacrmid as long,\n\t\tpeanotaco as integer,\n\t\tpeaalternatepayer as long,\n\t\tpeaiesect as string,\n\t\tpeaclomet as integer,\n\t\tpeaxlpoin as long,\n\t\tpeaieint4 as string,\n\t\tpeaieint5 as string,\n\t\tpeavendorid as string,\n\t\tpeaieint2 as string,\n\t\tpeastopcod as integer,\n\t\tpeaaprobo as integer,\n\t\tpeaie3busnse as integer,\n\t\tpeacustomerid as string,\n\t\tpeacomp2 as integer,\n\t\tpeaacorbo as integer,\n\t\tpeaprovmailfreq as integer,\n\t\tpeaiecon2 as integer,\n\t\tpeaclobor as integer,\n\t\tpeaiediv as string,\n\t\tpeaoutgirolusign as string,\n\t\tpeaorigmemberfrom as integer,\n\t\tpeapibregsign as string,\n\t\tpeanopurr as string,\n\t\tpeaextid2 as string,\n\t\tpeaingirolusign as string,\n\t\tpeamailcndnsplit as string,\n\t\tpeaoutcreday as integer,\n\t\tpeasex as string,\n\t\tpeaiebusnse as integer,\n\t\tpeastaamt as integer,\n\t\tpeaingiroludate as date,\n\t\tpeaaddbor as integer,\n\t\tpeacolid as string,\n\t\tpeaaclobo as integer,\n\t\tpeamexcurr as string,\n\t\tpeaincreday as integer,\n\t\tpeaiecon3 as integer,\n\t\tpeamexamt as long,\n\t\tpeapeaid as long,\n\t\tpeaexttransfer as string,\n\t\tpeamexcdate as date,\n\t\tpeaiyear as integer,\n\t\tpeaieint as string,\n\t\tpeaiebusndiv as integer,\n\t\tpeacrdate as date,\n\t\tpeaieint1 as string,\n\t\tpeaiecon4 as integer,\n\t\tpeaswrun as integer,\n\t\tpeainvisible as string,\n\t\tpeaie2busnse as integer,\n\t\tpealuuser as long,\n\t\tpeastdate as date,\n\t\tpeaingirono as string,\n\t\tpeaie2busndiv as integer,\n\t\tpeaswink as integer,\n\t\tpeaclosmailfreq as integer,\n\t\tpeapersrfl as long,\n\t\tpeaclmadv as integer,\n\t\tpeanotdays as integer,\n\t\tpeacruser as long,\n\t\tpeastoppremnote as string,\n\t\tpeaxlcurr as string,\n\t\tpeaaaddbo as integer,\n\t\tpeavatno as string,\n\t\tpeanotlay as integer,\n\t\tpearesdat as integer,\n\t\tpeastaniv as integer,\n\t\tpeaoutgiroludate as date,\n\t\tpeaclmintynsw as string,\n\t\tpeamdescr as binary,\n\t\tpeaieint3 as string,\n\t\tpeaie3busndiv as integer,\n\t\tpeabirtno as string,\n\t\tpeaoutgirono as string,\n\t\tpeaorgno as string,\n\t\tpealudate as date,\n\t\tpeastatyp as integer,\n\t\tpeasubtype as integer,\n\t\tpeacalcurr as string,\n\t\tpeasw10 as string,\n\t\tpeaclmbor as integer,\n\t\tpeaaddmailfreq as integer,\n\t\tpeapersid as string,\n\t\tpeastensw as integer,\n\t\tpeadueday as integer,\n\t\tpealang2 as string,\n\t\tpeaprobor as integer,\n\t\tpeamailsizemb as decimal(28,10),\n\t\tpeacrsign as string,\n\t\tpeacclamt as long,\n\t\tpeacorrmailfreq as integer,\n\t\tpeamailuseservadress as string,\n\t\tpeaclmmailfreq as integer,\n\t\tpeaiecond as string,\n\t\tpeacalamt as long,\n\t\tpeaendate as date,\n\t\tpeaaccaddynsw as string,\n\t\tpeaaclmbo as integer,\n\t\tpeamasked as string,\n\t\tpeaaclmadv as integer,\n\t\tpeanopdue as integer,\n\t\tpeaextid as string,\n\t\tpealusign as string,\n\t\tpeaingiro as integer,\n\t\tpeamexpro as decimal(28,10),\n\t\tpeaccintr as decimal(28,10),\n\t\tpeaexttransfer2 as string,\n\t\tpeanotsort as integer,\n\t\tpeastopuse as string,\n\t\tpeacclcurr as string,\n\t\tpeacorbo as integer,\n\t\tpeasttniv as integer,\n\t\tpeaiecon5 as integer,\n\t\tpeausecolfee as string,\n\t\tpeabirtws as integer,\n\t\tpeaclamailfreq as integer,\n\t\tpeaccode as integer,\n\t\tpeaiselectronic as string,\n\t\tpeasttprmclm as integer,\n\t\tpeaiecon1 as integer,\n\t\tpealeicode as binary\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> cbstable2\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SfCompany\npebtable aggregate(groupBy(pebpeaid),\n\tmaxpebpever = max(pebpever)) ~> maxpeb\npebtable, maxpeb join(pebtable@pebpeaid == maxpeb@pebpeaid\n\t&& pebpever == maxpebpever,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> pebmaxpeb\npebmaxpeb, qtbtable join(pebdunco == toInteger(qtbvalue),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> pebqtb\npebqtb select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid = pebtable@pebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever = pebpever,\n\t\tpebdunco,\n\t\tpebpeaid = maxpeb@pebpeaid,\n\t\tqtbmdescr\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Prtstatus\npebpeoopeaid, peatable join(pebpeaid == peapeaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> prtpea\nprtpea, crctable join(pebratcod == crcratcod,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> peacrc\npaatable select(mapColumn(\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> paatable1\npaatable1 filter(iifNull(paafunct,0) ==0) ~> Paafiltered\npeacrc, paatable join(peapeaid == paapeaid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> crcpaa\ncrcpaa, peztable join(peapeaid == pezpezid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> paapez\nExpressions, state lookup(pebtaxno == SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lookupState\npaapez derive(Key = concat('P',toString(peapeaid)),\n\t\t{Partner Name} = iifNull(trim(paalongname),iifNull(trim(paacname, peamdescr))),\n\t\tAddress = concat(trim(paacaddress1),iif(isNull((concat(trim(paacaddress2),concat(trim(paacaddress3), trim(paacaddress4))))),' ',paacaddress2)),\n\t\t{Rating Code} = case(isNull(pebratcod),'N/A',pebratcod),\n\t\t{Rating Code desc} = case(isNull(crcmdescr),'N/A',crcmdescr),\n\t\t{Partner Short Name} = peamdescr,\n\t\tPezdefbusnbranch = toString(pezdefbusnbranch),\n\t\tpeasubtype = toString(peasubtype),\n\t\t{Source System} = 'PARIS',\n\t\t{Code Type State} = 368,\n\t\t{Code Type Capital} = 116,\n\t\t{Code Type Comp Sub} = 795,\n\t\t{Code Type Country} = 50) ~> Expressions\nlookupState select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR = qtbmdescr,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch = Expressions@Pezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\tSOURCE_CODE_KEY,\n\t\tSOURCE_SYSTEM,\n\t\t{State Code} = TARGET_CODE,\n\t\t{State Description} = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, capital lookup(Pezdefbusnbranch == tcrossreference@SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lookupCapital\nlookupCapital select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code} = TARGET_CODE,\n\t\t{Capital Description} = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2, compsubtype lookup(peasubtype == SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lookupCompSubtype\nlookupCompSubtype select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Company Sub Code} = TARGET_CODE,\n\t\t{Company Sub Description} = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, country lookup(pebisolan == SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lookupCountry\nlookupCountry select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Domicile Code} = TARGET_CODE,\n\t\t{Domicile Description} = TARGET_DESCRIPTION,\n\t\t{Company Sub Code},\n\t\t{Company Sub Description}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect4, pectable lookup(peapeaid == pecpecid,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lookupContractType\nlookupContractType select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Domicile Code},\n\t\t{Domicile Description},\n\t\tpeccontype = peccontyp,\n\t\t{Company Sub Code},\n\t\t{Company Sub Description}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect5 derive({Contract Type} = case(peccontype == '0' , 'NORMAL',case(peccontype == '1','WAR',case(peccontype == '9','XL','OTHER')))) ~> DerivedColumn1\nDerivedColumn1, paatable lookup(pebratcomp == paatable@paapeaid,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup2\nLookup2 select(mapColumn(\n\t\tkey = Key,\n\t\t{Partner Name},\n\t\tAddress,\n\t\tpebdunco,\n\t\tQtbmdescr = QTBMDESCR,\n\t\tAddress1 = Select5@paacaddress1,\n\t\tAddress2 = Select5@paacaddress2,\n\t\tAddress3 = Select5@paacaddress3,\n\t\tAddress4 = Select5@paacaddress4,\n\t\tpaacaddress3 = Select5@paacaddress3,\n\t\t{Rating Company} = paatable@paacname,\n\t\tPebratcod = pebratcod,\n\t\t{Rating Code desc},\n\t\tPebratedate = pebratedate,\n\t\t{Domicile Code},\n\t\t{Domicile Description},\n\t\tPeaccode = peaccode,\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Company Sub code} = {Company Sub Code},\n\t\t{Company Sub Description},\n\t\tState = {State Description},\n\t\t{Paacname RatingComp} = paatable@paacname,\n\t\tPeaextid2 = peaextid2,\n\t\t{Contract Type}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> partner\ncbsttable derive(Key = 'PDIR99',\n\t\t{Partner Name} = 'Direct Placed',\n\t\tAddress = 'Not Applicable',\n\t\tpebdunco = toDecimal(null()),\n\t\tDuncodesc = 'Not Applicable',\n\t\tAddress1 = 'Not Applicable',\n\t\tAddress2 = 'Not Applicable',\n\t\tAddress3 = 'Not Applicable',\n\t\tAddress4 = 'Not Applicable',\n\t\t{Rating Company} = 'Not Applicable',\n\t\t{Rating Code} = 'N/A',\n\t\t{Rating Code Description} = 'Not Applicable',\n\t\t{Rating Date} = toTimestamp(case(1!=1,1)),\n\t\t{Domicile Code} = 'N/A',\n\t\t{Domicile Description} = 'Not Applicable',\n\t\tPeacode = toDecimal(null()),\n\t\t{Capital Code} = toString(null()),\n\t\t{Capital Description} = toString(null()),\n\t\t{Company Sub code} = toString(null()),\n\t\t{Company Sub Desc} = toString(null()),\n\t\tState = 'N/A',\n\t\tPeaextid2 = toString(null()),\n\t\t{Contract Type} = toString(null())) ~> DerivedColumn3\nDerivedColumn3 select(mapColumn(\n\t\tkey = Key,\n\t\t{Partner Name},\n\t\tAddress,\n\t\tpebdunco,\n\t\tQtbmdescr = Duncodesc,\n\t\tAddress1,\n\t\tAddress2,\n\t\tAddress3,\n\t\tAddress4,\n\t\t{Rating Company},\n\t\tPebratcod = {Rating Code},\n\t\t{Rating Code desc} = {Rating Code Description},\n\t\tPebratedate = {Rating Date},\n\t\t{Domicile Code},\n\t\t{Domicile Description},\n\t\tPeaccode = Peacode,\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Company Sub code},\n\t\t{Company Sub Description} = {Company Sub Desc},\n\t\tState,\n\t\tPeaextid2,\n\t\t{Contract Type}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> constantBroker\ncbstable2 derive({Partner Name} = 'Facultativ',\n\t\t{Pk Key} = 'PFACULTATIV',\n\t\tAddress = 'Not Applicable',\n\t\tAddress1 = 'Not Applicable',\n\t\tAddress2 = 'Not Applicable',\n\t\tAddress3 = 'Not Applicable',\n\t\tAddress4 = 'Not Applicable',\n\t\t{Rating Company} = 'Not Applicable',\n\t\t{Rating Code} = 'N/A',\n\t\t{Rating Code desc} = 'Not Applicable',\n\t\t{Domicile Description} = 'Not Applicable',\n\t\tPebratedate = toTimestamp(case(1!=1,1)),\n\t\tCity = 'N/A',\n\t\tState = 'N/A',\n\t\tPebdunco = toDecimal(null()),\n\t\tDuncodesc = 'Not Applicable',\n\t\t{Pea Lei Code} = toString(null()),\n\t\tPeaccode = toDecimal(null()),\n\t\t{Contract Type} = 'OTHER') ~> DerivedColumn4\nDerivedColumn4 select(mapColumn(\n\t\tkey = {Pk Key},\n\t\t{Partner Name},\n\t\tAddress,\n\t\tpebdunco = Pebdunco,\n\t\tQtbmdescr = Duncodesc,\n\t\tAddress1,\n\t\tAddress2,\n\t\tAddress3,\n\t\tAddress4,\n\t\t{Rating Company},\n\t\tPebratcod = {Rating Company},\n\t\t{Rating Code desc},\n\t\tPebratedate,\n\t\t{Domicile Code} = City,\n\t\t{Domicile Description},\n\t\tPeaccode = DerivedColumn4@Peaccode,\n\t\t{Capital Code} = {Pea Lei Code},\n\t\t{Capital Description} = {Pea Lei Code},\n\t\t{Company Sub code} = {Pea Lei Code},\n\t\t{Company Sub Description} = {Pea Lei Code},\n\t\tState,\n\t\t{Contract Type},\n\t\tPeaextid2 = {Pea Lei Code}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> constantcontract\npartner, constantBroker, constantcontract union(byName: true)~> Union1\nUnion1 aggregate(groupBy(Key = key),\n\teach(match(name!='key'), $$ = first($$))) ~> deduplicate\ntcrossreference filter(code_type_id == 368 ) ~> state\ntcrossreference filter(CODE_TYPE_ID == 116 && SOURCE_SYSTEM == 'PARIS') ~> capital\ntcrossreference filter(CODE_TYPE_ID == 50 && SOURCE_SYSTEM == 'PARIS') ~> country\nSfCompany select(mapColumn(\n\t\taccount_resp_me,\n\t\taccount_resp_pi,\n\t\taccount_status,\n\t\tclient_lost_reason,\n\t\tcompany_email,\n\t\tcompany_id,\n\t\tcompany_name,\n\t\tcompany_owner_full_name,\n\t\tcompany_owner_id,\n\t\tcountry,\n\t\tcuo_full_name,\n\t\tcuo_user_id,\n\t\tdate_inserted,\n\t\tdate_updated,\n\t\tgard_contact_id,\n\t\tmarket_area_code,\n\t\tmarket_area_description,\n\t\tmarket_area_id,\n\t\tparent_company_id,\n\t\tparent_company_name,\n\t\tparis_gic_id,\n\t\tprimary_contact_email,\n\t\tprimary_contact_name,\n\t\tsf_last_updated_date,\n\t\tsource_system\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select8\ndeduplicate select(mapColumn(\n\t\tKey,\n\t\tPartner_Name = {Partner Name},\n\t\tAddress,\n\t\tpebdunco,\n\t\tQtbmdescr,\n\t\tAddress1,\n\t\tAddress2,\n\t\tAddress3,\n\t\tAddress4,\n\t\tRating_Company = {Rating Company},\n\t\tPebratcod,\n\t\tRating_Code_desc = {Rating Code desc},\n\t\tPebratedate,\n\t\tDomicile_Code = {Domicile Code},\n\t\tDomicile_Description = {Domicile Description},\n\t\tPeaccode,\n\t\tCapital_Code = {Capital Code},\n\t\tCapital_Description = {Capital Description},\n\t\tCompany_Sub_code = {Company Sub code},\n\t\tCompany_Sub_Description = {Company Sub Description},\n\t\tState,\n\t\tPeaextid = Peaextid2,\n\t\tContract_Type = {Contract Type}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectedcolumns\ntcrossreference filter(CODE_TYPE_ID == 795 && SOURCE_SYSTEM == 'PARIS') ~> compsubtype\nPrtstatus derive(pebpeoopeaid = case(pebpeoopeaid == 0,toInteger(null()),toInteger(pebpeoopeaid))) ~> pebpeoopeaid\nselectedcolumns sink(skipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}