{
	"name": "m_pre_dim_partner_me_parquet",
	"properties": {
		"folder": {
			"name": "dwh_prepare/paris"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Azure_Lake_Paris_All_Tables",
						"type": "DatasetReference"
					},
					"name": "paatable"
				},
				{
					"dataset": {
						"referenceName": "Azure_Lake_Paris_All_Tables",
						"type": "DatasetReference"
					},
					"name": "peatable"
				},
				{
					"dataset": {
						"referenceName": "Azure_Lake_Paris_All_Tables",
						"type": "DatasetReference"
					},
					"name": "pebtable"
				},
				{
					"dataset": {
						"referenceName": "Azure_Lake_Paris_All_Tables",
						"type": "DatasetReference"
					},
					"name": "peztable"
				},
				{
					"dataset": {
						"referenceName": "Azure_Lake_Paris_All_Tables",
						"type": "DatasetReference"
					},
					"name": "qtbtable"
				},
				{
					"dataset": {
						"referenceName": "Azure_Lake_Paris_All_Tables",
						"type": "DatasetReference"
					},
					"name": "crctable"
				},
				{
					"dataset": {
						"referenceName": "t_cross_parq",
						"type": "DatasetReference"
					},
					"name": "tcrossreference"
				},
				{
					"dataset": {
						"referenceName": "Azure_Lake_Paris_All_Tables",
						"type": "DatasetReference"
					},
					"name": "pectable"
				},
				{
					"dataset": {
						"referenceName": "Azure_Lake_Paris_All_Tables",
						"type": "DatasetReference"
					},
					"name": "cbsttable"
				},
				{
					"dataset": {
						"referenceName": "Azure_Lake_Paris_All_Tables",
						"type": "DatasetReference"
					},
					"name": "cbstable2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "maxpeb"
				},
				{
					"name": "Join1"
				},
				{
					"name": "pebdunco"
				},
				{
					"name": "Prtstatusjoin"
				},
				{
					"name": "Peaselected"
				},
				{
					"name": "Prtstatus"
				},
				{
					"name": "Join2"
				},
				{
					"name": "crcselected"
				},
				{
					"name": "Join3"
				},
				{
					"name": "paaselected"
				},
				{
					"name": "Paafiltered"
				},
				{
					"name": "Join4"
				},
				{
					"name": "Pezselected"
				},
				{
					"name": "Join5"
				},
				{
					"name": "LookupState"
				},
				{
					"name": "Pebselected"
				},
				{
					"name": "Expression1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "LookupCapital"
				},
				{
					"name": "Select2"
				},
				{
					"name": "LookupCompSubtype"
				},
				{
					"name": "Select3"
				},
				{
					"name": "LookupCountry"
				},
				{
					"name": "Select4"
				},
				{
					"name": "lookupContractType"
				},
				{
					"name": "Select5"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Lookup2"
				},
				{
					"name": "Select6"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "ConstantBroker"
				},
				{
					"name": "DerivedColumn4"
				},
				{
					"name": "Select7"
				},
				{
					"name": "Union1"
				}
			],
			"script": "source(output(\n\t\tPAAPEAID as decimal(38,18),\n\t\tPAASPBUSNDIV as decimal(38,18),\n\t\tPAAFUNCT as decimal(38,18),\n\t\tPAACNAME as string,\n\t\tPAAREVCNAME as string,\n\t\tPAACFAX as string,\n\t\tPAACPHONE as string,\n\t\tPAACTELEX as string,\n\t\tPAAINTNOTE as string,\n\t\tPAACONTCNAME as string,\n\t\tPAAWWW as string,\n\t\tPAAINTNET as string,\n\t\tPAACNAME2 as string,\n\t\tPAALCNAME as string,\n\t\tPAASCNAME as string,\n\t\tPAACADDRESS1 as string,\n\t\tPAACADDRESS2 as string,\n\t\tPAACADDRESS3 as string,\n\t\tPAACADDRESS4 as string,\n\t\tPAACADDRESS5 as string,\n\t\tPAACADDRPOSTAL as string,\n\t\tPAACADDRCOUNTRY as string,\n\t\tPAALONGNAME as string,\n\t\tPAACONTMOBCPHONE as string,\n\t\tPAACONTCPHONE as string,\n\t\tPAACONTPEAID as decimal(38,18),\n\t\tPAACONTEMAIL as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> paatable\nsource(output(\n\t\tPEAPEAID as decimal(38,18),\n\t\tPEACCODE as decimal(38,18),\n\t\tPEACOMP2 as decimal(38,18),\n\t\tPEASTOPUSE as string,\n\t\tPEAINVISIBLE as string,\n\t\tPEAPERSID as string,\n\t\tPEACOLID as string,\n\t\tPEAMDESCR as string,\n\t\tPEALANG2 as string,\n\t\tPEABIRTWS as decimal(38,18),\n\t\tPEASUBTYPE as decimal(38,18),\n\t\tPEABIRTNO as string,\n\t\tPEASW10 as string,\n\t\tPEAPERSRFL as decimal(38,18),\n\t\tPEASTOPCOD as decimal(38,18),\n\t\tPEARESDAT as decimal(38,18),\n\t\tPEAINCREDAY as decimal(38,18),\n\t\tPEAINGIRO as decimal(38,18),\n\t\tPEAINGIRONO as string,\n\t\tPEANOTACO as decimal(38,18),\n\t\tPEAPURTYP as decimal(38,18),\n\t\tPEANOTLAY as decimal(38,18),\n\t\tPEANOTSORT as decimal(38,18),\n\t\tPEASWINK as decimal(38,18),\n\t\tPEAOUTCREDAY as decimal(38,18),\n\t\tPEAOUTGIRO as decimal(38,18),\n\t\tPEAOUTGIRONO as string,\n\t\tPEASWRUN as decimal(38,18),\n\t\tPEACLOMET as decimal(38,18),\n\t\tPEANOPDUE as decimal(38,18),\n\t\tPEASTATYP as decimal(38,18),\n\t\tPEASTAAMT as decimal(38,18),\n\t\tPEASTTNIV as decimal(38,18),\n\t\tPEASTANIV as decimal(38,18),\n\t\tPEACLMADV as decimal(38,18),\n\t\tPEAAPROBO as decimal(38,18),\n\t\tPEAAADDBO as decimal(38,18),\n\t\tPEAACLOBO as decimal(38,18),\n\t\tPEAACLMBO as decimal(38,18),\n\t\tPEAACORBO as decimal(38,18),\n\t\tPEAMEXCDATE as decimal(38,18),\n\t\tPEAMEXCURR as string,\n\t\tPEAMEXAMT as decimal(38,18),\n\t\tPEAMEXPRO as decimal(38,18),\n\t\tPEACCLCURR as string,\n\t\tPEACCLAMT as decimal(38,18),\n\t\tPEACCINT as string,\n\t\tPEACCINTR as decimal(38,18),\n\t\tPEACALCURR as string,\n\t\tPEACALAMT as decimal(38,18),\n\t\tPEAXLCURR as string,\n\t\tPEAXLPOIN as decimal(38,18),\n\t\tPEAIYEAR as decimal(38,18),\n\t\tPEASTENSW as decimal(38,18),\n\t\tPEASTDATE as decimal(38,18),\n\t\tPEAENDATE as decimal(38,18),\n\t\tPEAMAXPER as decimal(38,18),\n\t\tPEAIEDIV as string,\n\t\tPEAIEBUSNDIV as decimal(38,18),\n\t\tPEAIE2BUSNDIV as decimal(38,18),\n\t\tPEAIE3BUSNDIV as decimal(38,18),\n\t\tPEAIESECT as string,\n\t\tPEAIEBUSNSE as decimal(38,18),\n\t\tPEAIE2BUSNSE as decimal(38,18),\n\t\tPEAIE3BUSNSE as decimal(38,18),\n\t\tPEAIEINT as string,\n\t\tPEAIEINT1 as string,\n\t\tPEAIEINT2 as string,\n\t\tPEAIEINT3 as string,\n\t\tPEAIEINT4 as string,\n\t\tPEAIEINT5 as string,\n\t\tPEAIECOND as string,\n\t\tPEAIECON1 as decimal(38,18),\n\t\tPEAIECON2 as decimal(38,18),\n\t\tPEAIECON3 as decimal(38,18),\n\t\tPEAIECON4 as decimal(38,18),\n\t\tPEAIECON5 as decimal(38,18),\n\t\tPEACRDATE as decimal(38,18),\n\t\tPEACRSIGN as string,\n\t\tPEALUDATE as decimal(38,18),\n\t\tPEALUSIGN as string,\n\t\tPEASEX as string,\n\t\tPEAVATNO as string,\n\t\tPEAORGNO as string,\n\t\tPEANOPURR as string,\n\t\tPEAACLMADV as decimal(38,18),\n\t\tPEAADDBOR as decimal(38,18),\n\t\tPEAADDMAILFREQ as decimal(38,18),\n\t\tPEACLAMAILFREQ as decimal(38,18),\n\t\tPEACLMBOR as decimal(38,18),\n\t\tPEACLMINTYNSW as string,\n\t\tPEACLMMAILFREQ as decimal(38,18),\n\t\tPEACLOBOR as decimal(38,18),\n\t\tPEACLOSMAILFREQ as decimal(38,18),\n\t\tPEACORBO as decimal(38,18),\n\t\tPEACORRMAILFREQ as decimal(38,18),\n\t\tPEADUEDAY as decimal(38,18),\n\t\tPEAFROMCOMP as decimal(38,18),\n\t\tPEAINGIROLUDATE as decimal(38,18),\n\t\tPEAINGIROLUSIGN as string,\n\t\tPEAINVNOTIFY as decimal(38,18),\n\t\tPEAKNVMARK as string,\n\t\tPEAMAILSIZEMB as decimal(38,18),\n\t\tPEANOTDAYS as decimal(38,18),\n\t\tPEAOUTGIROLUDATE as decimal(38,18),\n\t\tPEAOUTGIROLUSIGN as string,\n\t\tPEAPRENOTIFY as decimal(38,18),\n\t\tPEAPROBOR as decimal(38,18),\n\t\tPEAPROVMAILFREQ as decimal(38,18),\n\t\tPEAPURNOTIFY as decimal(38,18),\n\t\tPEASTOPPREMNOTE as string,\n\t\tPEASTTPRMCLM as decimal(38,18),\n\t\tPEAUSECOLFEE as string,\n\t\tPEACRMID as decimal(38,18),\n\t\tPEAEXTID as string,\n\t\tPEALEICODE as string,\n\t\tPEALETNOTIFY as decimal(38,18),\n\t\tPEAEXTID2 as string,\n\t\tPEAMAILCNDNSPLIT as string,\n\t\tPEAMAILUSESERVADRESS as string,\n\t\tPEAMASKED as string,\n\t\tPEAEXTTRANSFER2 as string,\n\t\tPEAEXTTRANSFER as string,\n\t\tPEACRUSER as decimal(38,18),\n\t\tPEALUUSER as decimal(38,18),\n\t\tPEAALTERNATEPAYER as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> peatable\nsource(output(\n\t\tPEBPEBID as string,\n\t\tPEBPEAID as decimal(38,18),\n\t\tPEBPEVER as decimal(38,18),\n\t\tPEBMDESCR as string,\n\t\tPEBVERSTAT as string,\n\t\tPEBVALDATE as decimal(38,18),\n\t\tPEBCONCOMP2 as decimal(38,18),\n\t\tPEBCONBUSNDIV as decimal(38,18),\n\t\tPEBCONOFFICE as decimal(38,18),\n\t\tPEBRESSIGN as string,\n\t\tPEBISOLAN as string,\n\t\tPEBTAXNO as string,\n\t\tPEBDISTRICT as string,\n\t\tPEBRATCOD as string,\n\t\tPEBREASON as string,\n\t\tPEBGROUP as decimal(38,18),\n\t\tPEBPERSACC as decimal(38,18),\n\t\tPEBBRDATE as decimal(38,18),\n\t\tPEBEMLCURR as string,\n\t\tPEBGENEML as decimal(38,18),\n\t\tPEBMACHEML as decimal(38,18),\n\t\tPEBEMLMDESCR as string,\n\t\tPEBLUDATE as decimal(38,18),\n\t\tPEBLUSIGN as string,\n\t\tPEBFORTTRADE as string,\n\t\tPEBPEOID as string,\n\t\tPEBPEOOPEAID as decimal(38,18),\n\t\tPEBINSTADYNZ as string,\n\t\tPEBNMISIC as string,\n\t\tPEBNMNYK as string,\n\t\tPEBPAYLEVEL as decimal(38,18),\n\t\tPEBSUPPORTER as string,\n\t\tPEBTYPELEVEL as decimal(38,18),\n\t\tPEBPIBREGDATE as decimal(38,18),\n\t\tPEBPIBREGSIGN as string,\n\t\tPEBDUNCO as decimal(38,18),\n\t\tPEBFORTSECTOR as decimal(38,18),\n\t\tPEBPIDID as decimal(38,18),\n\t\tPEBCONBUSNSEC as decimal(38,18),\n\t\tPEBPIDCNAME as string,\n\t\tPEBHOURPRICE as decimal(38,18),\n\t\tPEBCIVILSTATUS as decimal(38,18),\n\t\tPEBMVAYNSW as string,\n\t\tPEBCONBUSNCLA as decimal(38,18),\n\t\tPEBPRICECURR as string,\n\t\tPEBRATCOMP as decimal(38,18),\n\t\tPEBRATEDATE as decimal(38,18),\n\t\tPEBRATLUDATE as decimal(38,18),\n\t\tPEBRATSIGN as string,\n\t\tPEBQASTATUS as string,\n\t\tPEBSITID as string,\n\t\tPEBQADATE as decimal(38,18),\n\t\tPEBQASIGN as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> pebtable\nsource(output(\n\t\tPEZPEZID as decimal(38,18),\n\t\tPEZDEFBUSNDIV as decimal(38,18),\n\t\tPEZDEFBUSNSEC as decimal(38,18),\n\t\tPEZDEFAGTNOL as decimal(38,18),\n\t\tPEZDEFCOMCOD as string,\n\t\tPEZDEFNCOMM as decimal(38,18),\n\t\tPEZDEFMORTG as decimal(38,18),\n\t\tPEZDEFACCREBYNSW as string,\n\t\tPEZDEFBUSNBRANCH as decimal(38,18),\n\t\tPEZDEFBUSNCLA as decimal(38,18),\n\t\tPEZDEFCCPID as string,\n\t\tPEZDEFOFFICE as decimal(38,18),\n\t\tPEZDEFTARCODOF as string,\n\t\tPEZDEFINSTCALCTYPE as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> peztable\nsource(output(\n\t\tQTBFIELDN as string,\n\t\tQTBVALUE as string,\n\t\tQTBMDESCR as string,\n\t\tQTBSDESCR as string,\n\t\tQTBDISPYNSW as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> qtbtable\nsource(output(\n\t\tCRCRATCOD as string,\n\t\tCRCMDESCR as string,\n\t\tCRCSDESCR as string,\n\t\tCRCPERINC as string,\n\t\tCRCCCODE as decimal(38,18),\n\t\tCRCCPERS2 as decimal(38,18),\n\t\tCRCCPERS3 as decimal(38,18),\n\t\tCRCCPERS4 as decimal(38,18),\n\t\tCRCLOSPRO as decimal(38,18),\n\t\tCRCSW5 as string,\n\t\tCRCSTOPUSE as string,\n\t\tCRCRATCOMP as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> crctable\nsource(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> tcrossreference\nsource(output(\n\t\tPECPECID as decimal(38,18),\n\t\tPECEXTKEY as string,\n\t\tPECCONTYP as string,\n\t\tPECCONPEAID as decimal(38,18),\n\t\tPECDEPITY as string,\n\t\tPECDEPINT as decimal(38,18),\n\t\tPECPROCOM as decimal(38,18),\n\t\tPECMANFEE as decimal(38,18),\n\t\tPECDUEDATE as decimal(38,18),\n\t\tPECNOOFYR as decimal(38,18),\n\t\tPECPROSW1 as string,\n\t\tPECNOUFYR as decimal(38,18),\n\t\tPECPROSW2 as string,\n\t\tPECCOFOPT as decimal(38,18),\n\t\tPECCOFOBL as string,\n\t\tPECIBNRPR as decimal(38,18),\n\t\tPECIYEAR as decimal(38,18),\n\t\tPECSW5 as string,\n\t\tPECPCAID as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> pectable\nsource(output(\n\t\tCBSBUSNSEC as decimal(38,18),\n\t\tCBSMDESCR as string,\n\t\tCBSSDESCR as string,\n\t\tCBSLANG2 as string,\n\t\tCBSRENEW as decimal(38,18),\n\t\tCBSAOWREB as decimal(38,18),\n\t\tCBSAUTOCL as decimal(38,18),\n\t\tCBSADDPER as decimal(38,18),\n\t\tCBSCNFORM as string,\n\t\tCBSDNFORM as string,\n\t\tCBSAGFORM as string,\n\t\tCBSCREWFORM as string,\n\t\tCBSTARYNSW as string,\n\t\tCBSBUSNBRANCH as decimal(38,18),\n\t\tCBSSTOPUSE as string,\n\t\tCBSSW10 as string,\n\t\tCBSREFCOD as string,\n\t\tCBSSIIDEF as string,\n\t\tCBSTAXAPPL as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> cbsttable\nsource(output(\n\t\tCBSBUSNSEC as decimal(38,18),\n\t\tCBSMDESCR as string,\n\t\tCBSSDESCR as string,\n\t\tCBSLANG2 as string,\n\t\tCBSRENEW as decimal(38,18),\n\t\tCBSAOWREB as decimal(38,18),\n\t\tCBSAUTOCL as decimal(38,18),\n\t\tCBSADDPER as decimal(38,18),\n\t\tCBSCNFORM as string,\n\t\tCBSDNFORM as string,\n\t\tCBSAGFORM as string,\n\t\tCBSCREWFORM as string,\n\t\tCBSTARYNSW as string,\n\t\tCBSBUSNBRANCH as decimal(38,18),\n\t\tCBSSTOPUSE as string,\n\t\tCBSSW10 as string,\n\t\tCBSREFCOD as string,\n\t\tCBSSIIDEF as string,\n\t\tCBSTAXAPPL as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> cbstable2\npebtable aggregate(groupBy(pebpeaid = PEBPEAID),\n\tMAXPEBPEVER = max(PEBPEVER)) ~> maxpeb\nPebselected, maxpeb join(Pebselected@pebpeaid == maxpeb@pebpeaid\n\t&& Pebpever == MAXPEBPEVER,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nqtbtable filter(QTBFIELDN=='pebdunco') ~> pebdunco\nJoin1, pebdunco join(pebdunco == toInteger(QTBVALUE),\n\tjoinType:'left',\n\tbroadcast: 'none')~> Prtstatusjoin\npeatable select(mapColumn(\n\t\tpeapeaid = PEAPEAID,\n\t\tpeamdescr = PEAMDESCR,\n\t\tpeaccode = PEACCODE,\n\t\tpealeicode = PEALEICODE,\n\t\tpeasubtype = PEASUBTYPE,\n\t\tpeaextid2 = PEAEXTID2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Peaselected\nPrtstatusjoin select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid = Pebselected@pebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tpebpeaid = maxpeb@pebpeaid,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Prtstatus\nPrtstatus, Peaselected join(pebpeaid == peapeaid,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join2\ncrctable select(mapColumn(\n\t\tcrcratcod = CRCRATCOD,\n\t\tcrcmdescr = CRCMDESCR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> crcselected\nJoin2, crcselected join(pebratcod == crcratcod,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join3\npaatable select(mapColumn(\n\t\tpaapeaid = PAAPEAID,\n\t\tpaafunct = PAAFUNCT,\n\t\tpaalongname = PAALONGNAME,\n\t\tpaacaddress1 = PAACADDRESS1,\n\t\tpaacaddress4 = PAACADDRESS4,\n\t\tpaacaddress2 = PAACADDRESS2,\n\t\tpaacname = PAACNAME,\n\t\tpaacaddress3 = PAACADDRESS3,\n\t\tpaactelex = PAACTELEX\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> paaselected\npaaselected filter(iifNull(paafunct,0) ==0) ~> Paafiltered\nJoin3, Paafiltered join(peapeaid == paapeaid,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join4\npeztable select(mapColumn(\n\t\tpezpezid = PEZPEZID,\n\t\tpezdefbusnbranch = PEZDEFBUSNBRANCH\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Pezselected\nJoin4, Pezselected join(peapeaid == pezpezid,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join5\nExpression1, tcrossreference lookup({Source System} == SOURCE_SYSTEM\n\t&& pebtaxno == SOURCE_CODE_KEY\n\t&& {Code Type State} == CODE_TYPE_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupState\npebtable select(mapColumn(\n\t\tpebpebid = PEBPEBID,\n\t\tpebpeaid = PEBPEAID,\n\t\tpebpeoopeaid = PEBPEOOPEAID,\n\t\tpebratcod = PEBRATCOD,\n\t\tpebratedate = PEBRATEDATE,\n\t\tpebisolan = PEBISOLAN,\n\t\tpebratcomp = PEBRATCOMP,\n\t\tpebtaxno = PEBTAXNO,\n\t\tPebpever = PEBPEVER,\n\t\tpebdunco = PEBDUNCO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Pebselected\nJoin5 derive(Key = concat('P',toString(peapeaid)),\n\t\t{Partner Name} = iifNull(trim(paalongname),iifNull(trim(paacname, peamdescr))),\n\t\tAddress = concat(trim(paacaddress1),iif(isNull((concat(trim(paacaddress2),concat(trim(paacaddress3), trim(paacaddress4))))),' ',paacaddress2)),\n\t\t{Rating Code} = case(isNull(pebratcod),'N/A',pebratcod),\n\t\t{Rating Code desc} = case(isNull(crcmdescr),'N/A',crcmdescr),\n\t\t{Partner Short Name} = peamdescr,\n\t\tPezdefbusnbranch = toString(pezdefbusnbranch),\n\t\tpeasubtype = toString(peasubtype),\n\t\t{Source System} = 'PARIS',\n\t\t{Code Type State} = 368,\n\t\t{Code Type Capital} = 116,\n\t\t{Code Type Comp Sub} = 795,\n\t\t{Code Type Country} = 50) ~> Expression1\nLookupState select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch = Expression1@Pezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\tSOURCE_CODE_KEY,\n\t\tSOURCE_SYSTEM,\n\t\t{State Code} = TARGET_CODE,\n\t\t{State Description} = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, tcrossreference lookup({Code Type Capital} == CODE_TYPE_ID\n\t&& {Source System} == tcrossreference@SOURCE_SYSTEM\n\t&& Pezdefbusnbranch == tcrossreference@SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupCapital\nLookupCapital select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code} = TARGET_CODE,\n\t\t{Capital Description} = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2, tcrossreference lookup({Source System} == SOURCE_SYSTEM\n\t&& {Code Type Comp Sub} == CODE_TYPE_ID\n\t&& peasubtype == SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupCompSubtype\nLookupCompSubtype select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Company Sub Code} = TARGET_CODE,\n\t\t{Company Sub Description} = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, tcrossreference lookup({Source System} == SOURCE_SYSTEM\n\t&& {Code Type Country} == CODE_TYPE_ID\n\t&& pebisolan == SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupCountry\nLookupCountry select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Domicile Code} = TARGET_CODE,\n\t\t{Domicile Description} = TARGET_DESCRIPTION,\n\t\t{Company Sub Code},\n\t\t{Company Sub Description}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect4, pectable lookup(peapeaid == PECPECID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> lookupContractType\nlookupContractType select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Domicile Code},\n\t\t{Domicile Description},\n\t\tpeccontype = PECCONTYP,\n\t\t{Company Sub Code},\n\t\t{Company Sub Description}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect5 derive({Contract Type} = case(peccontype == '0' , 'NORMAL',case(peccontype == '1','WAR',case(peccontype == '9','XL','OTHER')))) ~> DerivedColumn1\nDerivedColumn1, paatable lookup(pebratcomp == paatable@PAAPEAID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> Lookup2\nLookup2 select(mapColumn(\n\t\tkey = Key,\n\t\t{Partner Name},\n\t\tpebdunco,\n\t\tQtbmdescr = QTBMDESCR,\n\t\tAddress1 = Select5@paacaddress1,\n\t\tAddress2 = Select5@paacaddress2,\n\t\tAddress3 = Select5@paacaddress3,\n\t\tAddress4 = Select5@paacaddress4,\n\t\tpaacaddress3 = Select5@paacaddress3,\n\t\t{Rating Company} = paatable@PAACNAME,\n\t\tPebratcod = pebratcod,\n\t\t{Rating Code desc},\n\t\tPebratedate = pebratedate,\n\t\t{Domicile Code},\n\t\t{Domicile Description},\n\t\tPeaccode = peaccode,\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Company Sub code} = {Company Sub Code},\n\t\t{Company Sub Description},\n\t\tState = {State Description},\n\t\t{Paacname RatingComp} = paatable@PAACNAME,\n\t\tPeaextid2 = peaextid2,\n\t\t{Contract Type}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\ncbsttable derive({PK Key} = 'PDIR99',\n\t\t{Partner Name} = 'Direct Placed',\n\t\tAddress = 'Not Applicable',\n\t\tPebdunco = 'v',\n\t\tDuncodesc = 'Not Applicable',\n\t\t{Address 1} = 'Not Applicable',\n\t\t{Address 2} = 'Not Applicable',\n\t\t{Address 3} = 'Not Applicable',\n\t\t{Address 4} = 'Not Applicable',\n\t\t{Rating Company} = 'Not Applicable',\n\t\t{Rating Code} = 'N/A',\n\t\t{Rating Code Description} = 'Not Applicable',\n\t\t{Rating Date} = toString(null()),\n\t\t{Partner Short Name} = 'Direct Placed',\n\t\t{Domicile Code} = 'N/A',\n\t\tPeacode = toInteger(null()),\n\t\tPeaLeiCode = toString(null()),\n\t\t{Capital Code} = toString(null()),\n\t\t{Capital Description} = toString(null()),\n\t\t{Company Sub code} = toString(null()),\n\t\t{Company Sub Desc} = toString(null()),\n\t\tState = 'N/A',\n\t\tPeaextid2 = toString(null()),\n\t\t{Contract Type} = toString(null())) ~> DerivedColumn3\nDerivedColumn3 select(mapColumn(\n\t\t{PK Key},\n\t\t{Partner Name},\n\t\tAddress,\n\t\tPebdunco,\n\t\tDuncodesc,\n\t\t{Address 1},\n\t\t{Address 2},\n\t\t{Address 3},\n\t\t{Address 4},\n\t\t{Rating Company},\n\t\t{Rating Code},\n\t\t{Rating Code Description},\n\t\t{Rating Date},\n\t\t{Partner Short Name},\n\t\t{Domicile Code},\n\t\tPeacode,\n\t\tPeaLeiCode,\n\t\t{Capital Code},\n\t\t{Capital Description} = {DerivedColumn3@Capital Description},\n\t\t{Company Sub code},\n\t\t{Company Sub Desc},\n\t\tState,\n\t\tPeaextid2,\n\t\t{Contract Type}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ConstantBroker\ncbstable2 derive({Partner Name} = 'Facultativ',\n\t\t{Pk Key} = 'PFACULTATIV',\n\t\tAddress = 'Not Applicable',\n\t\tCity = 'N/A',\n\t\tPebdunco = toString(null()),\n\t\tDuncodesc = 'Nt Applicable',\n\t\t{Pea Lei Code} = toString(null()),\n\t\t{Contract Type} = 'OTHER') ~> DerivedColumn4\nDerivedColumn4 select(mapColumn(\n\t\t{Partner Name},\n\t\t{Pk Key},\n\t\tAddress,\n\t\tCity,\n\t\tPebdunco,\n\t\tDuncodesc,\n\t\t{Pea Lei Code},\n\t\t{Contract Type}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nSelect6, ConstantBroker union(byName: false)~> Union1"
		}
	}
}