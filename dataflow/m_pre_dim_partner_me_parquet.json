{
	"name": "m_pre_dim_partner_me_parquet",
	"properties": {
		"folder": {
			"name": "dwh_prepare/paris"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "paatable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "peatable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "pebtable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "peztable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "qtbtable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "crctable"
				},
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "tcrossreference"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "pectable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "cbsttable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "cbstable2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "maxpeb"
				},
				{
					"name": "Join1"
				},
				{
					"name": "pebdunco"
				},
				{
					"name": "Prtstatusjoin"
				},
				{
					"name": "Peaselected"
				},
				{
					"name": "Prtstatus"
				},
				{
					"name": "Join2"
				},
				{
					"name": "crcselected"
				},
				{
					"name": "Join3"
				},
				{
					"name": "paaselected"
				},
				{
					"name": "Paafiltered"
				},
				{
					"name": "Join4"
				},
				{
					"name": "Pezselected"
				},
				{
					"name": "Join5"
				},
				{
					"name": "LookupState"
				},
				{
					"name": "Pebselected"
				},
				{
					"name": "Expression1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "LookupCapital"
				},
				{
					"name": "Select2"
				},
				{
					"name": "LookupCompSubtype"
				},
				{
					"name": "Select3"
				},
				{
					"name": "LookupCountry"
				},
				{
					"name": "Select4"
				},
				{
					"name": "lookupContractType"
				},
				{
					"name": "Select5"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Lookup2"
				},
				{
					"name": "Select6"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "ConstantBroker"
				},
				{
					"name": "DerivedColumn4"
				},
				{
					"name": "Select7"
				},
				{
					"name": "Union1"
				},
				{
					"name": "Aggregate1"
				},
				{
					"name": "Select8"
				},
				{
					"name": "CodeTypeState368"
				},
				{
					"name": "Filter2"
				}
			],
			"script": "source(output(\n\t\tpaabusncla as decimal(38,18),\n\t\tpaabusnsec as decimal(38,18),\n\t\tpaacaddrcountry as string,\n\t\tpaacaddress1 as string,\n\t\tpaacaddress2 as string,\n\t\tpaacaddress3 as string,\n\t\tpaacaddress4 as string,\n\t\tpaacaddress5 as string,\n\t\tpaacaddrpostal as string,\n\t\tpaaccmail as string,\n\t\tpaacfax as string,\n\t\tpaacname as string,\n\t\tpaacname2 as string,\n\t\tpaacontcname as string,\n\t\tpaacontcphone as string,\n\t\tpaacontemail as string,\n\t\tpaacontmobcphone as string,\n\t\tpaacontpeaid as decimal(38,18),\n\t\tpaacphone as string,\n\t\tpaactelex as string,\n\t\tpaafunct as decimal(38,18),\n\t\tpaaintnet as string,\n\t\tpaaintnote as string,\n\t\tpaalcname as string,\n\t\tpaalongname as string,\n\t\tpaamail as string,\n\t\tpaapeaid as decimal(38,18),\n\t\tpaarevcname as string,\n\t\tpaascname as string,\n\t\tpaaspbusndiv as decimal(38,18),\n\t\tpaawww as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> paatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> peatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> pebtable\nsource(output(\n\t\tpezdefaccrebynsw as string,\n\t\tpezdefagtnol as decimal(38,18),\n\t\tpezdefbusnbranch as decimal(38,18),\n\t\tpezdefbusncla as decimal(38,18),\n\t\tpezdefbusndiv as decimal(38,18),\n\t\tpezdefbusnsec as decimal(38,18),\n\t\tpezdefccpid as string,\n\t\tpezdefcomcod as string,\n\t\tpezdefcurr as string,\n\t\tpezdefinstcalctype as decimal(38,18),\n\t\tpezdefmortg as decimal(38,18),\n\t\tpezdefncomm as decimal(38,18),\n\t\tpezdefoffice as decimal(38,18),\n\t\tpezdeftarcodof as string,\n\t\tpezpezid as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> peztable\nsource(output(\n\t\tqtbdispynsw as string,\n\t\tqtbfieldn as string,\n\t\tqtbmdescr as string,\n\t\tqtbsdescr as string,\n\t\tqtbvalue as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> qtbtable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> crctable\nsource(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> tcrossreference\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> pectable\nsource(output(\n\t\tcbsaddper as decimal(38,18),\n\t\tcbsagform as string,\n\t\tcbsaowreb as decimal(38,18),\n\t\tcbsautocl as decimal(38,18),\n\t\tcbsbusnbranch as decimal(38,18),\n\t\tcbsbusnsec as decimal(38,18),\n\t\tcbscnform as string,\n\t\tcbscrewform as string,\n\t\tcbsdefcondco as decimal(38,18),\n\t\tcbsdefpayer as string,\n\t\tcbsdnform as string,\n\t\tcbsetcpremium as string,\n\t\tcbslang2 as string,\n\t\tcbsmdescr as string,\n\t\tcbsmutual as string,\n\t\tcbspitype as string,\n\t\tcbsrefcod as string,\n\t\tcbsrenew as decimal(38,18),\n\t\tcbsrenewendrule as decimal(38,18),\n\t\tcbsrenewperiod as decimal(38,18),\n\t\tcbssdescr as string,\n\t\tcbssiidef as string,\n\t\tcbsstopuse as string,\n\t\tcbssw10 as string,\n\t\tcbstarynsw as string,\n\t\tcbstaxappl as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> cbsttable\nsource(output(\n\t\tcbsaddper as decimal(38,18),\n\t\tcbsagform as string,\n\t\tcbsaowreb as decimal(38,18),\n\t\tcbsautocl as decimal(38,18),\n\t\tcbsbusnbranch as decimal(38,18),\n\t\tcbsbusnsec as decimal(38,18),\n\t\tcbscnform as string,\n\t\tcbscrewform as string,\n\t\tcbsdefcondco as decimal(38,18),\n\t\tcbsdefpayer as string,\n\t\tcbsdnform as string,\n\t\tcbsetcpremium as string,\n\t\tcbslang2 as string,\n\t\tcbsmdescr as string,\n\t\tcbsmutual as string,\n\t\tcbspitype as string,\n\t\tcbsrefcod as string,\n\t\tcbsrenew as decimal(38,18),\n\t\tcbsrenewendrule as decimal(38,18),\n\t\tcbsrenewperiod as decimal(38,18),\n\t\tcbssdescr as string,\n\t\tcbssiidef as string,\n\t\tcbsstopuse as string,\n\t\tcbssw10 as string,\n\t\tcbstarynsw as string,\n\t\tcbstaxappl as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> cbstable2\npebtable aggregate(groupBy(pebpeaid = PEBPEAID),\n\tMAXPEBPEVER = max(PEBPEVER)) ~> maxpeb\nPebselected, maxpeb join(Pebselected@pebpeaid == maxpeb@pebpeaid\n\t&& Pebpever == MAXPEBPEVER,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nqtbtable filter(QTBFIELDN=='pebdunco') ~> pebdunco\nJoin1, pebdunco join(pebdunco == toInteger(QTBVALUE),\n\tjoinType:'left',\n\tbroadcast: 'none')~> Prtstatusjoin\npeatable select(mapColumn(\n\t\tpeapeaid = PEAPEAID,\n\t\tpeamdescr = PEAMDESCR,\n\t\tpeaccode = PEACCODE,\n\t\tpealeicode = PEALEICODE,\n\t\tpeasubtype = PEASUBTYPE,\n\t\tpeaextid2 = PEAEXTID2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Peaselected\nPrtstatusjoin select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid = {Pebselected@pebpeaid},\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tpebpeaid = {maxpeb@pebpeaid},\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Prtstatus\nPrtstatus, Peaselected join(pebpeaid == peapeaid,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join2\ncrctable select(mapColumn(\n\t\tcrcratcod = CRCRATCOD,\n\t\tcrcmdescr = CRCMDESCR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> crcselected\nJoin2, crcselected join(pebratcod == crcratcod,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join3\npaatable select(mapColumn(\n\t\tpaapeaid = PAAPEAID,\n\t\tpaafunct = PAAFUNCT,\n\t\tpaalongname = PAALONGNAME,\n\t\tpaacaddress1 = PAACADDRESS1,\n\t\tpaacaddress4 = PAACADDRESS4,\n\t\tpaacaddress2 = PAACADDRESS2,\n\t\tpaacname = PAACNAME,\n\t\tpaacaddress3 = PAACADDRESS3,\n\t\tpaactelex = PAACTELEX\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> paaselected\npaaselected filter(iifNull(paafunct,0) ==0) ~> Paafiltered\nJoin3, Paafiltered join(peapeaid == paapeaid,\n\tjoinType:'left',\n\tbroadcast: 'none')~> Join4\npeztable select(mapColumn(\n\t\tpezpezid = PEZPEZID,\n\t\tpezdefbusnbranch = PEZDEFBUSNBRANCH\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Pezselected\nJoin4, Pezselected join(peapeaid == pezpezid,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join5\nExpression1, CodeTypeState368 lookup(pebtaxno == SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupState\npebtable select(mapColumn(\n\t\tpebpebid = PEBPEBID,\n\t\tpebpeaid = PEBPEAID,\n\t\tpebpeoopeaid = PEBPEOOPEAID,\n\t\tpebratcod = PEBRATCOD,\n\t\tpebratedate = PEBRATEDATE,\n\t\tpebisolan = PEBISOLAN,\n\t\tpebratcomp = PEBRATCOMP,\n\t\tpebtaxno = PEBTAXNO,\n\t\tPebpever = PEBPEVER,\n\t\tpebdunco = PEBDUNCO\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Pebselected\nJoin5 derive(Key = concat('P',toString(peapeaid)),\n\t\t{Partner Name} = iifNull(trim(paalongname),iifNull(trim(paacname, peamdescr))),\n\t\tAddress = concat(trim(paacaddress1),iif(isNull((concat(trim(paacaddress2),concat(trim(paacaddress3), trim(paacaddress4))))),' ',paacaddress2)),\n\t\t{Rating Code} = case(isNull(pebratcod),'N/A',pebratcod),\n\t\t{Rating Code desc} = case(isNull(crcmdescr),'N/A',crcmdescr),\n\t\t{Partner Short Name} = peamdescr,\n\t\tPezdefbusnbranch = toString(pezdefbusnbranch),\n\t\tpeasubtype = toString(peasubtype),\n\t\t{Source System} = 'PARIS',\n\t\t{Code Type State} = 368,\n\t\t{Code Type Capital} = 116,\n\t\t{Code Type Comp Sub} = 795,\n\t\t{Code Type Country} = 50) ~> Expression1\nLookupState select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch = {Expression1@Pezdefbusnbranch},\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\tSOURCE_CODE_KEY,\n\t\tSOURCE_SYSTEM,\n\t\t{State Code} = TARGET_CODE,\n\t\t{State Description} = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, tcrossreference lookup({Code Type Capital} == CODE_TYPE_ID\n\t&& {Source System} == tcrossreference@SOURCE_SYSTEM\n\t&& Pezdefbusnbranch == tcrossreference@SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupCapital\nLookupCapital select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code} = TARGET_CODE,\n\t\t{Capital Description} = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2, tcrossreference lookup({Source System} == SOURCE_SYSTEM\n\t&& {Code Type Comp Sub} == CODE_TYPE_ID\n\t&& peasubtype == SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupCompSubtype\nLookupCompSubtype select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Company Sub Code} = TARGET_CODE,\n\t\t{Company Sub Description} = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select3\nSelect3, tcrossreference lookup({Source System} == SOURCE_SYSTEM\n\t&& {Code Type Country} == CODE_TYPE_ID\n\t&& pebisolan == SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupCountry\nLookupCountry select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Domicile Code} = TARGET_CODE,\n\t\t{Domicile Description} = TARGET_DESCRIPTION,\n\t\t{Company Sub Code},\n\t\t{Company Sub Description}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select4\nSelect4, pectable lookup(peapeaid == PECPECID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> lookupContractType\nlookupContractType select(mapColumn(\n\t\tpebpebid,\n\t\tpebpeaid,\n\t\tpebpeoopeaid,\n\t\tpebratcod,\n\t\tpebratedate,\n\t\tpebisolan,\n\t\tpebratcomp,\n\t\tpebtaxno,\n\t\tPebpever,\n\t\tpebdunco,\n\t\tMAXPEBPEVER,\n\t\tQTBFIELDN,\n\t\tQTBVALUE,\n\t\tQTBMDESCR,\n\t\tQTBSDESCR,\n\t\tQTBDISPYNSW,\n\t\tpeapeaid,\n\t\tpeamdescr,\n\t\tpeaccode,\n\t\tpealeicode,\n\t\tpeasubtype,\n\t\tpeaextid2,\n\t\tcrcratcod,\n\t\tcrcmdescr,\n\t\tpaapeaid,\n\t\tpaafunct,\n\t\tpaalongname,\n\t\tpaacaddress1,\n\t\tpaacaddress4,\n\t\tpaacaddress2,\n\t\tpaacname,\n\t\tpaacaddress3,\n\t\tpaactelex,\n\t\tpezpezid,\n\t\tKey,\n\t\t{Partner Name},\n\t\tAddress,\n\t\t{Rating Code},\n\t\t{Rating Code desc},\n\t\t{Partner Short Name},\n\t\tPezdefbusnbranch,\n\t\t{Source System},\n\t\t{Code Type State},\n\t\t{Code Type Capital},\n\t\t{Code Type Comp Sub},\n\t\t{Code Type Country},\n\t\t{State Code},\n\t\t{State Description},\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Domicile Code},\n\t\t{Domicile Description},\n\t\tpeccontype = PECCONTYP,\n\t\t{Company Sub Code},\n\t\t{Company Sub Description}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select5\nSelect5 derive({Contract Type} = case(peccontype == '0' , 'NORMAL',case(peccontype == '1','WAR',case(peccontype == '9','XL','OTHER')))) ~> DerivedColumn1\nDerivedColumn1, paatable lookup(pebratcomp == paatable@PAAPEAID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> Lookup2\nLookup2 select(mapColumn(\n\t\tkey = Key,\n\t\t{Partner Name},\n\t\tAddress,\n\t\tpebdunco,\n\t\tQtbmdescr = QTBMDESCR,\n\t\tAddress1 = {Select5@paacaddress1},\n\t\tAddress2 = {Select5@paacaddress2},\n\t\tAddress3 = {Select5@paacaddress3},\n\t\tAddress4 = {Select5@paacaddress4},\n\t\tpaacaddress3 = {Select5@paacaddress3},\n\t\t{Rating Company} = {paatable@PAACNAME},\n\t\tPebratcod = pebratcod,\n\t\t{Rating Code desc},\n\t\tPebratedate = pebratedate,\n\t\t{Domicile Code},\n\t\t{Domicile Description},\n\t\tPeaccode = peaccode,\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Company Sub code} = {Company Sub Code},\n\t\t{Company Sub Description},\n\t\tState = {State Description},\n\t\t{Paacname RatingComp} = {paatable@PAACNAME},\n\t\tPeaextid2 = peaextid2,\n\t\t{Contract Type}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select6\ncbsttable derive(Key = 'PDIR99',\n\t\t{Partner Name} = 'Direct Placed',\n\t\tAddress = 'Not Applicable',\n\t\tpebdunco = toDecimal(null()),\n\t\tDuncodesc = 'Not Applicable',\n\t\tAddress1 = 'Not Applicable',\n\t\tAddress2 = 'Not Applicable',\n\t\tAddress3 = 'Not Applicable',\n\t\tAddress4 = 'Not Applicable',\n\t\t{Rating Company} = 'Not Applicable',\n\t\t{Rating Code} = 'N/A',\n\t\t{Rating Code Description} = 'Not Applicable',\n\t\t{Rating Date} = toDecimal(null()),\n\t\t{Domicile Code} = 'N/A',\n\t\t{Domicile Description} = 'Not Applicable',\n\t\tPeacode = toDecimal(null()),\n\t\t{Capital Code} = toString(null()),\n\t\t{Capital Description} = toString(null()),\n\t\t{Company Sub code} = toString(null()),\n\t\t{Company Sub Desc} = toString(null()),\n\t\tState = 'N/A',\n\t\tPeaextid2 = toString(null()),\n\t\t{Contract Type} = toString(null())) ~> DerivedColumn3\nDerivedColumn3 select(mapColumn(\n\t\tkey = Key,\n\t\t{Partner Name},\n\t\tAddress,\n\t\tpebdunco,\n\t\tQtbmdescr = Duncodesc,\n\t\tAddress1,\n\t\tAddress2,\n\t\tAddress3,\n\t\tAddress4,\n\t\t{Rating Company},\n\t\tPebratcod = {Rating Code},\n\t\t{Rating Code desc} = {Rating Code Description},\n\t\tPebratedate = {Rating Date},\n\t\t{Domicile Code},\n\t\t{Domicile Description},\n\t\tPeaccode = Peacode,\n\t\t{Capital Code},\n\t\t{Capital Description},\n\t\t{Company Sub code},\n\t\t{Company Sub Description} = {Company Sub Desc},\n\t\tState,\n\t\tPeaextid2,\n\t\t{Contract Type}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ConstantBroker\ncbstable2 derive({Partner Name} = 'Facultativ',\n\t\t{Pk Key} = 'PFACULTATIV',\n\t\tAddress = 'Not Applicable',\n\t\tAddress1 = 'Not Applicable',\n\t\tAddress2 = 'Not Applicable',\n\t\tAddress3 = 'Not Applicable',\n\t\tAddress4 = 'Not Applicable',\n\t\t{Rating Company} = 'Not Applicable',\n\t\t{Rating Code} = 'N/A',\n\t\t{Rating Code desc} = 'Not Applicable',\n\t\t{Domicile Description} = 'Not Applicable',\n\t\tPebratedate = toDecimal(null()),\n\t\tCity = 'N/A',\n\t\tState = 'N/A',\n\t\tPebdunco = toDecimal(null()),\n\t\tDuncodesc = 'Not Applicable',\n\t\t{Pea Lei Code} = toString(null()),\n\t\tPeaccode = toDecimal(null()),\n\t\t{Contract Type} = 'OTHER') ~> DerivedColumn4\nDerivedColumn4 select(mapColumn(\n\t\tkey = {Pk Key},\n\t\t{Partner Name},\n\t\tAddress,\n\t\tpebdunco = Pebdunco,\n\t\tQtbmdescr = Duncodesc,\n\t\tAddress1,\n\t\tAddress2,\n\t\tAddress3,\n\t\tAddress4,\n\t\t{Rating Company},\n\t\tPebratcod = {Rating Company},\n\t\t{Rating Code desc},\n\t\tPebratedate,\n\t\t{Domicile Code} = City,\n\t\t{Domicile Description},\n\t\tPeaccode,\n\t\t{Capital Code} = {Pea Lei Code},\n\t\t{Capital Description} = {Pea Lei Code},\n\t\t{Company Sub code} = {Pea Lei Code},\n\t\t{Company Sub Description} = {Pea Lei Code},\n\t\tState,\n\t\tPeaextid2 = {Pea Lei Code},\n\t\t{Contract Type}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select7\nSelect6, ConstantBroker, Select7 union(byName: true)~> Union1\nUnion1 aggregate(groupBy(key),\n\t{} = ERROR_FUNCTION(''),\n\t\teach(match(name!='key'), $$ = first($$))) ~> Aggregate1\n select(mapColumn(\n\t\tTARGET_CODE,\n\t\tTARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select8\ntcrossreference filter(CODE_TYPE_ID == 368 && SOURCE_SYSTEM == 'PARIS') ~> CodeTypeState368\ntcrossreference filter(CODE_TYPE_ID == 368 && SOURCE_SYSTEM == 'PARIS') ~> Filter2"
		}
	}
}