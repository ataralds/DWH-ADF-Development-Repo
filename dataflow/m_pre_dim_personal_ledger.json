{
	"name": "m_pre_dim_personal_ledger",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "Qtbtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "Rsatable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_reskontro_details",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "FltrRsaart"
				},
				{
					"name": "SelRsatable"
				},
				{
					"name": "Join1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "FltrQtbRsaaccg"
				},
				{
					"name": "Select2"
				}
			],
			"script": "source(output(\n\t\tqtbfieldn as string,\n\t\tqtbdispynsw as string,\n\t\tqtbmdescr as string,\n\t\tqtbvalue as string,\n\t\tqtbsdescr as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select *\\nfrom dwh_stage.p_qtbtable',\n\tformat: 'query') ~> Qtbtable\nsource(output(\n\t\trsaoffice as integer,\n\t\trsaart as integer,\n\t\trsaaccg as integer,\n\t\trsadocn as integer,\n\t\trsarefn as long,\n\t\trsarsaid as long,\n\t\trsastatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \\nrsaoffice,\\nrsaart,\\nrsaaccg,\\nrsadocn,\\nrsarefn,\\nrsarsaid,\\nrsastatus\\nfrom dwh_stage.p_rsatable',\n\tformat: 'query') ~> Rsatable\nQtbtable filter(qtbfieldn == 'rsaart') ~> FltrRsaart\nRsatable select(mapColumn(\n\t\trsaoffice,\n\t\trsaart,\n\t\trsaaccg,\n\t\trsadocn,\n\t\trsarefn,\n\t\trsarsaid,\n\t\trsastatus\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelRsatable\nFltrRsaart, SelRsatable join(qtbvalue == toString(rsaart),\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive(drd_office_desc = case(\r\n   rsaoffice == 1, 'Bergen',\r\n   rsaoffice == 2, 'Oslo',\r\n   rsaoffice == 3, 'Helsinki',\r\n   rsaoffice == 4, 'Gothenburg',\r\n   rsaoffice == 5, 'Arendal',\r\n   rsaoffice == 6, 'London',\r\n 'N/A'\r\n),\n\t\tdrd_office_country = case(\r\n   rsaoffice == 1, 'NORWAY',\r\n   rsaoffice == 2, 'NORWAY',\r\n   rsaoffice == 3, 'FINLAND',\r\n   rsaoffice == 4, 'SWEDEN',\r\n 'N/A'\r\n),\n\t\tdrd_office_code = iifNull(rsaoffice,-1),\n\t\tdrd_art_desc = iifNull(trim(qtbmdescr),'N/A'),\n\t\tdrd_rsarsaid_key = toString(rsarsaid),\n\t\tdrd_payment_status_desc = case(\r\nrsastatus == '0','Open',\r\nrsastatus == 'S','Settled',\r\n'N/A'\r\n),\n\t\tdrd_account_group = rsaaccg,\n\t\tdrd_installment_nr = rsarefn,\n\t\tdrd_allocated_doc_nr = rsadocn,\n\t\tdrd_art = rsaart,\n\t\tdrd_payment_status_code = rsastatus) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\teach(match(startsWith(name,'drd_')))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, FltrQtbRsaaccg lookup(toString(drd_account_group) == qtbvalue,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nQtbtable filter(qtbfieldn=='rsaaccg') ~> FltrQtbRsaaccg\nLookup1 select(mapColumn(\n\t\tdrd_account_group_name = qtbmdescr,\n\t\teach(match(startsWith(name,'drd_')))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 sink(input(\n\t\tpk_key as string,\n\t\treg_code as string,\n\t\treg_description as string,\n\t\tar1_code as string,\n\t\tar1_description as string,\n\t\tar2_code as string,\n\t\tar2_description as string,\n\t\tlast_updated_by as string,\n\t\tcon_2ltr_code as string,\n\t\tcon_country_name as string,\n\t\tcon_oecd as string,\n\t\tcon_currency_code as string,\n\t\tcon_eu as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}