{
	"name": "m_pre_dim_personal_ledger",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "Qtbtable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "Rsatable"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "FltrRsaart"
				},
				{
					"name": "SelRsatable"
				},
				{
					"name": "Join1"
				},
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "Select1"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "FltrQtbRsaaccg"
				}
			],
			"script": "source(output(\n\t\tqtbdispynsw as string,\n\t\tqtbfieldn as string,\n\t\tqtbmdescr as string,\n\t\tqtbsdescr as string,\n\t\tqtbvalue as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> Qtbtable\nsource(output(\n\t\trsaaccbreak as decimal(38,18),\n\t\trsaaccg as decimal(38,18),\n\t\trsaaccsort as decimal(38,18),\n\t\trsaagaid as string,\n\t\trsaagno as decimal(38,18),\n\t\trsaaintr as string,\n\t\trsaart as decimal(38,18),\n\t\trsabnkcod as decimal(38,18),\n\t\trsabnkrf3 as string,\n\t\trsabnkrf6 as string,\n\t\trsabordadr as decimal(38,18),\n\t\trsabordrfl as string,\n\t\trsabroker as decimal(38,18),\n\t\trsabusnbranch as decimal(38,18),\n\t\trsabusncla as decimal(38,18),\n\t\trsabusndiv as decimal(38,18),\n\t\trsabusnregion as decimal(38,18),\n\t\trsabusnsec as decimal(38,18),\n\t\trsabusnsubcla as decimal(38,18),\n\t\trsabusntyp as decimal(38,18),\n\t\trsacaldate as timestamp,\n\t\trsacedent as decimal(38,18),\n\t\trsaclmcat as string,\n\t\trsaclmextid as string,\n\t\trsacmref as string,\n\t\trsacoment as string,\n\t\trsacomment35 as string,\n\t\trsacomment70 as string,\n\t\trsacondco as decimal(38,18),\n\t\trsacrdate as timestamp,\n\t\trsacrsign as string,\n\t\trsacurr as string,\n\t\trsacyear as decimal(38,18),\n\t\trsadocamtp as decimal(38,18),\n\t\trsadocdate as timestamp,\n\t\trsadocn as decimal(38,18),\n\t\trsaduedate as timestamp,\n\t\trsadueldue as decimal(38,18),\n\t\trsaduest as decimal(38,18),\n\t\trsafilid as string,\n\t\trsafipid as string,\n\t\trsafrdate as timestamp,\n\t\trsahgrpre as decimal(38,18),\n\t\trsaident as string,\n\t\trsainpre as decimal(38,18),\n\t\trsaintrst as string,\n\t\trsaipaid as string,\n\t\trsaiyear as decimal(38,18),\n\t\trsaknvmark as string,\n\t\trsalcaid as string,\n\t\trsalccid as string,\n\t\trsalgrpre as decimal(38,18),\n\t\trsanetamtp as decimal(38,18),\n\t\trsanotdueaccno as decimal(38,18),\n\t\trsaobno as decimal(38,18),\n\t\trsaoffice as decimal(38,18),\n\t\trsaorgduedate as timestamp,\n\t\trsaorgins as decimal(38,18),\n\t\trsaosamtp as decimal(38,18),\n\t\trsaosourc as decimal(38,18),\n\t\trsaosrver as decimal(38,18),\n\t\trsapaccno as decimal(38,18),\n\t\trsapaycod as decimal(38,18),\n\t\trsapcod2 as string,\n\t\trsapcode as string,\n\t\trsapmp as decimal(38,18),\n\t\trsapolcod as string,\n\t\trsapoliyear as decimal(38,18),\n\t\trsapoltyp as decimal(38,18),\n\t\trsapremextid as string,\n\t\trsaprocomamtp as decimal(38,18),\n\t\trsaprocomp as decimal(38,18),\n\t\trsapurr as decimal(38,18),\n\t\trsarecdate as timestamp,\n\t\trsarect as string,\n\t\trsarefn as decimal(38,18),\n\t\trsarefnam as string,\n\t\trsaremdate as timestamp,\n\t\trsarespic as decimal(38,18),\n\t\trsarsaid as decimal(38,18),\n\t\trsarstat as decimal(38,18),\n\t\trsarun as decimal(38,18),\n\t\trsasaccno as decimal(38,18),\n\t\trsasetdate as timestamp,\n\t\trsasortk as string,\n\t\trsaspreadref as string,\n\t\trsastatmrno as decimal(38,18),\n\t\trsastatus as string,\n\t\trsastpdate as timestamp,\n\t\trsasupamtp as decimal(38,18),\n\t\trsasupcur as string,\n\t\trsasw5 as string,\n\t\trsasysextid as string,\n\t\trsatext15 as string,\n\t\trsatodate as timestamp,\n\t\trsatrtyco as decimal(38,18),\n\t\trsavaldate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> Rsatable\nQtbtable filter(qtbfieldn == 'rsaart') ~> FltrRsaart\nRsatable select(mapColumn(\n\t\trsaoffice,\n\t\trsaart,\n\t\trsaaccg,\n\t\trsadocn,\n\t\trsarefn,\n\t\trsarsaid,\n\t\trsastatus\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelRsatable\nFltrRsaart, SelRsatable join(qtbvalue == toString(rsaart),\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive(drd_office_desc = case(\r\n   rsaoffice == 1, 'Bergen',\r\n   rsaoffice == 2, 'Oslo',\r\n   rsaoffice == 3, 'Helsinki',\r\n   rsaoffice == 4, 'Gothenburg',\r\n   rsaoffice == 5, 'Arendal',\r\n   rsaoffice == 6, 'London',\r\n 'N/A'\r\n),\n\t\tdrd_office_country = case(\r\n   rsaoffice == 1, 'NORWAY',\r\n   rsaoffice == 2, 'NORWAY',\r\n   rsaoffice == 3, 'FINLAND',\r\n   rsaoffice == 4, 'SWEDEN',\r\n 'N/A'\r\n),\n\t\tdrd_office_code = iifNull(rsaoffice,-1),\n\t\tdrd_art_desc = iifNull(trim(qtbmdescr),'N/A'),\n\t\tdrd_rsarsaid_key = toString(rsarsaid),\n\t\tdrd_payment_status_desc = case(\r\nrsastatus == '0','Open',\r\nrsastatus == 'S','Settled',\r\n'N/A'\r\n),\n\t\tdrd_account_group = rsaaccg,\n\t\tdrd_installment_nr = rsarefn,\n\t\tdrd_allocated_doc_nr = rsadocn,\n\t\tdrd_art = rsaart,\n\t\tdrd_payment_status_code = rsastatus) ~> DerivedColumn1\nDerivedColumn1 select(mapColumn(\n\t\teach(match(startsWith(name, 'drd_')))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, FltrQtbRsaaccg lookup(toString(drd_account_group) == qtbvalue,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nQtbtable filter(qtbfieldn=='rsaaccg') ~> FltrQtbRsaaccg"
		}
	}
}