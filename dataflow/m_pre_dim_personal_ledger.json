{
	"name": "m_pre_dim_personal_ledger",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "Qtbtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "Rsatable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_personal_ledger",
						"type": "DatasetReference"
					},
					"name": "PreDimPersonalLedger"
				}
			],
			"transformations": [
				{
					"name": "FltrRsaart"
				},
				{
					"name": "Join1"
				},
				{
					"name": "DerivedColPleNameUsed"
				},
				{
					"name": "SelectPleCol"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "FltrQtbRsaaccg"
				},
				{
					"name": "SelectTargetCol"
				},
				{
					"name": "DerivedColLstUpdtby"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tqtbfieldn as string,\n\t\tqtbdispynsw as string,\n\t\tqtbmdescr as string,\n\t\tqtbvalue as string,\n\t\tqtbsdescr as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select *\\nfrom dwh_stage.p_qtbtable',\n\tformat: 'query') ~> Qtbtable\nsource(output(\n\t\trsaoffice as integer,\n\t\trsaart as integer,\n\t\trsaaccg as integer,\n\t\trsadocn as integer,\n\t\trsarefn as long,\n\t\trsarsaid as long,\n\t\trsastatus as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \\nrsaoffice,\\nrsaart,\\nrsaaccg,\\nrsadocn,\\nrsarefn,\\nrsarsaid,\\nrsastatus\\nfrom dwh_stage.p_rsatable where rsaagno=40973',\n\tformat: 'query') ~> Rsatable\nQtbtable filter(qtbfieldn == 'rsaart') ~> FltrRsaart\nFltrRsaart, Rsatable join(qtbvalue == toString(rsaart),\n\tjoinType:'right',\n\tbroadcast: 'auto')~> Join1\nJoin1 derive(ple_office_desc = case(\r\n   rsaoffice == 1, 'Bergen',\r\n   rsaoffice == 2, 'Oslo',\r\n   rsaoffice == 3, 'Helsinki',\r\n   rsaoffice == 4, 'Gothenburg',\r\n   rsaoffice == 5, 'Arendal',\r\n   rsaoffice == 6, 'London',\r\n 'N/A'\r\n),\n\t\tple_office_country = case(\r\n   rsaoffice == 1, 'NORWAY',\r\n   rsaoffice == 2, 'NORWAY',\r\n   rsaoffice == 3, 'FINLAND',\r\n   rsaoffice == 4, 'SWEDEN',\r\n 'N/A'\r\n),\n\t\tple_office_code = iifNull(rsaoffice,-1),\n\t\tple_art_desc = iifNull(trim(qtbmdescr),'N/A'),\n\t\tple_rsarsaid_key = toString(rsarsaid),\n\t\tple_payment_status_desc = case(\r\nrsastatus == '0','Open',\r\nrsastatus == 'S','Settled',\r\n'N/A'\r\n),\n\t\tple_account_group = rsaaccg,\n\t\tple_installment_nr = rsarefn,\n\t\tple_allocated_doc_nr = rsadocn,\n\t\tple_art = rsaart,\n\t\tple_payment_status_code = rsastatus) ~> DerivedColPleNameUsed\nDerivedColPleNameUsed select(mapColumn(\n\t\teach(match(startsWith(name,'ple_')))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectPleCol\nSelectPleCol, FltrQtbRsaaccg lookup(toString(ple_account_group) == qtbvalue,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nQtbtable filter(qtbfieldn=='rsaaccg') ~> FltrQtbRsaaccg\nLookup1 select(mapColumn(\n\t\tple_accout_group_name = qtbmdescr,\n\t\teach(match(startsWith(name,'ple_')))\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectTargetCol\nSelectTargetCol derive(last_updated_by = 'm_pre_dim_personal_ledger') ~> DerivedColLstUpdtby\nDerivedColLstUpdtby alterRow(upsertIf(true())) ~> AlterRow1\nAlterRow1 sink(input(\n\t\tple_rsarsaid_key as string,\n\t\tple_art_desc as string,\n\t\tple_installment_nr as decimal(28,10),\n\t\tple_payment_status_desc as string,\n\t\tple_account_group as decimal(28,10),\n\t\tple_art as decimal(28,10),\n\t\tple_office_country as string,\n\t\tple_allocated_doc_nr as decimal(28,10),\n\t\tple_office_desc as string,\n\t\tple_office_code as decimal(28,10),\n\t\tple_account_group_name as string,\n\t\tple_payment_status_code as string,\n\t\tdate_inserted as timestamp,\n\t\tlast_updated_by as string,\n\t\tinserted_by as string,\n\t\tdate_last_updated as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['ple_rsarsaid_key'],\n\tformat: 'table',\n\tmapColumn(\n\t\tple_rsarsaid_key,\n\t\tple_art_desc,\n\t\tple_installment_nr,\n\t\tple_payment_status_desc,\n\t\tple_account_group,\n\t\tple_art,\n\t\tple_office_country,\n\t\tple_allocated_doc_nr,\n\t\tple_office_desc,\n\t\tple_office_code,\n\t\tple_account_group_name = ple_accout_group_name,\n\t\tple_payment_status_code,\n\t\tlast_updated_by\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimPersonalLedger"
		}
	}
}