{
	"name": "m_pre_dim_premium_type",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "TCrossref"
				},
				{
					"name": "Dummy"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_premium_type",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "DerivedColumn1"
				},
				{
					"name": "CodeTypePremiumType"
				},
				{
					"name": "Deduplicator"
				},
				{
					"name": "DerivedColumn2"
				}
			],
			"script": "source(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> TCrossref\nsource(output(\n\t\tdummy_column as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> Dummy\nDummy derive({} = ERROR_FUNCTION(''),\n\t\t{} = ERROR_FUNCTION(''),\n\t\t{Map Date} = toDate(case(1!=1,1)),\n\t\t{Last Updated By} = 'M_PRE_DIM_PREMIUM_TYPE',\n\t\t{Source Column} = 'TARGET_CODE',\n\t\tSource_system = 'MAPPINGSYSTEM') ~> DerivedColumn1\nTCrossref filter(CODE_TYPE_ID == 802) ~> CodeTypePremiumType\nCodeTypePremiumType aggregate(groupBy(TARGET_CODE,\n\t\tTARGET_DESCRIPTION),\n\tCODE_TYPE = max(CODE_TYPE_ID)) ~> Deduplicator\nDeduplicator derive(Map_date = \r\ntoDate(case(1!=1,1)),\n\t\tPk_key_pty = TARGET_CODE,\n\t\tPty_code = TARGET_CODE,\n\t\tPty_Description = TARGET_DESCRIPTION,\n\t\tInserted_By = 'M_PRE_DIM_PREMIUM_TYPE',\n\t\tDate_Inserted = currentDate(),\n\t\tLast_Updated_By = 'M_PRE_DIM_PREMIUM_TYPE') ~> DerivedColumn2\nDerivedColumn2 sink(input(\n\t\tPK_KEY as string,\n\t\tCPT_DESCRIPTION as string,\n\t\tCPT_NUMBER as integer,\n\t\tINSERTED_BY as string,\n\t\tDATE_INSERTED as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> sink1"
		}
	}
}