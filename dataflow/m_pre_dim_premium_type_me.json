{
	"name": "m_pre_dim_premium_type_me",
	"properties": {
		"folder": {
			"name": "dwh_prepare/paris"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "Ipatable"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Ipaselected"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tipaabatementpercentage as decimal(38,18),\n\t\tipaaccrebamtp as decimal(38,18),\n\t\tipaaccrebbase as decimal(38,18),\n\t\tipaaccrebp as decimal(38,18),\n\t\tipaaccrebsh as decimal(38,18),\n\t\tipaadarea as string,\n\t\tipaadcom as decimal(38,18),\n\t\tipaadcomc as decimal(38,18),\n\t\tipaaddst as decimal(38,18),\n\t\tipaadicomamtp as decimal(38,18),\n\t\tipaadicombase as decimal(38,18),\n\t\tipaadicomp as decimal(38,18),\n\t\tipaadmfee as decimal(38,18),\n\t\tipaadocomamtp as decimal(38,18),\n\t\tipaadocombase as decimal(38,18),\n\t\tipaadocomp as decimal(38,18),\n\t\tipaagaid as string,\n\t\tipaagbaseamtp as decimal(38,18),\n\t\tipaagtynsw as string,\n\t\tipaapprovestatus as string,\n\t\tipaassetsubno as decimal(38,18),\n\t\tipabonusamt as decimal(38,18),\n\t\tipabonusndisc as decimal(38,18),\n\t\tipaccqid as string,\n\t\tipaclodate as timestamp,\n\t\tipaclstat as decimal(38,18),\n\t\tipacosig1 as string,\n\t\tipacosig2 as string,\n\t\tipacrdate as timestamp,\n\t\tipacrsign as string,\n\t\tipacurr as string,\n\t\tipadwbsname as string,\n\t\tipaeingrpre as decimal(38,18),\n\t\tipaendate as timestamp,\n\t\tipaenhour as decimal(38,18),\n\t\tipaeoutpre as decimal(38,18),\n\t\tipagnsw as decimal(38,18),\n\t\tipagrossamtp as decimal(38,18),\n\t\tipagrossprem as decimal(38,18),\n\t\tipaicaid as string,\n\t\tipaienteredprem as decimal(38,18),\n\t\tipainaid as string,\n\t\tipaindate as timestamp,\n\t\tipainstad as decimal(38,18),\n\t\tipainstcalctype as decimal(38,18),\n\t\tipainstpertype as decimal(38,18),\n\t\tipaipaid as string,\n\t\tipairatecrew as decimal(38,18),\n\t\tipaiusdgt as decimal(38,18),\n\t\tipaknvmark as string,\n\t\tipalastinstamtp as decimal(38,18),\n\t\tipalastinstperc as decimal(38,18),\n\t\tipalisig1 as string,\n\t\tipalisig2 as string,\n\t\tipaludate as timestamp,\n\t\tipalusign as string,\n\t\tipamaninsynsw as string,\n\t\tipamarketripercentage as decimal(38,18),\n\t\tipaminprem as decimal(38,18),\n\t\tipaminrate as decimal(38,18),\n\t\tipanatpre as decimal(38,18),\n\t\tipanetamtp as decimal(38,18),\n\t\tipanetprem as decimal(38,18),\n\t\tipanote as string,\n\t\tipanoterm as decimal(38,18),\n\t\tipaobno as decimal(38,18),\n\t\tipaorate as decimal(38,18),\n\t\tipaotherexpences as decimal(38,18),\n\t\tipaousdgt as decimal(38,18),\n\t\tipapcdtxt as string,\n\t\tipapcod2 as string,\n\t\tipapcode as string,\n\t\tipapdays as decimal(38,18),\n\t\tipapocid as string,\n\t\tipapocprtln3 as decimal(38,18),\n\t\tipapolnn19 as string,\n\t\tipapoolpercentage as decimal(38,18),\n\t\tipapremn3 as decimal(38,18),\n\t\tipapremri as string,\n\t\tipaprfcomamtp as decimal(38,18),\n\t\tipaprfcombase as decimal(38,18),\n\t\tipaprfcomp as decimal(38,18),\n\t\tipaprocomamtp as decimal(38,18),\n\t\tipaprocombase as decimal(38,18),\n\t\tipaprocomp as decimal(38,18),\n\t\tiparate as decimal(38,18),\n\t\tiparatype as string,\n\t\tiparelcallamtp as decimal(38,18),\n\t\tiparelcallperc as decimal(38,18),\n\t\tipareopenipaid as string,\n\t\tiparesig1 as decimal(38,18),\n\t\tiparesig2 as decimal(38,18),\n\t\tiparetndisc as decimal(38,18),\n\t\tiparetynsw as string,\n\t\tiparicalcdate as timestamp,\n\t\tiparipercentage as decimal(38,18),\n\t\tiparistor as decimal(38,18),\n\t\tiparoundrule as string,\n\t\tipasecrebamtp as decimal(38,18),\n\t\tipasecrebbase as decimal(38,18),\n\t\tipasecrebp as decimal(38,18),\n\t\tipaslipsw as string,\n\t\tipastdate as timestamp,\n\t\tipasthour as decimal(38,18),\n\t\tipatarifamt as decimal(38,18),\n\t\tipatarifndisc as decimal(38,18),\n\t\tipataxamt as decimal(38,18),\n\t\tipataxgnsw as decimal(38,18),\n\t\tipatxcom as decimal(38,18),\n\t\tipatxcomc as decimal(38,18),\n\t\tipavalueicaid as string,\n\t\tipavalueipaid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> Ipatable\nIpatable select(mapColumn(\n\t\tipaipaid,\n\t\tipapcode,\n\t\tipapcod2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Ipaselected\nIpaselected derive(Pty_Code = iif( upper(trim(ipapcod2)) == 'XB','SMD',\r\n    iif(upper(trim(ipapcod2)) == 'XP','AJD',\r\n         iif(upper(trim(ipapcod2)) == 'XR','SRE',\r\n             iif(upper(trim(ipapcod2)) == 'XM','SMD',\r\n             iif(upper(trim(ipapcod2)) == 'XX','SMD',\r\n             iif(upper(trim(ipapcode)) == 'A','GAD',\r\n             iif(upper(trim(ipapcod2)) == 'C','CAN',\r\n             iif(upper(trim(ipapcod2)) == 'F','OTH',\r\n             iif(upper(trim(ipapcod2)) == 'G','GER',\r\n             iif(upper(trim(ipapcod2)) == 'L','LAY',\r\n             iif(upper(trim(ipapcod2)) == 'O','ORG',\r\n             iif(upper(trim(ipapcod2)) == 'P','PRO',\r\n             iif(upper(trim(ipapcod2)) == 'Q','OTH',\r\n             iif(upper(trim(ipapcod2)) == 'R','RVA',\r\n             iif(upper(trim(ipapcod2)) == 'S','SAL',\r\n             iif(upper(trim(ipapcod2)) == 'T','TRI',\r\n             iif(upper(trim(ipapcod2)) == 'X','OTH',\r\n                'N/A'\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                )\r\n            )\r\n        )\r\n     ),\n\t\tPty_Description = iif( upper(trim(ipapcod2)) == 'XB','Minimum & Deposit',\r\n    iif(upper(trim(ipapcod2)) == 'XP','Adjustment Premium',\r\n         iif(upper(trim(ipapcod2)) == 'XR','Reinstatement Premium',\r\n         iif(upper(trim(ipapcod2)) == 'XM','Minimum & Deposit',\r\n         iif(upper(trim(ipapcod2)) == 'XX','Minimum & Deposit',\r\n         iif(upper(trim(ipapcode)) == 'A','General Add',\r\n         iif(upper(trim(ipapcod2)) == 'C','Cancel',\r\n         iif(upper(trim(ipapcod2)) == 'F','Other',\r\n         iif(upper(trim(ipapcod2)) == 'G','General Return',\r\n         iif(upper(trim(ipapcod2)) == 'L','Layup',\r\n         iif(upper(trim(ipapcod2)) == 'O','Original',\r\n         iif(upper(trim(ipapcod2)) == 'P','Prolongation',\r\n         iif(upper(trim(ipapcod2)) == 'Q','Other',\r\n         iif(upper(trim(ipapcod2)) == 'R','Return Value',\r\n         iif(upper(trim(ipapcod2)) == 'S','Sale/Stop',\r\n         iif(upper(trim(ipapcod2)) == 'T','Trip',\r\n         iif(upper(trim(ipapcod2)) == 'X','Other',\r\n                'Not Applicable'\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                )\r\n            )\r\n        )\r\n     )) ~> DerivedColumn1"
		}
	}
}