{
	"name": "m_pre_dim_premium_type_me",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "ipa"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_premium_type",
						"type": "DatasetReference"
					},
					"name": "predimpremtype"
				}
			],
			"transformations": [
				{
					"name": "ipatcode"
				},
				{
					"name": "ipatable"
				}
			],
			"script": "source(output(\n\t\tipaipaid as string,\n\t\tipaeingrpre as decimal(28,10),\n\t\tipapolnn19 as string,\n\t\tipapoolpercentage as decimal(28,10),\n\t\tiparatype as string,\n\t\tiparistor as decimal(28,10),\n\t\tipaprocombase as decimal(28,10),\n\t\tipaagtynsw as string,\n\t\tipacosig2 as string,\n\t\tipaminprem as decimal(28,10),\n\t\tipalusign as string,\n\t\tipainstpertype as integer,\n\t\tipasecrebbase as decimal(28,10),\n\t\tipatxcomc as integer,\n\t\tipabonusamt as long,\n\t\tiparelcallperc as decimal(28,10),\n\t\tiparetynsw as string,\n\t\tipabonusndisc as decimal(28,10),\n\t\tipacrsign as string,\n\t\tipaadmfee as decimal(28,10),\n\t\tipaludate as date,\n\t\tipaadarea as string,\n\t\tipaprfcombase as decimal(28,10),\n\t\tipapcod2 as string,\n\t\tipaprocomamtp as decimal(28,10),\n\t\tipanote as string,\n\t\tipaaddst as integer,\n\t\tipapremn3 as short,\n\t\tipavalueicaid as string,\n\t\tipainstcalctype as integer,\n\t\tipacurr as string,\n\t\tipaadocombase as decimal(28,10),\n\t\tipasecrebamtp as decimal(28,10),\n\t\tiparipercentage as decimal(28,10),\n\t\tipaendate as date,\n\t\tipamaninsynsw as string,\n\t\tipaadicomamtp as decimal(28,10),\n\t\tiparate as decimal(28,10),\n\t\tipaadicomp as decimal(28,10),\n\t\tiparelcallamtp as decimal(28,10),\n\t\tipapcode as string,\n\t\tipalastinstamtp as decimal(28,10),\n\t\tipaenhour as short,\n\t\tipalisig1 as string,\n\t\tipaadocomp as decimal(28,10),\n\t\tipaienteredprem as decimal(28,10),\n\t\tipapdays as decimal(28,10),\n\t\tipasecrebp as decimal(28,10),\n\t\tipapocprtln3 as short,\n\t\tipaousdgt as decimal(28,10),\n\t\tipavalueipaid as string,\n\t\tipaorate as decimal(28,10),\n\t\tipanoterm as integer,\n\t\tipataxamt as decimal(28,10),\n\t\tipaprfcomamtp as decimal(28,10),\n\t\tipaapprovestatus as string,\n\t\tipareopenipaid as string,\n\t\tipagnsw as integer,\n\t\tipadwbsname as string,\n\t\tipaagbaseamtp as decimal(28,10),\n\t\tipagrossprem as decimal(28,10),\n\t\tiparicalcdate as date,\n\t\tipaaccrebamtp as decimal(28,10),\n\t\tipacrdate as date,\n\t\tipaadocomamtp as decimal(28,10),\n\t\tipaadcom as decimal(28,10),\n\t\tipainstad as decimal(28,10),\n\t\tipaprocomp as decimal(28,10),\n\t\tiparesig2 as integer,\n\t\tipaeoutpre as decimal(28,10),\n\t\tipaaccrebp as decimal(28,10),\n\t\tipaaccrebbase as decimal(28,10),\n\t\tipaccqid as string,\n\t\tipaaccrebsh as decimal(28,10),\n\t\tiparesig1 as integer,\n\t\tipaassetsubno as long,\n\t\tipataxgnsw as integer,\n\t\tipaadcomc as integer,\n\t\tipairatecrew as decimal(28,10),\n\t\tipalastinstperc as decimal(28,10),\n\t\tipaicaid as string,\n\t\tipacosig1 as string,\n\t\tipaabatementpercentage as decimal(28,10),\n\t\tiparetndisc as decimal(28,10),\n\t\tipaotherexpences as decimal(28,10),\n\t\tiparoundrule as string,\n\t\tipagrossamtp as decimal(28,10),\n\t\tipatarifamt as long,\n\t\tipasthour as short,\n\t\tipamarketripercentage as decimal(28,10),\n\t\tipatxcom as decimal(28,10),\n\t\tipaagaid as string,\n\t\tipapocid as string,\n\t\tipaslipsw as string,\n\t\tipanetprem as decimal(28,10),\n\t\tipaadicombase as decimal(28,10),\n\t\tipatarifndisc as decimal(28,10),\n\t\tipaiusdgt as decimal(28,10),\n\t\tipaobno as integer,\n\t\tipaclodate as date,\n\t\tipaprfcomp as decimal(28,10),\n\t\tipapremri as string,\n\t\tipanetamtp as decimal(28,10),\n\t\tipastdate as date,\n\t\tipaminrate as decimal(28,10),\n\t\tipanatpre as decimal(28,10),\n\t\tipainaid as string,\n\t\tipaclstat as integer,\n\t\tipaindate as date,\n\t\tipalisig2 as string,\n\t\tipaknvmark as string,\n\t\tipapcdtxt as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_ipatable',\n\tformat: 'query') ~> ipa\nipa select(mapColumn(\n\t\tipaipaid,\n\t\tipapcode,\n\t\tipapcod2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ipatcode\nipatcode derive(Pty_Code = iif( upper(trim(ipapcod2)) == 'XB','SMD',\r\n    iif(upper(trim(ipapcod2)) == 'XP','AJD',\r\n         iif(upper(trim(ipapcod2)) == 'XR','SRE',\r\n             iif(upper(trim(ipapcod2)) == 'XM','SMD',\r\n             iif(upper(trim(ipapcod2)) == 'XX','SMD',\r\n             iif(upper(trim(ipapcode)) == 'A','GAD',\r\n             iif(upper(trim(ipapcod2)) == 'C','CAN',\r\n             iif(upper(trim(ipapcod2)) == 'F','OTH',\r\n             iif(upper(trim(ipapcod2)) == 'G','GER',\r\n             iif(upper(trim(ipapcod2)) == 'L','LAY',\r\n             iif(upper(trim(ipapcod2)) == 'O','ORG',\r\n             iif(upper(trim(ipapcod2)) == 'P','PRO',\r\n             iif(upper(trim(ipapcod2)) == 'Q','OTH',\r\n             iif(upper(trim(ipapcod2)) == 'R','RVA',\r\n             iif(upper(trim(ipapcod2)) == 'S','SAL',\r\n             iif(upper(trim(ipapcod2)) == 'T','TRI',\r\n             iif(upper(trim(ipapcod2)) == 'X','OTH',\r\n                'N/A'\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                )\r\n            )\r\n        )\r\n     ),\n\t\tPty_Description = iif( upper(trim(ipapcod2)) == 'XB','Minimum & Deposit',\r\n    iif(upper(trim(ipapcod2)) == 'XP','Adjustment Premium',\r\n         iif(upper(trim(ipapcod2)) == 'XR','Reinstatement Premium',\r\n         iif(upper(trim(ipapcod2)) == 'XM','Minimum & Deposit',\r\n         iif(upper(trim(ipapcod2)) == 'XX','Minimum & Deposit',\r\n         iif(upper(trim(ipapcode)) == 'A','General Add',\r\n         iif(upper(trim(ipapcod2)) == 'C','Cancel',\r\n         iif(upper(trim(ipapcod2)) == 'F','Other',\r\n         iif(upper(trim(ipapcod2)) == 'G','General Return',\r\n         iif(upper(trim(ipapcod2)) == 'L','Layup',\r\n         iif(upper(trim(ipapcod2)) == 'O','Original',\r\n         iif(upper(trim(ipapcod2)) == 'P','Prolongation',\r\n         iif(upper(trim(ipapcod2)) == 'Q','Other',\r\n         iif(upper(trim(ipapcod2)) == 'R','Return Value',\r\n         iif(upper(trim(ipapcod2)) == 'S','Sale/Stop',\r\n         iif(upper(trim(ipapcod2)) == 'T','Trip',\r\n         iif(upper(trim(ipapcod2)) == 'X','Other',\r\n                'Not Applicable'\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                    )\r\n                )\r\n            )\r\n        )\r\n     ),\n\t\tPty_Source_code = case(in(['XB','XP','XR','XM','XX'],trim(upper(ipapcod2))),ipapcod2,ipapcode),\n\t\tSource_column = case(in(['XB','XP','XR','XM','XX'],trim(upper(ipapcod2))),'ipapcod2','ipapcode'),\n\t\tSource_System = 'PARIS',\n\t\tDate_inserted = currentDate(),\n\t\tDate_Last_Updated = currentDate(),\n\t\tInserted_By = 'M_PRE_DIM_PREMIUM_TYPE_ME',\n\t\tLast_Updated_by = 'M_PRE_DIM_PREMIUM_TYPE_ME',\n\t\tMap_date = toDate(case(1!=1,1))) ~> ipatable\nipatable sink(input(\n\t\tpk_key_pty as string,\n\t\tpty_description as string,\n\t\tpty_source_system as string,\n\t\tpty_source_column as string,\n\t\tpty_source_code as string,\n\t\tinserted_by as string,\n\t\tpty_code as string,\n\t\tdate_last_updated as timestamp,\n\t\tlast_updated_by as string,\n\t\tdate_inserted as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> predimpremtype"
		}
	}
}