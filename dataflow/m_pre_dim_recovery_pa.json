{
	"name": "m_pre_dim_recovery_pa",
	"properties": {
		"description": "Created by olseir 29.06.2020\nBased on m_pre_dim_sub_claim_detail_me in Oracle",
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "lga",
					"description": "distinct lgalcaid where lgacrcode = R"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "lca"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "ica"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "aga"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "tCross"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_recovery_pa",
						"type": "DatasetReference"
					},
					"name": "PreDimRecoveryPa"
				}
			],
			"transformations": [
				{
					"name": "lgalca"
				},
				{
					"name": "lgalcaica"
				},
				{
					"name": "lgalcaicaaga"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "LookupReason"
				},
				{
					"name": "LookupEmployee"
				},
				{
					"name": "AddColumns",
					"description": "LCA_ID, Guarantee_IND, possible_rec_comments, actual_rec_comments, strategy_partner_id, possible_recovery_ind, ind_pending"
				},
				{
					"name": "SelectColumns"
				},
				{
					"name": "LastUpdatedBy"
				},
				{
					"name": "AlterRow1"
				}
			],
			"script": "source(output(\n\t\tlgalcaid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select distinct  lgalcaid from dwh_stage.p_lgatable\\nwhere lgacrcode = \\'R\\'',\n\tformat: 'query') ~> lga\nsource(output(\n\t\tlcarecovachintnote as string,\n\t\tlcarecovachdate as date,\n\t\tlcarecovachynsw as string,\n\t\tlcarecovachsign as string,\n\t\tlcarecovremdate as date,\n\t\tlcaicaid as string,\n\t\tlcarecovpotynsw as string,\n\t\tlcarecovpotintnote as string,\n\t\tlcarecovccvid as short,\n\t\tlcatrtmco as integer,\n\t\tlcalcaid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select  lcarecovachintnote, lcarecovachdate, lcarecovachynsw, lcarecovachsign, lcarecovremdate, lcaicaid, lcarecovpotynsw, lcarecovpotintnote, lcarecovccvid, lcatrtmco , lcalcaid\\nfrom dwh_stage.p_lcatable',\n\tformat: 'query') ~> lca\nsource(output(\n\t\ticaicaid as string,\n\t\ticaagaid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select icaicaid, icaagaid from dwh_stage.p_icatable',\n\tformat: 'query') ~> ica\nsource(output(\n\t\tagaagaid as string,\n\t\tagabusndiv as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select agaagaid, agabusndiv from dwh_stage.p_agatable',\n\tformat: 'query') ~> aga\nsource(output(\n\t\tcode_type_id as long,\n\t\ttarget_code as string,\n\t\tsource_code_key as string,\n\t\ttarget_description as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select code_type_id,  target_code, source_code_key, target_description from dwh_stage.t_crossreference\\nwhere source_system = \\'Paris\\'',\n\tformat: 'query') ~> tCross\nlga, lca join(lgalcaid == lcaicaid,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> lgalca\nlgalca, ica join(lcaicaid == icaicaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> lgalcaica\nlgalcaica, aga join(icaagaid == agaagaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> lgalcaicaaga\ntCross split(code_type_id==804,\n\tcode_type_id==329,\n\tdisjoint: true) ~> ConditionalSplit1@(CodeTypeReason804, CodeTypeEmployee329)\nlgalcaicaaga, ConditionalSplit1@CodeTypeReason804 lookup(toString(lcarecovccvid) == source_code_key,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LookupReason\nLookupReason, ConditionalSplit1@CodeTypeEmployee329 lookup(lcarecovachsign == ConditionalSplit1@CodeTypeEmployee329@source_code_key,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'right')~> LookupEmployee\nLookupEmployee derive(LCA_ID = concat('P',lcalcaid),\n\t\tGUARANTEE_IND = case(isNull(lgalcaid),'N','Y'),\n\t\tSCD_POSSIBLE_REC_COMMENTS = substring(lcarecovpotintnote,1,256),\n\t\tSCD_ACTUAL_REC_COMMENTS = substring(lcarecovachintnote,1,256),\n\t\tSCD_STRATEGY_PARTNER_IND = 'N',\n\t\tSCD_POSSIBLE_RECOVERY_IND = case( lcarecovpotynsw=='Y', 'Y'  ,'N'),\n\t\tSCD_IND_PENDING = case(in([1,3],iifNull(lcatrtmco, 9, lcatrtmco)),'Y','N')) ~> AddColumns\nLastUpdatedBy select(mapColumn(\n\t\trec_key = LCA_ID,\n\t\trec_actual_rec_comments = SCD_ACTUAL_REC_COMMENTS,\n\t\trec_actual_rec_date = lcarecovachdate,\n\t\trec_actual_rec_ind = lcarecovachynsw,\n\t\trec_actual_rec_initials = ConditionalSplit1@CodeTypeEmployee329@target_code,\n\t\trec_actual_rec_reminder_date = lcarecovremdate,\n\t\trec_obtained_quarantee_ind = GUARANTEE_IND,\n\t\trec_possible_recovery_ind = SCD_POSSIBLE_REC_COMMENTS,\n\t\trec_strategy_partner_ind = SCD_STRATEGY_PARTNER_IND,\n\t\trec_ind_pending = SCD_IND_PENDING\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nAddColumns derive(Last_updated_by = 'PRE_DIM_SUB_CLAIM_DETAIL_PA') ~> LastUpdatedBy\nSelectColumns alterRow(upsertIf(!isNull(rec_key))) ~> AlterRow1\nAlterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:true,\n\tkeys:['rec_key'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimRecoveryPa"
		}
	}
}