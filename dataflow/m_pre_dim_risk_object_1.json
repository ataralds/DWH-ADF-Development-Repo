{
	"name": "m_pre_dim_risk_object_1",
	"properties": {
		"description": "Start testing how to make the risk_object. Starting on PA",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "iuw"
				},
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "tcross"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "FilterCoverage",
					"description": "Filter codetype 122 and Source system Paris"
				},
				{
					"name": "tcrossCoverage"
				},
				{
					"name": "FilterAgreementType"
				},
				{
					"name": "TcrossAgreementType"
				},
				{
					"name": "FilterBusinessArea"
				},
				{
					"name": "TcrossBusinessArea"
				}
			],
			"script": "source(output(\n\t\tiuwaccg as decimal(38,18),\n\t\tiuwaddbordrule as decimal(38,18),\n\t\tiuwborefl as string,\n\t\tiuwbroker as decimal(38,18),\n\t\tiuwclabordrule as decimal(38,18),\n\t\tiuwclmbordrule as decimal(38,18),\n\t\tiuwclobordrule as decimal(38,18),\n\t\tiuwcomcod as string,\n\t\tiuwcorbordrule as decimal(38,18),\n\t\tiuwgrndisc as decimal(38,18),\n\t\tiuwinsurer as decimal(38,18),\n\t\tiuwinsurerscontact as string,\n\t\tiuwinsurerver as string,\n\t\tiuwiuvid as string,\n\t\tiuwiuwid as string,\n\t\tiuwln3 as decimal(38,18),\n\t\tiuwnendisc as decimal(38,18),\n\t\tiuworate as decimal(38,18),\n\t\tiuwoutbusntyp as decimal(38,18),\n\t\tiuwpartisip as decimal(38,18),\n\t\tiuwpgqid as string,\n\t\tiuwprobordrule as decimal(38,18),\n\t\tiuwreof as decimal(38,18),\n\t\tiuwrescod as decimal(38,18),\n\t\tiuwshare as decimal(38,18),\n\t\tiuwtrnref as string,\n\t\tiuwuwlid as string,\n\t\tiuwuwndisc as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> iuw\nsource(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> tcross\niuw filter(ERROR_FUNCTION('')) ~> Filter1\ntcross filter(SOURCE_SYSTEM == 'PARIS' && \r\nCODE_TYPE_ID == 122) ~> FilterCoverage\nFilterCoverage select(mapColumn(\n\t\tcov_source_code_key = SOURCE_CODE_KEY,\n\t\tcov_target_coede = TARGET_CODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tcrossCoverage\ntcross filter(SOURCE_SYSTEM == 'PARIS' && \r\n CODE_TYPE_ID == 113) ~> FilterAgreementType\nFilterAgreementType select(mapColumn(\n\t\tagt_source_code_key = SOURCE_CODE_KEY,\n\t\tagt_target_code = TARGET_CODE,\n\t\tagt_target_description = TARGET_DESCRIPTION\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TcrossAgreementType\ntcross filter(SOURCE_SYSTEM =='PARIS' && \r\n  CODE_TYPE_ID == 106) ~> FilterBusinessArea\nFilterBusinessArea select(mapColumn(\n\t\tbua_source_code_key = SOURCE_CODE_KEY,\n\t\tbua_target_code = TARGET_CODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TcrossBusinessArea"
		}
	}
}