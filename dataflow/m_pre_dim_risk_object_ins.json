{
	"name": "m_pre_dim_risk_object_ins",
	"properties": {
		"description": "Insurance mapping from pre dim risk object",
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "icatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "inatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "paa"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "peb"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "tcross"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "isztable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "isatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_dwh_stage",
						"type": "DatasetReference"
					},
					"name": "ipatable"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_risk_object_insurance",
						"type": "DatasetReference"
					},
					"name": "PreDimRiskObjectInsurance"
				}
			],
			"transformations": [
				{
					"name": "selectpebtable"
				},
				{
					"name": "maxpebver"
				},
				{
					"name": "pebmaxpeb"
				},
				{
					"name": "icaina"
				},
				{
					"name": "inapaa"
				},
				{
					"name": "pebtable"
				},
				{
					"name": "inapeb"
				},
				{
					"name": "Lkpcountry"
				},
				{
					"name": "sourcecode"
				},
				{
					"name": "xrefcountry"
				},
				{
					"name": "xrefSectionType"
				},
				{
					"name": "inaisa"
				},
				{
					"name": "isaisz"
				},
				{
					"name": "lkpsectiontype"
				},
				{
					"name": "predimriskobject"
				},
				{
					"name": "icaipa"
				},
				{
					"name": "RathingMethod"
				}
			],
			"script": "source(output(\n\t\ticaicaid as string,\n\t\ticaprwdate as date,\n\t\ticainaid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select icaicaid,\\n\t\ticaprwdate,\\n\t\ticainaid\\nfrom dwh_stage.p_icatable',\n\tformat: 'query') ~> icatable\nsource(output(\n\t\tinainaid as string,\n\t\tinacedent as long,\n\t\tinawarrenty as short,\n\t\tinaisaid as string,\n\t\tinabusnsubcla as integer,\n\t\tinareinnoof as integer,\n\t\tinareinshare as decimal(28,10)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select inainaid,\\n\t\tinacedent,\\n\t\tinawarrenty,\\n\t\tinaisaid,\\n\t\tinabusnsubcla,\\n\t\tinareinnoof,\\n\t\tinareinshare\\nfrom dwh_stage.p_inatable',\n\tformat: 'query') ~> inatable\nsource(output(\n\t\tpaapeaid as long,\n\t\tpaacname as string,\n\t\tpaafunct as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \tpaapeaid,\\n\t\tpaacname,\\n                paafunct\\nfrom dwh_stage.p_paatable\\n where paafunct = 0',\n\tformat: 'query') ~> paa\nsource(output(\n\t\tpebpeaid as long,\n\t\tpebpever as short,\n\t\tpebisolan as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select pebpeaid,pebpever,pebisolan from dwh_stage.p_pebtable',\n\tformat: 'query') ~> peb\nsource(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference\\nwhere source_system = \\'PARIS\\'',\n\tformat: 'query') ~> tcross\nsource(output(\n\t\tiszcshind as decimal(28,10),\n\t\tisztotind as decimal(28,10),\n\t\tisziszid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select iszcshind,\\n\t\tisztotind,\\n\t\tisziszid\\nfrom dwh_stage.p_isztable',\n\tformat: 'query') ~> isztable\nsource(output(\n\t\tisasecnam as string,\n\t\tisaisaid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select isasecnam,isaisaid from dwh_stage.p_isatable',\n\tformat: 'query') ~> isatable\nsource(output(\n\t\tipaiusdgt as decimal(28,10),\n\t\tipairatecrew as decimal(28,10),\n\t\tiparate as decimal(28,10),\n\t\tipaicaid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select ipaiusdgt,\\n\t\tipairatecrew,\\n\t\tiparate,\\n\t\tipaicaid\\nfrom dwh_stage.p_ipatable',\n\tformat: 'query') ~> ipatable\npeb select(mapColumn(\n\t\tpebpeaid,\n\t\tpebpever,\n\t\tpebisolan\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectpebtable\npeb aggregate(groupBy(pebpeaid),\n\tmax_pebver = max(pebpever)) ~> maxpebver\nmaxpebver, selectpebtable join(maxpebver@pebpeaid == selectpebtable@pebpeaid\n\t&& max_pebver == pebpever,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> pebmaxpeb\nicatable, inatable join(icainaid == inainaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> icaina\nicaina, paa join(inacedent == paapeaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inapaa\npebmaxpeb select(mapColumn(\n\t\tpebpeaid = maxpebver@pebpeaid,\n\t\tpebisolan\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> pebtable\ninapaa, pebtable join(paapeaid == pebpeaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inapeb\nsourcecode, xrefcountry lookup(source_system == source_system_country\n\t&& pebisolan == source_code_key_country\n\t&& sourcecode@code_type_id_country == xrefcountry@code_type_id_country,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lkpcountry\ninapeb derive(source_system = 'PARIS',\n\t\tcode_type_id_country = 50,\n\t\tcode_type_id_157_section_type = 157) ~> sourcecode\ntcross select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'||name=='code_type_id'||name=='source_system'),\n\t\t\t$$+'_country' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefcountry\ntcross select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'||name=='code_type_id'||name=='source_system'||name=='code_type'),\n\t\t\t$$+'_section_type' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefSectionType\nLkpcountry, isatable join(inaisaid == isaisaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inaisa\ninaisa, isztable join(isaisaid == isziszid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> isaisz\nicaipa, xrefSectionType lookup(source_system == source_system_section_type\n\t&& toString(inabusnsubcla) == code_type_section_type\n\t&& code_type_id_157_section_type == code_type_id_section_type,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpsectiontype\nRathingMethod select(mapColumn(\n\t\trob_ceding_comp_country_code = target_code_country,\n\t\trob_ceding_comp_country_desc = target_description_country,\n\t\trob_ceding_company_code = paapeaid,\n\t\trob_ceding_company_name = paacname,\n\t\trob_total_index = isztotind,\n\t\trob_rating_method,\n\t\trob_cash_index = iszcshind,\n\t\trob_reinstatement_counts = inareinnoof,\n\t\trob_reinstatement_rate = inareinshare,\n\t\trob_section_name = isasecnam,\n\t\trob_section_type_code = target_code_section_type,\n\t\trob_section_type_desc = target_description_section_type,\n\t\trob_warranty_days = inawarrenty\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> predimriskobject\nisaisz, ipatable join(icaicaid == ipaicaid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> icaipa\nlkpsectiontype derive(rob_rating_method = case(coalesce(toDecimal(ipaiusdgt),toDecimal(0))>toDecimal(0),'RPT',\r\ncase(coalesce(toDecimal(ipairatecrew),toDecimal(0))>toDecimal(0),'RPC',\r\ncase(coalesce(toDecimal(iparate),toDecimal(0))>toDecimal(0),'POC'\r\n,'LMP')))) ~> RathingMethod\npredimriskobject sink(input(\n\t\tpk_key as string,\n\t\trob_ceding_company_code as decimal(28,10),\n\t\trob_section_name as string,\n\t\trob_section_type_desc as string,\n\t\tdeleted_ind as string,\n\t\trob_expiry_rate_etc as decimal(28,10),\n\t\trob_rr_annual_amount_org as decimal(28,10),\n\t\trob_cash_index as decimal(28,10),\n\t\trob_ceding_comp_country_code as string,\n\t\trob_ceding_comp_country_desc as string,\n\t\trob_total_index as decimal(28,10),\n\t\tdate_last_updated as timestamp,\n\t\trob_reinstatement_rate as decimal(28,10),\n\t\trob_rr_abatement_percent as decimal(28,10),\n\t\trob_expiry_rate as decimal(28,10),\n\t\trob_ceding_company_name as string,\n\t\tdate_inserted as timestamp,\n\t\trob_reinstatement_counts as decimal(28,10),\n\t\trob_rr_pool_percent as decimal(28,10),\n\t\trob_rr_annual_amount_usd as decimal(28,10),\n\t\trob_rr_broker_percent as decimal(28,10),\n\t\trob_rr_annual_amount_stat as decimal(28,10),\n\t\trob_warranty_days as decimal(28,10),\n\t\trob_rr_market_ri_percent as decimal(28,10),\n\t\trob_rating_method as string,\n\t\tinserted_by as string,\n\t\trob_section_type_code as string,\n\t\tlast_updated_by as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\trob_ceding_company_code,\n\t\trob_section_name,\n\t\trob_section_type_desc,\n\t\trob_cash_index,\n\t\trob_ceding_comp_country_code,\n\t\trob_ceding_comp_country_desc,\n\t\trob_total_index,\n\t\trob_reinstatement_rate,\n\t\trob_ceding_company_name,\n\t\trob_reinstatement_counts,\n\t\trob_warranty_days,\n\t\trob_rating_method,\n\t\trob_section_type_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimRiskObjectInsurance"
		}
	}
}