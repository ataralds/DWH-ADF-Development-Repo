{
	"name": "m_pre_dim_risk_object_pa_SQL",
	"properties": {
		"description": "Start testing how to make the risk_object. Starting on PA",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "tcross"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "peatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "ica"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "iuvtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "iuwtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "ipatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "agatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "inatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "obbtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "ingtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "obatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "hlpexhangerateusd"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "staparisclaimlead"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "ccotablelkp"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "paa"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "stariskgroup"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "isa"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_risk_object_main",
						"type": "DatasetReference"
					},
					"name": "PreDimRiskObjectPa"
				}
			],
			"transformations": [
				{
					"name": "Coverage",
					"description": "Filter codetype 122 and Source system Paris"
				},
				{
					"name": "xrefCoverage"
				},
				{
					"name": "AgreementType",
					"description": "code_type_id == 113"
				},
				{
					"name": "xrefAgreementType"
				},
				{
					"name": "BusinessArea",
					"description": " code_type_id== 106"
				},
				{
					"name": "xrefBusinessArea"
				},
				{
					"name": "Currency",
					"description": "code_type_id ==124"
				},
				{
					"name": "xrefCurrency"
				},
				{
					"name": "VesselSubType",
					"description": "source_system== 'PARIS' && code_type_id == 45"
				},
				{
					"name": "xrefVesselSubType",
					"description": "With columns 'source_code_key_sub_type, target_code_sub_type, target_description_sub_type'"
				},
				{
					"name": "icatable1"
				},
				{
					"name": "IcaIuv"
				},
				{
					"name": "IcaIuw"
				},
				{
					"name": "IuwPea"
				},
				{
					"name": "Expression"
				},
				{
					"name": "AggregateIcaicaid"
				},
				{
					"name": "icastdateExchange",
					"description": "Creating Icastdate_exchange"
				},
				{
					"name": "AggregateEtcBroker",
					"description": "Max(ingetcbroker)"
				},
				{
					"name": "Expression2",
					"description": "Creating rob -re,ret,co og cut - line"
				},
				{
					"name": "lineinfo"
				},
				{
					"name": "icaoba"
				},
				{
					"name": "obaobb"
				},
				{
					"name": "icaendateobb"
				},
				{
					"name": "icaina"
				},
				{
					"name": "icaaga"
				},
				{
					"name": "inaicacurrcodexrefCurr"
				},
				{
					"name": "currexhancerate"
				},
				{
					"name": "ExchangeRateToUsd"
				},
				{
					"name": "icaLineInfo"
				},
				{
					"name": "inaing"
				},
				{
					"name": "ConReportingDate"
				},
				{
					"name": "Expression0"
				},
				{
					"name": "ClaimLead"
				},
				{
					"name": "ccotable"
				},
				{
					"name": "Expression5"
				},
				{
					"name": "Constant"
				},
				{
					"name": "Paatable"
				},
				{
					"name": "lkppaatable"
				},
				{
					"name": "paatable1"
				},
				{
					"name": "lkpPaafunct"
				},
				{
					"name": "ExpressionRob"
				},
				{
					"name": "currExchangerate"
				},
				{
					"name": "ExchangeRateToUsd1"
				},
				{
					"name": "agaBusArea"
				},
				{
					"name": "agaAgtype"
				},
				{
					"name": "inaxrefcov"
				},
				{
					"name": "Expression4"
				},
				{
					"name": "LkpStaRiskGroup"
				},
				{
					"name": "Expression8"
				},
				{
					"name": "ConstanttoLkp"
				},
				{
					"name": "xrefCapital"
				},
				{
					"name": "xrefCapitalBranch"
				},
				{
					"name": "xrefBusinessType"
				},
				{
					"name": "LkpBusType"
				},
				{
					"name": "lkpCapitalbranch"
				},
				{
					"name": "lkpCapital"
				},
				{
					"name": "PreDimRiskObjectMain"
				},
				{
					"name": "lkpReins"
				},
				{
					"name": "xrefReins"
				},
				{
					"name": "xrefLayer"
				},
				{
					"name": "Expression9"
				},
				{
					"name": "lkpLayer"
				},
				{
					"name": "isatable"
				},
				{
					"name": "isatable2"
				},
				{
					"name": "agaisa"
				},
				{
					"name": "selectcolumns"
				}
			],
			"script": "source(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference',\n\tformat: 'query') ~> tcross\nsource(output(\n\t\tpeapeaid as long,\n\t\tpeaccode as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select peapeaid,peaccode from dwh_stage.p_peatable',\n\tformat: 'query') ~> peatable\nsource(output(\n\t\ticaobno as integer,\n\t\ticastdate as date,\n\t\ticaendate as date,\n\t\ticatotamt as long,\n\t\ticaourshare as decimal(28,10),\n\t\ticacadate as date,\n\t\ticaicaid as string,\n\t\ticachdate as date,\n\t\ticainaid as string,\n\t\ticaagaid as string,\n\t\ticapmlcurr as string,\n\t\ticapmlamt as long,\n\t\ticaeoamt as long,\n\t\ticaprovst as integer,\n\t\ticastat3 as string,\n\t\ticaintrate as decimal(28,10),\n\t\ticaintosprem as decimal(28,10),\n\t\ticaintcurr as string,\n\t\ticacrdate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \ticaobno,\\n\t\ticastdate,\\n\t\ticaendate,\\n\t\ticatotamt,\\n\t\ticaourshare,\\n\t\ticacadate,\\n\t\ticaicaid,\\n\t\ticachdate,\\n\t\ticainaid,\\n\t\ticaagaid,\\n\t\ticapmlcurr,\\n\t\ticapmlamt,\\n\t\ticaeoamt,\\n\t\ticaprovst,\\n\t\ticastat3,\\n\t\ticaintrate,\\n\t\ticaintosprem,\\n\t\ticaintcurr,\\n\t\ticacrdate\\nfrom dwh_stage.p_icatable',\n\tformat: 'query') ~> ica\nsource(output(\n\t\tiuvicaid as string,\n\t\tiuviuvid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \tiuvicaid,\\n\t\tiuviuvid \\nfrom dwh_stage.p_iuvtable\\nwhere iuvverstat = \\'A\\'',\n\tformat: 'query') ~> iuvtable\nsource(output(\n\t\tiuwiuvid as string,\n\t\tiuwpartisip as long,\n\t\tiuwoutbusntyp as integer,\n\t\tiuwshare as decimal(28,10)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select iuwiuvid,\\n\t\tiuwpartisip,\\n\t\tiuwoutbusntyp,\\n\t\tiuwshare\\nfrom dwh_stage.p_iuwtable',\n\tformat: 'query') ~> iuwtable\nsource(output(\n\t\tipaicaid as string,\n\t\tiparate as decimal(28,10),\n\t\tipaiuddgt as decimal(28,10),\n\t\tipairatecrew as decimal(28,10)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select ipaicaid,\\n\t\tiparate,\\n\t\tipaiuddgt = ipaiusdgt,\\n\t\tipairatecrew\\nfrom dwh_stage.p_ipatable\\nwhere ipapcode in ( \\'O\\', \\'P\\' ) and ipapremn3= 1',\n\tformat: 'query') ~> ipatable\nsource(output(\n\t\tagaagaid as string,\n\t\tagastdate as date,\n\t\tagabusnsec as integer,\n\t\tagabusndiv as integer,\n\t\tagabusncla as integer,\n\t\tagastat2 as string,\n\t\tagabusnregion as integer,\n\t\tagabusnbranch as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select agaagaid,\\n\t\tagastdate,\\n\t\tagabusnsec,\\n\t\tagabusndiv,\\n\t\tagabusncla,\\n\t\tagastat2,\\n\t\tagabusnregion,\\n\t\tagabusnbranch\\nfrom dwh_stage.p_agatable',\n\tformat: 'query') ~> agatable\nsource(output(\n\t\tinacurr as string,\n\t\tinabusntyp as integer,\n\t\tinaclmlead as long,\n\t\tinapiffotype as integer,\n\t\tinapirdctype as integer,\n\t\tinaintrst as string,\n\t\tinacondco as short,\n\t\tinabusnsubcla as integer,\n\t\tinaisaid as string,\n\t\tinawarrenty as short,\n\t\tinareinynsw as string,\n\t\tinareinnoof as integer,\n\t\tinaretyp as integer,\n\t\tinareinshare as decimal(28,10),\n\t\tinapayer as long,\n\t\tinamutual as string,\n\t\tinainaid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \tinacurr,\\n\t\tinabusntyp,\\n\t\tinaclmlead,\\n\t\tinapiffotype,\\n\t\tinapirdctype,\\n\t\tinaintrst,\\n\t\tinacondco,\\n\t\tinabusnsubcla,\\n\t\tinaisaid,\\n\t\tinawarrenty,\\n\t\tinareinynsw,\\n\t\tinareinnoof,\\n\t\tinaretyp,\\n\t\tinareinshare,\\n\t\tinapayer,\\n\t\tinamutual,\\n\t\tinainaid\\nfrom dwh_stage.p_inatable',\n\tformat: 'query') ~> inatable\nsource(output(\n\t\tobbobno as integer,\n\t\tobbstdate as date,\n\t\tobbendate as date,\n\t\tobbcefoty as string,\n\t\tobbgrt as integer,\n\t\tobbname as string,\n\t\tobbclass as string,\n\t\tobbbuiltyear as short,\n\t\tobbdwt as integer,\n\t\tobbformt as integer,\n\t\tobbadr1 as string,\n\t\tobbsocity as string,\n\t\tobbnoofpax as integer,\n\t\tobbvesisolan as string,\n\t\tobbportunlid as string,\n\t\tobbvescod as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'Select obbobno,\\n\t\tobbstdate,\\n\t\tobbendate,\\n\t\tobbcefoty,\\n\t\tobbgrt,\\n\t\tobbname,\\n\t\tobbclass,\\n\t\tobbbuiltyear,\\n\t\tobbdwt,\\n\t\tobbformt,\\n\t\tobbadr1,\\n\t\tobbsocity,\\n\t\tobbnoofpax,\\n\t\tobbvesisolan,\\n\t\tobbportunlid,\\n\t\tobbvescod\\nfrom dwh_stage.p_obbtable',\n\tformat: 'query') ~> obbtable\nsource(output(\n\t\tinginaid as string,\n\t\tingetcbroker as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select inginaid,\\ningetcbroker from dwh_stage.p_ingtable',\n\tformat: 'query') ~> ingtable\nsource(output(\n\t\tobaobno as integer,\n\t\tobaimono as integer,\n\t\tobacallno as string,\n\t\tobaorgbui as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select \tobaobno,\\n\t\tobaimono,\\n\t\tobacallno,\\n\t\tobaorgbui\\nfrom dwh_stage.p_obatable',\n\tformat: 'query') ~> obatable\nsource(output(\n\t\texchange_rate as decimal(28,10),\n\t\tfrom_currency_id as long,\n\t\tfrom_currency_code as string,\n\t\tto_currency_id as long,\n\t\texchange_to_date as date,\n\t\tto_currency_code as string,\n\t\texchange_from_date as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.hlp_exchange_rate_to_usd',\n\tformat: 'query') ~> hlpexhangerateusd\nsource(output(\n\t\tpeapeaid as long,\n\t\tname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.sta_paris_claim_lead',\n\tformat: 'query') ~> staparisclaimlead\nsource(output(\n\t\tccomdescr as string,\n\t\tccocondco as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select ccomdescr, ccocondco from dwh_stage.p_ccotable',\n\tformat: 'query') ~> ccotablelkp\nsource(output(\n\t\tpaacname as string,\n\t\tpaapeaid as long,\n\t\tpaafunct as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select paacname,\\n\t\tpaapeaid,\\n\t\tpaafunct from dwh_stage.p_paatable\\n',\n\tformat: 'query') ~> paa\nsource(output(\n\t\tinserted_date as date,\n\t\tupdated_date as date,\n\t\trisk_group_sort as long,\n\t\tcoverage_code as string,\n\t\tcoverage_desc as string,\n\t\trisk_group_code as string,\n\t\tsegment_code as string,\n\t\tagreement_type as string,\n\t\tbusiness_area as string,\n\t\treinsurance_pgm_code as string,\n\t\trisk_group_desc as string,\n\t\tpk_risk_group as long,\n\t\treinsurance_pgm_desc as string,\n\t\tsegment_desc as string,\n\t\tmutual_fixed as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.sta_risk_group',\n\tformat: 'query') ~> stariskgroup\nsource(output(\n\t\tisaisaid as string,\n\t\tisaagaid as string,\n\t\tisaseccode as string,\n\t\tisalayertype as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select isaisaid,isaagaid,isaseccode,isalayertype\\nfrom dwh_stage.p_isatable',\n\tformat: 'query') ~> isa\ntcross filter(source_system == 'PARIS' && \ncode_type_id== 122) ~> Coverage\nCoverage select(mapColumn(\n\t\teach(match(name=='target_code'||name=='source_code_key'),\n\t\t\t$$+'_cov' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefCoverage\ntcross filter(source_system == 'PARIS' && \ncode_type_id == 113) ~> AgreementType\nAgreementType select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_agt' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefAgreementType\ntcross filter(source_system=='PARIS' && \n code_type_id== 106) ~> BusinessArea\nBusinessArea select(mapColumn(\n\t\teach(match(name=='target_code'||name=='source_code_key'),\n\t\t\t$$+'_bua' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefBusinessArea\ntcross filter(source_system =='PARIS' &&  code_type_id  ==124) ~> Currency\nCurrency select(mapColumn(\n\t\teach(match(name=='target_code'||name=='source_code_key'),\n\t\t\t$$+'_curr' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefCurrency\ntcross filter(source_system== 'PARIS'  \n&& code_type_id  == 45) ~> VesselSubType\nVesselSubType select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_sub_type' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefVesselSubType\nica select(mapColumn(\n\t\ticaicaid,\n\t\ticaourshare\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> icatable1\nicatable1, iuvtable join(icaicaid == iuvicaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> IcaIuv\nIcaIuv, iuwtable join(iuviuvid == iuwiuvid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> IcaIuw\nIcaIuw, peatable join(iuwpartisip == peapeaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> IuwPea\nIuwPea derive(own_share = case(peaccode == 91,\n    iifNull( iuwshare  ,0), toDecimal(0)),\n\t\tcut_share = case(peaccode  == 92,\niifNull( iuwshare  ,0) \n,toDecimal(0)),\n\t\tco_share = case(peaccode !=91 ||peaccode != 92 ,case(iuwoutbusntyp == 2, iifNull(iuwshare, 0)),toDecimal(0)),\n\t\tre_share = case(peaccode !=91 ||peaccode != 92 ,case(iuwoutbusntyp == 3, iifNull(iuwshare, 0)))) ~> Expression\nExpression aggregate(groupBy(icaicaid),\n\tret_share = sum(own_share),\n\t\tre_share = sum(re_share),\n\t\tco_share = sum(co_share),\n\t\tcut_share = sum(cut_share),\n\t\ticaourshare = max(icaourshare)) ~> AggregateIcaicaid\nica derive(icastdate_exchange = case(icastdate  > currentDate(),currentDate(),\r\ncase(icastdate < (toDate('01011978','dd/MM/yyyy')),toDate('01011978','dd/MM/yyyy'),icastdate))\r\n\r\n) ~> icastdateExchange\ningtable aggregate(groupBy(inginaid),\n\tingetcbroker = max(ingetcbroker)) ~> AggregateEtcBroker\nAggregateIcaicaid derive(rob_re_line = coalesce((re_share  * icaourshare / 100), 0),\n\t\trob_ret_line = coalesce(( ret_share   *  icaourshare / 100), 0),\n\t\trob_co_line = coalesce((co_share * icaourshare/ 100),0),\n\t\trob_cut_line = coalesce((cut_share * icaourshare/ 100),0)) ~> Expression2\nExpression2 select(mapColumn(\n\t\ticaicaid,\n\t\trob_re_line,\n\t\trob_ret_line,\n\t\trob_co_line,\n\t\trob_cut_line\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lineinfo\nicastdateExchange, obatable join(icaobno == obaobno,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> icaoba\nicaoba, obbtable join(obaobno == obbobno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> obaobb\nobaobb filter((coalesce(icaendate,currentTimestamp()) > coalesce(obbstdate, addDays(currentTimestamp(), -36500))) &&\r\n(coalesce(icaendate,currentTimestamp()) < coalesce(obbendate, addDays(currentTimestamp(), 36500)))) ~> icaendateobb\nicaendateobb, inatable join(icainaid == inainaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> icaina\nicaina, agatable join(icaagaid == agaagaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> icaaga\nicaaga, xrefCurrency join(case(inaintrst== '80', coalesce( trim(icapmlcurr) ,'USD'), inacurr) == source_code_key_curr,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inaicacurrcodexrefCurr\ncurrExchangerate, ExchangeRateToUsd join(icastdate_exchange == ExchangeRateToUsd@exchange_from_date,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> currexhancerate\nhlpexhangerateusd select(mapColumn(\n\t\tfrom_currency_id,\n\t\texchange_from_date,\n\t\texchange_rate,\n\t\texchange_to_date,\n\t\tfrom_currency_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ExchangeRateToUsd\ncurrexhancerate, lineinfo join(ica@icaicaid == lineinfo@icaicaid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> icaLineInfo\ninaxrefcov, AggregateEtcBroker join(inainaid == inginaid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> inaing\nselectcolumns derive(reporting_date = currentTimestamp()) ~> ConReportingDate\nConReportingDate derive(on_risk_ind = case(agabusndiv == 3 && icaprovst > 3,'N',\r\ncase(trim(icastat3) == 'C' || trim(icastat3)== 'L' || trim(icastat3)== 'S','N',\r\ncase(greaterOrEqual(reporting_date,toTimestamp(icastdate)) && lesserOrEqual(reporting_date,toTimestamp(icastdate))&& \r\ntrim(agastat2)=='A','Y','N'))),\n\t\trob_status = case(agabusndiv == 3 && icaprovst > 3,'C',\r\ncase(trim(icastat3) == 'C' || trim(icastat3)== 'L' || trim(icastat3)== 'S'|| trim(icastat3)== 'R','C',\r\ncase(agastat2=='A','A','C')))) ~> Expression0\nExpression0, staparisclaimlead lookup(inaclmlead == peapeaid,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> ClaimLead\nClaimLead, ccotablelkp lookup(inacondco == ccocondco,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> ccotable\nccotable derive(rob_condition_code = toDecimal(case(iifNull(ccocondco) == toDecimal(true()),'N/A' ,toString(ccocondco))),\n\t\tclaimlead_indicator = case(isNull(peapeaid),'N','Y')) ~> Expression5\nExpression5 derive(small_craf_ind = '0',\n\t\tpaafunct = 0) ~> Constant\nConstant, lkppaatable lookup(Constant@paafunct == lkppaatable@paafunct\n\t&& inapayer == paapeaid,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Paatable\npaa select(mapColumn(\n\t\tpaacname,\n\t\tpaapeaid,\n\t\tpaafunct\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lkppaatable\npaa select(mapColumn(\n\t\tpaafunct_1 = paafunct,\n\t\tpaapeaid_1 = paapeaid,\n\t\tpaacname_1 = paacname\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> paatable1\nPaatable, paatable1 lookup(Constant@paafunct == paafunct_1\n\t&& inaclmlead == paapeaid_1,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpPaafunct\nlkpPaafunct derive(rob_date_end = case(icacadate < icaendate,icacadate,icaendate),\n\t\trob_removed_ind = 'N',\n\t\trob_count_days = (icachdate) - add(icastdate,1),\n\t\trob_sum_insured_os_usd = case(inaintrst=='PIO',toDecimal(null()),case(inaintrst =='80'/* small craft*/,\r\ntoDecimal(coalesce(( (icapmlamt*(icaourshare-rob_co_line)/100)/exchange_rate),0)) , \r\ntoDecimal(coalesce(( (icatotamt*(icaourshare-rob_co_line)/100)/exchange_rate),0) ))),\n\t\texposure = case(inaintrst=='PIO',toDecimal(null()),case(inaintrst =='80'/* small craft*/,\r\ntoDecimal(coalesce(( (icapmlamt*(icaourshare-rob_co_line)/100)/EXCHANGE_RATE),0)) , \r\ntoDecimal(coalesce(( (icatotamt*(icaourshare-rob_co_line)/100)/EXCHANGE_RATE),0) ))),\n\t\trob_sum_insured_os_org = case(inaintrst=='PIO',toDecimal(null()),case(inaintrst =='80'/* small craft*/,\r\ntoDecimal(coalesce( (icapmlamt*(icaourshare-rob_co_line)/100),0)), \r\ntoDecimal(coalesce( (icatotamt*(icaourshare-rob_co_line)/100),0) ))),\n\t\trob_sum_insured_os_curr = case(inaintrst =='80'/* small craft*/,iifNull(trim(icapmlcurr,'USD')), (inacurr)),\n\t\trob_mutual_fixed = case(inamutual =='Y', 'Mutual' ,'Fixed'),\n\t\trob_etc_broker_ind = iifNull(max_etc_broker_ind,'N'),\n\t\trob_ffo = case(inapiffotype == 4, '4/4' ,\r\ncase(inapiffotype == 3, '3/4' ,\r\ncase(inapiffotype == 2, '2/4' ,\r\ncase(inapiffotype == 1, '1/4' ,\r\ncase(inapiffotype == 5, 'No' ,\r\n'N/A'))))),\n\t\trob_rdc = case(inapirdctype == 4, '4/4' ,\r\ncase(inapirdctype == 3, '3/4' ,\r\ncase(inapirdctype == 2, '2/4' ,\r\ncase(inapirdctype == 1, '1/4' ,\r\ncase(inapirdctype == 5, 'No' ,\r\n'N/A'))))),\n\t\trob_non_vessel_ind = case(trim(obbvescod)=='900'||trim(obbvescod)=='999' ||trim(obbvescod)=='910' && iifNull(obaimono,0)==0, 'Y','N')) ~> ExpressionRob\ninaicacurrcodexrefCurr, ExchangeRateToUsd1 join(target_code_curr == from_currency_code,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> currExchangerate\nhlpexhangerateusd select(mapColumn(\n\t\tfrom_currency_id,\n\t\texchange_from_date,\n\t\texchange_rate,\n\t\texchange_to_date,\n\t\tfrom_currency_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ExchangeRateToUsd1\nicaLineInfo, xrefBusinessArea join(case(substring(toString(agabusndiv),1,1)== toString(4) ,concat(toString(agabusndiv), '-', (inamutual)),toString(agabusndiv)) == source_code_key_bua,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> agaBusArea\nagaBusArea, xrefAgreementType join(toString(agabusndiv) == source_code_key_agt,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> agaAgtype\nagaAgtype, xrefCoverage join(inaintrst == source_code_key_cov,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> inaxrefcov\nExpressionRob derive(business_area = case(in(['PF','PM'],target_code_bua), 'PI' , target_code_bua),\n\t\tagreement_type = target_code_agt,\n\t\tcoverage_code = target_code_cov,\n\t\tmutual_fixed = rob_mutual_fixed,\n\t\tagreement_type_desc = target_description_agt) ~> Expression4\nExpression4, stariskgroup lookup(Expression4@business_area == stariskgroup@business_area\n\t&& Expression4@agreement_type == stariskgroup@agreement_type\n\t&& Expression4@coverage_code == stariskgroup@coverage_code\n\t&& Expression4@mutual_fixed == stariskgroup@mutual_fixed,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpStaRiskGroup\nLkpStaRiskGroup derive(our_line = coalesce(toDecimal(icaourshare),toDecimal(0)) -coalesce(toDecimal(rob_co_line),toDecimal(0)),\n\t\tsmall_craf_ind_ex = case(segment_code == 'SMC', 'Y', 'N'),\n\t\tcapital_branch_key = concat(toString(agabusnbranch),'-',toString(agabusnregion))) ~> Expression8\nExpression8 derive(source_system = 'PARIS',\n\t\tcode_type_id_117_bus_type = 117,\n\t\tcode_type_id_464_capital = 464,\n\t\tcode_type_id_116_capital = 116,\n\t\tpoolable_ind = 'N') ~> ConstanttoLkp\ntcross select(mapColumn(\n\t\teach(match(name=='code_type_id'||name=='source_code_key'||name=='target_code'||name=='target_description'||name=='source_system'),\n\t\t\t$$+'_capital' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefCapital\ntcross select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='code2'||name=='source_system'||name=='source_code_key'||name=='code_type_id'),\n\t\t\t$$+'_capital_branch' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefCapitalBranch\ntcross select(mapColumn(\n\t\teach(match(name=='target_description'||name=='source_code_key'||name=='source_system'||name=='code_type_id'),\n\t\t\t$$+'_business_type' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefBusinessType\nConstanttoLkp, xrefBusinessType lookup(inabusntyp == toDecimal(source_code_key_business_type)\n\t&& source_system == source_system_business_type\n\t&& code_type_id_117_bus_type == code_type_id_business_type,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpBusType\nLkpBusType, xrefCapitalBranch lookup(source_system == source_system_capital_branch\n\t&& capital_branch_key == source_code_key_capital_branch\n\t&& code_type_id_464_capital == code_type_id_capital_branch,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpCapitalbranch\nlkpCapitalbranch, xrefCapital lookup(code_type_id_116_capital == code_type_id_capital\n\t&& source_system == source_system_capital\n\t&& agabusnbranch == toDecimal(source_code_key_capital),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpCapital\nlkpLayer select(mapColumn(\n\t\trob_business_type = target_description_business_type,\n\t\trob_capital = target_description_capital,\n\t\trob_capital_code = target_code_capital,\n\t\trob_captial_branch_code = target_code_capital_branch,\n\t\trob_capital_branch_long_desc = target_description_capital_branch,\n\t\trob_capital_branch_short_desc = code2_capital_branch,\n\t\trob_claims_lead_ind = claimlead_indicator,\n\t\trob_claims_leader = paacname_1,\n\t\trob_club_retention = icaeoamt,\n\t\trob_co_line,\n\t\trob_condition_code,\n\t\trob_condition_desc = ccomdescr,\n\t\trob_count_risk_days = rob_count_days,\n\t\trob_currency_code = inacurr,\n\t\trob_cut_line,\n\t\trob_date_end,\n\t\trob_date_orig_end = icaendate,\n\t\trob_date_user_removed = icacadate,\n\t\trob_date_start = icastdate,\n\t\trob_epi_curr = icaintcurr,\n\t\trob_epi_prem = icaintosprem,\n\t\trob_epi_rate = icaintrate,\n\t\trob_etc_broker_ind,\n\t\trob_exposure = exposure,\n\t\trob_ffo,\n\t\trob_inapayer = paapeaid,\n\t\trob_inapayer_name = paacname,\n\t\trob_mutual_fixed = inamutual,\n\t\trob_non_vessel_indicator = rob_non_vessel_ind,\n\t\trob_on_risk_ind = on_risk_ind,\n\t\trob_original_rate = icapmlamt,\n\t\trob_our_line = our_line,\n\t\trob_poolable_ind = poolable_ind,\n\t\trob_rdc,\n\t\trob_re_line,\n\t\trob_reinsurance_pgm_code = reinsurance_pgm_code,\n\t\trob_reinsurance_pgm_desc = reinsurance_pgm_desc,\n\t\trob_reinsurance_type = target_description_reins,\n\t\trob_reinsurance_type_code = target_code_reins,\n\t\trob_removed_ind,\n\t\trob_ret_line,\n\t\trob_risk_group_code = risk_group_code,\n\t\trob_risk_group_desc = risk_group_desc,\n\t\trob_risk_group_sort = risk_group_sort,\n\t\trob_segment_code = segment_code,\n\t\trob_segment_desc = segment_desc,\n\t\trob_small_craf_ind = small_craf_ind,\n\t\trob_status,\n\t\trob_sum_insured_os_usd,\n\t\trob_sum_insured_os_org,\n\t\trob_sum_insured_os_curr,\n\t\trob_layer_code = target_code_layer,\n\t\trob_layer_desc = target_description_layer\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimRiskObjectMain\nExpression9, xrefReins lookup(source_system_layer == source_system_reins\n\t&& toString(insurance_type_source) == source_code_key_reins\n\t&& code_type_id_inaretyp == code_type_id_reins,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpReins\ntcross select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_system'||name=='source_code_key'||name=='code_type_id'),\n\t\t\t$$+'_reins' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefReins\ntcross select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_system'||name=='source_code_key'||name=='code_type_id'),\n\t\t\t$$+'_layer' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefLayer\nlkpCapital derive(layer_source = toDecimal(isalayertype),\n\t\tinsurance_type_source = toDecimal(inaretyp),\n\t\tsource_system_layer = 'Paris',\n\t\tcode_type_id_layer = 123,\n\t\tcode_type_id_inaretyp = 794) ~> Expression9\nlkpReins, xrefLayer lookup(Expression9@source_system_layer == xrefLayer@source_system_layer\n\t&& toString(layer_source) == source_code_key_layer\n\t&& Expression9@code_type_id_layer == xrefLayer@code_type_id_layer,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpLayer\nisa select(mapColumn(\n\t\tisaisaid,\n\t\tisaagaid,\n\t\tisaseccode,\n\t\tisalayertype\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> isatable\nisa select(mapColumn(\n\t\tisaisaid,\n\t\tisaagaid,\n\t\tisaseccode,\n\t\tisalayertype\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> isatable2\ninaing, isatable join(agaagaid == isaagaid\n\t&& inaisaid == isaisaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> agaisa\nagaisa select(mapColumn(\n\t\ticastdate,\n\t\ticaendate,\n\t\ticatotamt,\n\t\ticaourshare,\n\t\ticacadate,\n\t\ticaicaid = ica@icaicaid,\n\t\ticachdate,\n\t\ticapmlcurr,\n\t\ticapmlamt,\n\t\ticaeoamt,\n\t\ticaprovst,\n\t\ticastat3,\n\t\ticaintrate,\n\t\ticaintosprem,\n\t\ticaintcurr,\n\t\tobaobno,\n\t\tobaimono,\n\t\tobacallno,\n\t\tobaorgbui,\n\t\tobbgrt,\n\t\tobbname,\n\t\tobbdwt,\n\t\tobbvesisolan,\n\t\tobbsocity,\n\t\tobbnoofpax,\n\t\tobbportunlid,\n\t\tobbvescod,\n\t\tinacurr,\n\t\tinabusntyp,\n\t\tinaclmlead,\n\t\tinapiffotype,\n\t\tinapirdctype,\n\t\tinaintrst,\n\t\tinacondco,\n\t\tinabusnsubcla,\n\t\tinawarrenty,\n\t\tinareinnoof,\n\t\tinaretyp,\n\t\tinareinshare,\n\t\tinapayer,\n\t\tinamutual,\n\t\tagabusndiv,\n\t\tagastat2,\n\t\tagabusnregion,\n\t\tagabusnbranch,\n\t\tsource_code_key_curr,\n\t\ttarget_code_curr,\n\t\tFROM_CURRENCY_ID_1,\n\t\tEXCHANGE_FROM_DATE_1,\n\t\tEXCHANGE_RATE_1,\n\t\tEXCHANGE_TO_DATE_1,\n\t\tFROM_CURRENCY_CODE_1,\n\t\tEXCHANGE_RATE,\n\t\ticaicaid = lineinfo@icaicaid,\n\t\trob_re_line,\n\t\trob_ret_line,\n\t\trob_co_line,\n\t\trob_cut_line,\n\t\ttarget_code_bua,\n\t\ttarget_code_agt,\n\t\ttarget_description_agt,\n\t\ttarget_code_cov,\n\t\tmax_etc_broker_ind = ingetcbroker,\n\t\tisaseccode,\n\t\tisalayertype\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectcolumns\nPreDimRiskObjectMain sink(input(\n\t\tpk_key as string,\n\t\treg_code as string,\n\t\treg_description as string,\n\t\tar1_code as string,\n\t\tar1_description as string,\n\t\tar2_code as string,\n\t\tar2_description as string,\n\t\tlast_updated_by as string,\n\t\tcon_2ltr_code as string,\n\t\tcon_country_name as string,\n\t\tcon_oecd as string,\n\t\tcon_currency_code as string,\n\t\tcon_eu as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['pre_dim_risk_object_main.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimRiskObjectPa"
		}
	}
}