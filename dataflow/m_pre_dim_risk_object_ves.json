{
	"name": "m_pre_dim_risk_object_ves",
	"properties": {
		"description": "Start testing how to make the risk_object. Starting on PA",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "tcross"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "ica"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "aga"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "obb"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "oba"
				},
				{
					"dataset": {
						"referenceName": "Oltp05",
						"type": "DatasetReference"
					},
					"name": "stariskgroup"
				},
				{
					"dataset": {
						"referenceName": "Oltp05",
						"type": "DatasetReference"
					},
					"name": "lloydssourcevessel"
				},
				{
					"name": "vesseltype"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "unl"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "AgreementType",
					"description": "code_type_id == 113"
				},
				{
					"name": "xrefAgreementType"
				},
				{
					"name": "BusinessArea",
					"description": " code_type_id== 106"
				},
				{
					"name": "xrefBusinessArea"
				},
				{
					"name": "VesselSubType",
					"description": "source_system== 'PARIS' && code_type_id == 45"
				},
				{
					"name": "xrefVesselSubType",
					"description": "With columns 'source_code_key_sub_type, target_code_sub_type, target_description_sub_type'"
				},
				{
					"name": "icastdateExchange",
					"description": "Creating Icastdate_exchange"
				},
				{
					"name": "Obbtable"
				},
				{
					"name": "Icatable"
				},
				{
					"name": "obatable"
				},
				{
					"name": "agatable"
				},
				{
					"name": "obaobb"
				},
				{
					"name": "icaendateobb"
				},
				{
					"name": "icaaga"
				},
				{
					"name": "ExpressionRob"
				},
				{
					"name": "agaAgtype"
				},
				{
					"name": "ExAgreement4"
				},
				{
					"name": "LkpStaRiskGroup"
				},
				{
					"name": "obbsubtype"
				},
				{
					"name": "ExpressionVslgrp"
				},
				{
					"name": "LkpLoydsVessel"
				},
				{
					"name": "ExpressionBuiltYearCalc"
				},
				{
					"name": "ExpVesselAge"
				},
				{
					"name": "lloydsvessel"
				},
				{
					"name": "icaoba"
				},
				{
					"name": "subtypevesseltype"
				},
				{
					"name": "dimvesseltype"
				},
				{
					"name": "tmp"
				},
				{
					"name": "xrefFlag"
				},
				{
					"name": "xrefclass"
				},
				{
					"name": "flag"
				},
				{
					"name": "constant"
				},
				{
					"name": "class"
				},
				{
					"name": "unltable"
				},
				{
					"name": "lkpunl"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference',\n\tformat: 'query') ~> tcross\nsource(output(\n\t\ticaadmfeerate as decimal(38,18),\n\t\ticaagaid as string,\n\t\ticaaggregate as decimal(38,18),\n\t\ticaamtcod as string,\n\t\ticaamtlevel as decimal(38,18),\n\t\ticaavrperspre as decimal(38,18),\n\t\ticac1000prem as decimal(38,18),\n\t\ticacadate as timestamp,\n\t\ticacantxt as string,\n\t\ticacasign as string,\n\t\ticachdate as timestamp,\n\t\ticachhour as decimal(38,18),\n\t\ticacorrty as decimal(38,18),\n\t\ticacrdate as timestamp,\n\t\ticacrobbid as string,\n\t\ticacrsign as string,\n\t\ticacslynsw as string,\n\t\ticadayamt as decimal(38,18),\n\t\ticadaysinall as decimal(38,18),\n\t\ticadeclaredamt as decimal(38,18),\n\t\ticadeclaredamtlocal as decimal(38,18),\n\t\ticadednote as string,\n\t\ticadeliverydate as timestamp,\n\t\ticaendate as timestamp,\n\t\ticaenhour as decimal(38,18),\n\t\ticaeoamt as decimal(38,18),\n\t\ticaeoamtcod as string,\n\t\ticaexhausted as decimal(38,18),\n\t\ticaexpendate as timestamp,\n\t\ticaexpenhour as decimal(38,18),\n\t\ticaexptext as string,\n\t\ticaextndisc as decimal(38,18),\n\t\ticaextshare as decimal(38,18),\n\t\ticafixownrnote as string,\n\t\ticafixownrynsw as string,\n\t\ticagt as decimal(38,18),\n\t\ticaicaid as string,\n\t\ticainaid as string,\n\t\ticaindate as timestamp,\n\t\ticaint100prem as decimal(38,18),\n\t\ticaintcurr as string,\n\t\ticaintgrlag as decimal(38,18),\n\t\ticaintosprem as decimal(38,18),\n\t\ticaintrate as decimal(38,18),\n\t\ticaknvmark as string,\n\t\ticalaunchdate as timestamp,\n\t\ticalimldescr as string,\n\t\ticaludate as timestamp,\n\t\ticalusign as string,\n\t\ticamincurr as string,\n\t\ticaminpre as decimal(38,18),\n\t\ticanoofpersons as decimal(38,18),\n\t\ticanote as string,\n\t\ticaobno as decimal(38,18),\n\t\ticaoforder as decimal(38,18),\n\t\ticaosvolamt as decimal(38,18),\n\t\ticaourshare as decimal(38,18),\n\t\ticaowndisc as decimal(38,18),\n\t\ticaoyrno as decimal(38,18),\n\t\ticaoyrnote as string,\n\t\ticaoyrto as decimal(38,18),\n\t\ticapaymfreq as decimal(38,18),\n\t\ticapaymperc as decimal(38,18),\n\t\ticaperspre as decimal(38,18),\n\t\ticapmlamt as decimal(38,18),\n\t\ticapmlcurr as string,\n\t\ticapremgt as decimal(38,18),\n\t\ticaprevyadmfee as decimal(38,18),\n\t\ticaprevyinstad as decimal(38,18),\n\t\ticaprevynatpre as decimal(38,18),\n\t\ticaprevypre as decimal(38,18),\n\t\ticaprevyrate as decimal(38,18),\n\t\ticaprovst as decimal(38,18),\n\t\ticaprwdate as timestamp,\n\t\ticarinote as string,\n\t\ticariobjecttype as string,\n\t\ticasondisc as decimal(38,18),\n\t\ticastat3 as string,\n\t\ticastdate as timestamp,\n\t\ticasthour as decimal(38,18),\n\t\ticasufix2 as string,\n\t\ticat1000prem as decimal(38,18),\n\t\ticatlorat as decimal(38,18),\n\t\ticatotamt as decimal(38,18),\n\t\ticaunitamt as decimal(38,18),\n\t\ticaunitprem as decimal(38,18),\n\t\ticaunits as decimal(38,18),\n\t\ticauwaid as string,\n\t\ticauwkey as string,\n\t\ticauwtotamt as decimal(38,18),\n\t\ticawroforder as decimal(38,18),\n\t\ticawrshare as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> ica\nsource(output(\n\t\tagaadjsign as string,\n\t\tagaadmcode as string,\n\t\tagaagaid as string,\n\t\tagaagname as string,\n\t\tagaagno as decimal(38,18),\n\t\tagaagnorf as decimal(38,18),\n\t\tagaagtype as decimal(38,18),\n\t\tagaalgid as string,\n\t\tagaareacd as string,\n\t\tagaassetno as decimal(38,18),\n\t\tagaassetsubno as decimal(38,18),\n\t\tagaausign as string,\n\t\tagaautoconpol as string,\n\t\tagaavttrkeep as string,\n\t\tagaavttrnote as string,\n\t\tagaavttrpeaid as decimal(38,18),\n\t\tagaavttrpros as decimal(38,18),\n\t\tagaavttrstatus as string,\n\t\tagaavttrynsw as string,\n\t\tagabusnbranch as decimal(38,18),\n\t\tagabusncla as decimal(38,18),\n\t\tagabusndiv as decimal(38,18),\n\t\tagabusnregion as decimal(38,18),\n\t\tagabusnsec as decimal(38,18),\n\t\tagacantxt as string,\n\t\tagacashbefcovdate as timestamp,\n\t\tagacashbeforecover as string,\n\t\tagaccpid as string,\n\t\tagachartradeteam as string,\n\t\tagaclasstype as string,\n\t\tagaclmsign as string,\n\t\tagaclmuat as string,\n\t\tagaclosedate as timestamp,\n\t\tagaclosesign as string,\n\t\tagacloseynsw as string,\n\t\tagacomfacnote as string,\n\t\tagacomfacpeaid as decimal(38,18),\n\t\tagacomfacynsw as string,\n\t\tagacomp2 as decimal(38,18),\n\t\tagacompdisckeep as string,\n\t\tagacompdiscnote as string,\n\t\tagacompdiscpeaid as decimal(38,18),\n\t\tagacompdiscpros as decimal(38,18),\n\t\tagacompdiscynsw as string,\n\t\tagacomtarnote as string,\n\t\tagacomtarpeaid as decimal(38,18),\n\t\tagacomtarstknote as string,\n\t\tagacomtarstkpeaid as decimal(38,18),\n\t\tagacomtarstkynsw as string,\n\t\tagacomtarynsw as string,\n\t\tagaconcern as decimal(38,18),\n\t\tagaconnectsw as string,\n\t\tagaconsrnote as string,\n\t\tagaconsrynsw as string,\n\t\tagacontinsagaid as string,\n\t\tagacontinsagno as decimal(38,18),\n\t\tagacontinsynsw as string,\n\t\tagacrdate as timestamp,\n\t\tagacrsign as string,\n\t\tagacumul as string,\n\t\tagadatcan as timestamp,\n\t\tagadatest as timestamp,\n\t\tagadatora as timestamp,\n\t\tagadatore as timestamp,\n\t\tagadatpca as timestamp,\n\t\tagadecltyp as string,\n\t\tagadwbs as string,\n\t\tagaeldocynsw as string,\n\t\tagaelinvynsw as string,\n\t\tagaendate as timestamp,\n\t\tagaenhour as decimal(38,18),\n\t\tagaentrytype as string,\n\t\tagaeosign as string,\n\t\tagafileref as decimal(38,18),\n\t\tagafixprnote as string,\n\t\tagafixprpeaid as decimal(38,18),\n\t\tagafixprynsw as string,\n\t\tagafromcomp as decimal(38,18),\n\t\tagagday as decimal(38,18),\n\t\tagagen1keep as string,\n\t\tagagen1note as string,\n\t\tagagen1peaid as decimal(38,18),\n\t\tagagen1prov as decimal(38,18),\n\t\tagagen1ynsw as string,\n\t\tagagen2keep as string,\n\t\tagagen2note as string,\n\t\tagagen2peaid as decimal(38,18),\n\t\tagagen2prov as decimal(38,18),\n\t\tagagen2ynsw as string,\n\t\tagagen3keep as string,\n\t\tagagen3note as string,\n\t\tagagen3peaid as decimal(38,18),\n\t\tagagen3prov as decimal(38,18),\n\t\tagagen3ynsw as string,\n\t\tagagident as string,\n\t\tagagmonth as decimal(38,18),\n\t\tagagtype as string,\n\t\tagahealthdate as timestamp,\n\t\tagahealthynsw as string,\n\t\tagaincprovkeep as string,\n\t\tagaincprovnote as string,\n\t\tagaincprovpeaid as decimal(38,18),\n\t\tagaincprovpros as decimal(38,18),\n\t\tagaincprovynsw as string,\n\t\tagaincrebkeep as string,\n\t\tagaincrebnote as string,\n\t\tagaincrebpeaid as decimal(38,18),\n\t\tagaincrebpros as decimal(38,18),\n\t\tagaincrebynsw as string,\n\t\tagaindustrytxt as string,\n\t\tagainstti as string,\n\t\tagaintnote as string,\n\t\tagaisic as string,\n\t\tagaiyear as decimal(38,18),\n\t\tagaknvmark as string,\n\t\tagaktocred as decimal(38,18),\n\t\tagaktocust as decimal(38,18),\n\t\tagaktodeb as decimal(38,18),\n\t\tagaliabendate as timestamp,\n\t\tagalocpolissued as string,\n\t\tagalongname as string,\n\t\tagalostcode as string,\n\t\tagalosttxt35 as string,\n\t\tagaludate as timestamp,\n\t\tagalusign as string,\n\t\tagamaiper as decimal(38,18),\n\t\tagamgrpnote as string,\n\t\tagamgrpynsw as string,\n\t\tagamincurr as string,\n\t\tagaminpre as decimal(38,18),\n\t\taganoterm as decimal(38,18),\n\t\tagansalecom as decimal(38,18),\n\t\taganscomynsw as string,\n\t\taganumpers as decimal(38,18),\n\t\tagaoffice as decimal(38,18),\n\t\tagaoiltyp as decimal(38,18),\n\t\tagaopencover as string,\n\t\tagaordercode as string,\n\t\tagaordertxt35 as string,\n\t\tagaorgcrdate as timestamp,\n\t\tagaorgins as decimal(38,18),\n\t\tagaoxno as decimal(38,18),\n\t\tagaoxrefid as string,\n\t\tagaoyrno as decimal(38,18),\n\t\tagaoyrnote as string,\n\t\tagaoyrto as decimal(38,18),\n\t\tagapeoid as string,\n\t\tagapictype as string,\n\t\tagapwcode as decimal(38,18),\n\t\tagapwfrdate as timestamp,\n\t\tagaratcod as string,\n\t\tagaratemodel as decimal(38,18),\n\t\tagarefcod as string,\n\t\tagareftxt as string,\n\t\tagaremove as decimal(38,18),\n\t\tagarenbatchid as decimal(38,18),\n\t\tagarencod as decimal(38,18),\n\t\tagarentxt as string,\n\t\tagasalesdiv as decimal(38,18),\n\t\tagasetfreq as decimal(38,18),\n\t\tagasettldetprt as string,\n\t\tagashut as string,\n\t\tagasitid as string,\n\t\tagaskipinstadynsw as string,\n\t\tagasource as decimal(38,18),\n\t\tagastat1 as string,\n\t\tagastat2 as string,\n\t\tagastateareacd as string,\n\t\tagastdate as timestamp,\n\t\tagasthour as decimal(38,18),\n\t\tagaswo as string,\n\t\tagatocomp as decimal(38,18),\n\t\tagatrackit as string,\n\t\tagatrackit1 as string,\n\t\tagatrackit2 as string,\n\t\tagatrackit3 as string,\n\t\tagatreatas as string,\n\t\tagaturnover as decimal(38,18),\n\t\tagatzone as string,\n\t\tagauat as string,\n\t\tagaufafpynsw as string,\n\t\tagausage as string,\n\t\tagausecod as string,\n\t\tagauwsign as string,\n\t\tagawbs as string,\n\t\tagawbscust as string,\n\t\tagawntnocperiod as decimal(38,18),\n\t\tagawnttext35 as string,\n\t\tagawntynsw as string,\n\t\tagaxmednote as string,\n\t\tagaxmedpeaid as decimal(38,18),\n\t\tagaxmedynsw as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> aga\nsource(output(\n\t\tobbaccname as string,\n\t\tobbadr1 as string,\n\t\tobbadr2 as string,\n\t\tobbadr3 as string,\n\t\tobbadr4 as string,\n\t\tobbadr5 as string,\n\t\tobbareadescr as string,\n\t\tobbareafactorgroup as string,\n\t\tobbarmdgrdalways as string,\n\t\tobbaviatdescr as string,\n\t\tobbavproof as string,\n\t\tobbbnr as decimal(38,18),\n\t\tobbbonus as decimal(38,18),\n\t\tobbbreth as decimal(38,18),\n\t\tobbbuildfactor as decimal(38,18),\n\t\tobbbuiltmonth as decimal(38,18),\n\t\tobbbuiltyear as decimal(38,18),\n\t\tobbcagsubtyp as decimal(38,18),\n\t\tobbcapoty as decimal(38,18),\n\t\tobbcargodescr as string,\n\t\tobbcargotype as string,\n\t\tobbccbid as string,\n\t\tobbcefoen as string,\n\t\tobbcefofb as string,\n\t\tobbcefoty as string,\n\t\tobbcffid as string,\n\t\tobbclass as string,\n\t\tobbclass2 as string,\n\t\tobbcoordx as decimal(38,18),\n\t\tobbcoordy as decimal(38,18),\n\t\tobbcrdate as timestamp,\n\t\tobbcrsign as string,\n\t\tobbcrwisolan as string,\n\t\tobbcsvdate as timestamp,\n\t\tobbcsvtext as string,\n\t\tobbcumobno as decimal(38,18),\n\t\tobbcurr as string,\n\t\tobbdepth as decimal(38,18),\n\t\tobbdistrict as string,\n\t\tobbdwt as decimal(38,18),\n\t\tobbendate as timestamp,\n\t\tobbengfab as string,\n\t\tobbenginehp as string,\n\t\tobbengineyear as decimal(38,18),\n\t\tobbexname as string,\n\t\tobbfishlimit as string,\n\t\tobbfishsize as decimal(38,18),\n\t\tobbfishunit as string,\n\t\tobbfloor as decimal(38,18),\n\t\tobbfmark as string,\n\t\tobbformt as decimal(38,18),\n\t\tobbgeodescr as string,\n\t\tobbgeox as decimal(38,18),\n\t\tobbgeoy as decimal(38,18),\n\t\tobbgnr as decimal(38,18),\n\t\tobbgrpdescr as string,\n\t\tobbgrpfactorgroup as string,\n\t\tobbgrt as decimal(38,18),\n\t\tobbhinumber as string,\n\t\tobbhulltype as string,\n\t\tobbimpexp as decimal(38,18),\n\t\tobbinjurydescr as string,\n\t\tobbinstrument as decimal(38,18),\n\t\tobbinsynsw as string,\n\t\tobbismdate as timestamp,\n\t\tobbismsocity as string,\n\t\tobbkmavle as decimal(38,18),\n\t\tobbkmstan as decimal(38,18),\n\t\tobbkmyear as decimal(38,18),\n\t\tobbkmyrvalue as decimal(38,18),\n\t\tobbknowninjury as string,\n\t\tobbknvmark as string,\n\t\tobbkonst as string,\n\t\tobbkwh as decimal(38,18),\n\t\tobblandinggear as decimal(38,18),\n\t\tobblastvaldatebuildings as timestamp,\n\t\tobblastvaldateequipment as timestamp,\n\t\tobblbunit as string,\n\t\tobblength as decimal(38,18),\n\t\tobblicences as decimal(38,18),\n\t\tobbloc as string,\n\t\tobbludate as timestamp,\n\t\tobblusign as string,\n\t\tobbm3 as decimal(38,18),\n\t\tobbmainoshid as decimal(38,18),\n\t\tobbmaintlevel as decimal(38,18),\n\t\tobbmanager as decimal(38,18),\n\t\tobbmanerknum as string,\n\t\tobbmanisolan as string,\n\t\tobbmaterial as string,\n\t\tobbmcpid as string,\n\t\tobbmvaynsw as string,\n\t\tobbname as string,\n\t\tobbncaid as string,\n\t\tobbnoofcrew as decimal(38,18),\n\t\tobbnoofflat as decimal(38,18),\n\t\tobbnoofofficers as decimal(38,18),\n\t\tobbnoofother as decimal(38,18),\n\t\tobbnoofpax as decimal(38,18),\n\t\tobbobbid as string,\n\t\tobbobjdescr as string,\n\t\tobbobjema as decimal(38,18),\n\t\tobbobjemi as decimal(38,18),\n\t\tobbobno as decimal(38,18),\n\t\tobbobnorf as decimal(38,18),\n\t\tobbobver as decimal(38,18),\n\t\tobboffisolan as string,\n\t\tobboflid as decimal(38,18),\n\t\tobboshid as decimal(38,18),\n\t\tobbowndate as timestamp,\n\t\tobbowner as decimal(38,18),\n\t\tobbownynsw as string,\n\t\tobbpilotcert as string,\n\t\tobbpilothour as decimal(38,18),\n\t\tobbportcccid as string,\n\t\tobbportdescr as string,\n\t\tobbportunlid as string,\n\t\tobbraptorid as string,\n\t\tobbrecontrfactor as decimal(38,18),\n\t\tobbregdate as timestamp,\n\t\tobbrentstat as decimal(38,18),\n\t\tobbrespdate as timestamp,\n\t\tobbresptext as string,\n\t\tobbrotation as decimal(38,18),\n\t\tobbshbisolan as string,\n\t\tobbshpbld as decimal(38,18),\n\t\tobbsnr as decimal(38,18),\n\t\tobbsocity as string,\n\t\tobbsocity2 as string,\n\t\tobbspeedlimit as decimal(38,18),\n\t\tobbsrcob as string,\n\t\tobbstandard as decimal(38,18),\n\t\tobbstdate as timestamp,\n\t\tobbtaxno as string,\n\t\tobbtotamt as decimal(38,18),\n\t\tobbtradisolan as string,\n\t\tobbtradtextkey as string,\n\t\tobbtradunlid as string,\n\t\tobbtranme as string,\n\t\tobbtranty as decimal(38,18),\n\t\tobbtypedescr as string,\n\t\tobbuhcid as decimal(38,18),\n\t\tobbusecod as string,\n\t\tobbverstat as string,\n\t\tobbvescod as string,\n\t\tobbvesisolan as string,\n\t\tobbwater as string,\n\t\tobbweigthgroup as string,\n\t\tobbx1factorgroup as string,\n\t\tobbx2factorgroup as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> obb\nsource(output(\n\t\tobaassetno as decimal(38,18),\n\t\tobaassetsubno as decimal(38,18),\n\t\tobacallno as string,\n\t\tobachassis as string,\n\t\tobacomp2 as decimal(38,18),\n\t\tobacrdate as timestamp,\n\t\tobacrsign as string,\n\t\tobaextnote as string,\n\t\tobaimono as decimal(38,18),\n\t\tobaimoynsw as string,\n\t\tobaintnote as string,\n\t\tobaknvmark as string,\n\t\tobalongtermrate as decimal(38,18),\n\t\tobaludate as timestamp,\n\t\tobalusign as string,\n\t\tobammsino as decimal(38,18),\n\t\tobancmid as string,\n\t\tobancnid as string,\n\t\tobancsid as string,\n\t\tobanjcid as string,\n\t\tobanpcid as decimal(38,18),\n\t\tobaobno as decimal(38,18),\n\t\tobaobrt as decimal(38,18),\n\t\tobaorgbui as decimal(38,18),\n\t\tobaorgbuiltmonth as decimal(38,18),\n\t\tobaoxno as decimal(38,18),\n\t\tobapeaid as decimal(38,18),\n\t\tobatrackit as string,\n\t\tobatrackit1 as string,\n\t\tobatrackit2 as string,\n\t\tobatrackit3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> oba\nsource(output(\n\t\tagreement_type as string,\n\t\tbusiness_area as string,\n\t\tcoverage_code as string,\n\t\tcoverage_desc as string,\n\t\tinserted_date as timestamp,\n\t\tmutual_fixed as string,\n\t\tpk_risk_group as double,\n\t\treinsurance_pgm_code as string,\n\t\treinsurance_pgm_desc as string,\n\t\trisk_group_code as string,\n\t\trisk_group_desc as string,\n\t\trisk_group_sort as double,\n\t\tsegment_code as string,\n\t\tsegment_desc as string,\n\t\tupdated_date as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> stariskgroup\nsource(output(\n\t\tammonia_ind as string,\n\t\tanswer_back as string,\n\t\taudit_created as timestamp,\n\t\taudit_updated as timestamp,\n\t\tbale_capacity as decimal(38,18),\n\t\tballast_capacity as decimal(38,18),\n\t\tbeneficial_owner_id as decimal(38,18),\n\t\tbeneficial_owner_start_date as timestamp,\n\t\tbollard_pull as decimal(38,18),\n\t\tbore as decimal(38,18),\n\t\tbow_chain_stoppers as string,\n\t\tbow_load_discharge as string,\n\t\tbreadth_extreme as decimal(38,18),\n\t\tbreadth_moulded as decimal(38,18),\n\t\tbreaker_company as string,\n\t\tbroken_end_date as timestamp,\n\t\tbroken_place as string,\n\t\tbuilt_place as string,\n\t\tbulbous_bow_ind as string,\n\t\tcall_sign as string,\n\t\tcar_capacity as decimal(38,18),\n\t\tcasualty_date as timestamp,\n\t\tclass1 as string,\n\t\tclass1_code as string,\n\t\tclass1_esp_ind as string,\n\t\tclass1_ice_class as string,\n\t\tclass1_ice_class_text as string,\n\t\tclass1_last_survey_date as timestamp,\n\t\tclass1_notation as string,\n\t\tclass1_provisional_end_date as timestamp,\n\t\tclass1_provisional_ind as string,\n\t\tclass1_rating as string,\n\t\tclass1_start_date as timestamp,\n\t\tclass1_suspension_ind as string,\n\t\tclass1_vessel_id as string,\n\t\tclass2 as string,\n\t\tclass2_code as string,\n\t\tclass2_esp_ind as string,\n\t\tclass2_ice_class as string,\n\t\tclass2_ice_class_text as string,\n\t\tclass2_last_survey_date as timestamp,\n\t\tclass2_notation as string,\n\t\tclass2_provisional_end_date as timestamp,\n\t\tclass2_provisional_ind as string,\n\t\tclass2_rating as string,\n\t\tclass2_start_date as timestamp,\n\t\tclass2_suspension_ind as string,\n\t\tclass2_vessel_id as string,\n\t\tclass_changes_previous_3_years as decimal(38,18),\n\t\tcls_ind as string,\n\t\tco2_ind as string,\n\t\tcoil_ind as string,\n\t\tcoil_text as string,\n\t\tcollisions as decimal(38,18),\n\t\tcommercial_operator_id as decimal(38,18),\n\t\tcommercial_op_start_date as timestamp,\n\t\tcommon_boiler_type as string,\n\t\tcommon_gear_type as string,\n\t\tcommon_gear_type_code as string,\n\t\tcommon_propeller_type as string,\n\t\tcommon_propeller_type_code as string,\n\t\tconstruction_end as timestamp,\n\t\tconstruction_start as timestamp,\n\t\tconvention_69_ind as string,\n\t\tconversion_date as timestamp,\n\t\tconversion_text as string,\n\t\tcount_designation as double,\n\t\tcount_eng_builder as double,\n\t\tcount_gbowner_chg_5y as double,\n\t\tcow_ind as string,\n\t\tcurrent_flag as string,\n\t\tcurrent_flag_start_date as timestamp,\n\t\tcurrent_name as string,\n\t\tcylinder_arrangement as string,\n\t\tdead_date as timestamp,\n\t\tdeck_tank_capacity as decimal(38,18),\n\t\tdepth as decimal(38,18),\n\t\tdetentions_last_12_months as decimal(38,18),\n\t\tdetentions_last_24mon as decimal(38,18),\n\t\tdetentions_last_3_years as decimal(38,18),\n\t\tdetention_ind as string,\n\t\tdisplacement as decimal(38,18),\n\t\tdraft as decimal(38,18),\n\t\tdwt as decimal(38,18),\n\t\tearliest_engine_dob as timestamp,\n\t\tengine_action as string,\n\t\tengine_builder as string,\n\t\tengine_built_town as string,\n\t\tengine_designation as string,\n\t\tengine_designer as string,\n\t\tengine_position as string,\n\t\tengine_type as string,\n\t\tethylene_ind as string,\n\t\tflag as string,\n\t\tflag_changes_previous_3_years as decimal(38,18),\n\t\tflag_official_number as string,\n\t\tflash_point_60_ind as string,\n\t\tformula_dwt as decimal(38,18),\n\t\tfreeboard as decimal(38,18),\n\t\tfuel_capacity as decimal(38,18),\n\t\tfuel_consumption as string,\n\t\tfuel_type as string,\n\t\tfuel_type2 as string,\n\t\tgas_capacity as decimal(38,18),\n\t\tgas_max_pressure as decimal(38,18),\n\t\tgas_min_pressure as decimal(38,18),\n\t\tgearless_ind as string,\n\t\tgrain_capacity as decimal(38,18),\n\t\tgross as decimal(38,18),\n\t\thatch_type as string,\n\t\theat_exchangers as string,\n\t\theli_deck_ind as string,\n\t\thp as decimal(38,18),\n\t\thull_damage as decimal(38,18),\n\t\thull_design as string,\n\t\thull_type as string,\n\t\tigs_ind as string,\n\t\timo as decimal(38,18),\n\t\timo_rating_1 as string,\n\t\timo_rating_2 as string,\n\t\timo_rating_3 as string,\n\t\tincidents_result_in_pollution as decimal(38,18),\n\t\tincident_result_in_los_of_life as decimal(38,18),\n\t\tinmarsat_code as string,\n\t\tinmarsat_number as string,\n\t\tinspections_last_12_months as decimal(38,18),\n\t\tinspections_last_24mon as decimal(38,18),\n\t\tinspections_last_3_years as decimal(38,18),\n\t\tinspection_precis as string,\n\t\tktm as decimal(38,18),\n\t\tlane_length as decimal(38,18),\n\t\tlane_width as decimal(38,18),\n\t\tlatest_incident_precis as string,\n\t\tlatest_inspection_date as timestamp,\n\t\tlaunch_date as timestamp,\n\t\tlbp as decimal(38,18),\n\t\tliquid_capacity as decimal(38,18),\n\t\tliquid_capacity_barrels as decimal(38,18),\n\t\tlng_containment_ind as string,\n\t\tloa as decimal(38,18),\n\t\tloss_date as timestamp,\n\t\tlrg as decimal(38,18),\n\t\tlt_tonnes as decimal(38,18),\n\t\tmachinery_damage as decimal(38,18),\n\t\tmanifold_distance as decimal(38,18),\n\t\tmanifold_to_bow as decimal(38,18),\n\t\tmanifold_type as string,\n\t\tmaterial_of_build as string,\n\t\tmaximum_hatch_length as decimal(38,18),\n\t\tmaximum_hatch_width as decimal(38,18),\n\t\tmaximum_hold_depth as decimal(38,18),\n\t\tmaximum_hold_length as decimal(38,18),\n\t\tmaximum_hold_width as decimal(38,18),\n\t\tmaximum_individual_gear_swl as decimal(38,18),\n\t\tmaximum_rpm as decimal(38,18),\n\t\tmmsi as string,\n\t\tname_changes_previous_3_years as decimal(38,18),\n\t\tnet as decimal(38,18),\n\t\tnominal_owner_id as decimal(38,18),\n\t\tnominal_owner_start_date as timestamp,\n\t\tno_berths as decimal(38,18),\n\t\tno_bulkheads as decimal(38,18),\n\t\tno_cabins as decimal(38,18),\n\t\tno_centre_tanks as decimal(38,18),\n\t\tno_crew as decimal(38,18),\n\t\tno_cylinders as decimal(38,18),\n\t\tno_decks as decimal(38,18),\n\t\tno_deficiencies_last_12mon as decimal(38,18),\n\t\tno_deficiencies_last_24mon as decimal(38,18),\n\t\tno_engines as decimal(38,18),\n\t\tno_grades as decimal(38,18),\n\t\tno_lines as decimal(38,18),\n\t\tno_passengers as decimal(38,18),\n\t\tno_reefer_plugs as decimal(38,18),\n\t\tno_stainless_steel_tanks as decimal(38,18),\n\t\tno_watertight_compartments as decimal(38,18),\n\t\tno_wing_tanks as decimal(38,18),\n\t\tnumber_deficienci_last_3_year as decimal(38,18),\n\t\tnumber_owner as double,\n\t\torder_cancelled as timestamp,\n\t\torder_date as timestamp,\n\t\torder_value as decimal(38,18),\n\t\tore_capacity_tonnes as decimal(38,18),\n\t\tore_cargo_ind as string,\n\t\toriginal_sched_cons_end as timestamp,\n\t\tpanama_nrt as decimal(38,18),\n\t\tparallel_body_length as decimal(38,18),\n\t\tpiracy as decimal(38,18),\n\t\tpi_changes_previous_3_years as decimal(38,18),\n\t\tpi_club as string,\n\t\tpi_club_id as string,\n\t\tpi_start_date as timestamp,\n\t\tport_of_registry as string,\n\t\tpower_kw as decimal(38,18),\n\t\tpressurised_ind as string,\n\t\tprevious_flag as string,\n\t\tprevious_name as string,\n\t\tpropulsion_text as string,\n\t\tpropulsion_type as string,\n\t\tpump_capacity_cubic as decimal(38,18),\n\t\tpump_capacity_tonnes as decimal(38,18),\n\t\tpump_description as string,\n\t\trecord_last_updated as timestamp,\n\t\trefrigerated_capacity as decimal(38,18),\n\t\trefrigerated_ind as string,\n\t\trefrigerated_teu_capacity as decimal(38,18),\n\t\tregistered_owner_id as decimal(38,18),\n\t\tregistered_owner_start_date as timestamp,\n\t\tsbt_ind as string,\n\t\tscheduled_construction_end as timestamp,\n\t\tsemi_pressurised_ind as string,\n\t\tslop_tank_capacity as decimal(38,18),\n\t\tsnapshot_date as timestamp,\n\t\tspeed as decimal(38,18),\n\t\tspeed_type as string,\n\t\tspm_ind as string,\n\t\tstainles_steel_tanks as string,\n\t\tstart_date as timestamp,\n\t\tstatus as string,\n\t\tstern_load_discharge as string,\n\t\tstrengthened_for_heavy_cargo as string,\n\t\tstroke as decimal(38,18),\n\t\tstroke_type as decimal(38,18),\n\t\tsuez_nrt as decimal(38,18),\n\t\ttank_coated_ind as string,\n\t\ttank_coated_text as string,\n\t\ttank_text as string,\n\t\ttechnical_manager_id as decimal(38,18),\n\t\ttechnical_manager_start_date as timestamp,\n\t\tteu_14t_capacity as decimal(38,18),\n\t\tteu_capacity as decimal(38,18),\n\t\tteu_deck_capacity as decimal(38,18),\n\t\tteu_hold_capacity as decimal(38,18),\n\t\tteu_operation_capacity as decimal(38,18),\n\t\tthird_party_operator_id as decimal(38,18),\n\t\tthird_party_operator_start_dat as timestamp,\n\t\tthruster_ind as string,\n\t\ttotal_ac_current_generators as decimal(38,18),\n\t\ttotal_boilers as decimal(38,18),\n\t\ttotal_casualties as decimal(38,18),\n\t\ttotal_casualties_last_12_month as decimal(38,18),\n\t\ttotal_casualties_last_5_years as decimal(38,18),\n\t\ttotal_dc_current_generators as decimal(38,18),\n\t\ttotal_dead as decimal(38,18),\n\t\ttotal_detentions as decimal(38,18),\n\t\ttotal_generators as decimal(38,18),\n\t\ttotal_generator_power as decimal(38,18),\n\t\ttotal_hatches as decimal(38,18),\n\t\ttotal_holds as decimal(38,18),\n\t\ttotal_injured as decimal(38,18),\n\t\ttotal_inspections as decimal(38,18),\n\t\ttotal_lifting_gear as decimal(38,18),\n\t\ttotal_missing as decimal(38,18),\n\t\ttotal_propellers as decimal(38,18),\n\t\ttotal_pumps as decimal(38,18),\n\t\ttotal_tanks as decimal(38,18),\n\t\ttpcmi as decimal(38,18),\n\t\ttrailer_capacity as decimal(38,18),\n\t\tvcm_ind as string,\n\t\tvessel_builder as string,\n\t\tvessel_id as decimal(38,18),\n\t\tvessel_name as string,\n\t\tvessel_type as string,\n\t\tvessel_type_code as string,\n\t\tyard_number as string,\n\t\tyear_of_build as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> lloydssourcevessel\nsource(output(\n\t\tfp_3_ltr_code as string,\n\t\tfp_level_5_code as string,\n\t\tfp_level_5_decode as string,\n\t\tfp_level_5_desc as string,\n\t\tfp_level_5_hull as double,\n\t\tfp_level_5_sub as string,\n\t\tinsert_date as timestamp,\n\t\tpk_vessel_type_group as double,\n\t\tupdate_date as timestamp,\n\t\tvsl_cefor_group as string,\n\t\tvsl_desc as string,\n\t\tvsl_gard_group as string,\n\t\tvsl_marine_group as string,\n\t\tvsl_risk_group as string,\n\t\tvsl_group1 as integer,\n\t\tvsl_group1_desc as string,\n\t\tvsl_group1_sort as string,\n\t\tvsl_group2 as integer,\n\t\tvsl_group2_desc as string,\n\t\tvsl_group2_sort as string,\n\t\tvsl_group3 as integer,\n\t\tvsl_group3_desc as string,\n\t\tvsl_group3_sort as string,\n\t\tvsl_group4 as integer,\n\t\tvsl_group4_desc as string,\n\t\tvsl_group4_sort as string,\n\t\tvsl_group5 as integer,\n\t\tvsl_group5_desc as string,\n\t\tvsl_group5_sort as string,\n\t\tvsl_groupIV as integer,\n\t\tvsl_groupIV_desc as string,\n\t\tvsl_groupIV_sort as string,\n\t\tvsl_groupLOH as integer,\n\t\tvsl_groupLOH_desc as string,\n\t\tvsl_groupLOH_sort as string,\n\t\tgroup_code_Size as string,\n\t\tgroup_desc_Size as string,\n\t\tfp_Lvl4_code as string,\n\t\tfp_Lvl4_Group as integer,\n\t\tgroup_Lvl4_decode as string,\n\t\tgroup_Lvl3_decode as string,\n\t\tFp_Lvl3_Group as integer,\n\t\tgroup_desc_Lvl3 as string,\n\t\tVessel_Gard_Group as string,\n\t\tVessel_Group_6 as integer,\n\t\tgroup_code_alternative_D6 as string,\n\t\tVessel_Group_6_desc as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> vesseltype\nsource(output(\n\t\tunlairport as string,\n\t\tunlaltname as string,\n\t\tunlaltwodiacritics as string,\n\t\tunlbordercrossing as string,\n\t\tunlchangeindicator as string,\n\t\tunlcoordinates as string,\n\t\tunlcustom as string,\n\t\tunlcustomdim as string,\n\t\tunlfixedtransp as string,\n\t\tunliata as string,\n\t\tunliso2ch as string,\n\t\tunlloccode as string,\n\t\tunllocname as string,\n\t\tunllocwodiacritics as string,\n\t\tunlludate as timestamp,\n\t\tunllusign as string,\n\t\tunlmdescr as string,\n\t\tunlmulifunc as string,\n\t\tunlname as string,\n\t\tunlport as string,\n\t\tunlpostalexoff as string,\n\t\tunlrailterminal as string,\n\t\tunlremarks as string,\n\t\tunlroadterminal as string,\n\t\tunlstopuse as string,\n\t\tunlsubdiv as string,\n\t\tunlunlid as string,\n\t\tunlunlludate as timestamp,\n\t\tunlunlstatus as string,\n\t\tunlwodiacritics as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> unl\ntcross filter(source_system == 'PARIS' && \ncode_type_id == 113) ~> AgreementType\nAgreementType select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_agt' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefAgreementType\ntcross filter(source_system=='PARIS' && \n code_type_id== 106) ~> BusinessArea\nBusinessArea select(mapColumn(\n\t\teach(match(name=='target_code'||name=='source_code_key'),\n\t\t\t$$+'_bua' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefBusinessArea\ntcross filter(source_system== 'PARIS'  \n&& code_type_id  == 45) ~> VesselSubType\nVesselSubType select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_sub_type' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefVesselSubType\nica derive(icastdate_exchange = case(icastdate  > currentTimestamp(),currentTimestamp(),\r\ncase(icastdate < toTimestamp('01011978','dd/mm/yyyy'),toTimestamp('01011978','dd/mm/yyyy'),icastdate))) ~> icastdateExchange\nobb select(mapColumn(\n\t\tobbobno,\n\t\tobbstdate,\n\t\tobbendate,\n\t\tobbcefoty,\n\t\tobbgrt,\n\t\tobbname,\n\t\tobbclass,\n\t\tobbbuiltyear,\n\t\tobbdwt,\n\t\tobbformt,\n\t\tobbvesisolan,\n\t\tobbadr1,\n\t\tobbsocity,\n\t\tobbnoofpax,\n\t\tobbvesisolan,\n\t\tobbportunlid,\n\t\tobbvescod\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Obbtable\nicastdateExchange select(mapColumn(\n\t\ticaobno,\n\t\ticastdate,\n\t\ticastdate_exchange,\n\t\ticaendate,\n\t\ticatotamt,\n\t\ticaourshare,\n\t\ticacadate,\n\t\ticaicaid,\n\t\ticachdate,\n\t\ticainaid,\n\t\ticaagaid,\n\t\ticapmlcurr,\n\t\ticapmlamt,\n\t\ticaeoamt,\n\t\ticaprovst,\n\t\ticastat3,\n\t\ticaintrate,\n\t\ticaintosprem,\n\t\ticaintcurr,\n\t\ticacrdate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Icatable\noba select(mapColumn(\n\t\tobaobno,\n\t\tobaimono,\n\t\tobacallno,\n\t\tobaorgbui\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> obatable\naga select(mapColumn(\n\t\tagaagaid,\n\t\tagastdate,\n\t\tagabusnsec,\n\t\tagabusndiv,\n\t\tagabusncla,\n\t\tagastat2\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> agatable\nicaoba, Obbtable join(obaobno == obbobno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> obaobb\nobaobb filter((coalesce(icaendate,currentTimestamp()) > coalesce(obbstdate, addDays(currentTimestamp(), -36500))) &&\r\n(coalesce(icaendate,currentTimestamp()) < coalesce(obbendate, addDays(currentTimestamp(), 36500)))) ~> icaendateobb\nsubtypevesseltype, agatable join(icaagaid == agaagaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> icaaga\nagaAgtype derive(rob_vessel_type_3ltr = coalesce(target_code_sub_type,'N/A'),\n\t\trob_vessel_type_desc = coalesce(target_description_sub_type,'Not Applicable'),\n\t\trob_object_key = case(obaobno == toDecimal(null()),toString(null()),concat('P',toString(obaobno))),\n\t\trob_vessel_name = case(trim(obbname)==toString(null()), 'NOT APPLICABLE',upper(obbname)),\n\t\tggp_gard_group = case(trim(vsl_gard_group) == toString(null()),'Not Applicable',substring(vsl_gard_group,1,30)),\n\t\tggp_key = case(trim(toString(pk_vessel_type_group)) == toString(null()), 'N/A' ,toString(pk_vessel_type_group)),\n\t\trob_imono = obaimono) ~> ExpressionRob\nicaaga, xrefAgreementType join(toString(agabusndiv) == source_code_key_agt,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> agaAgtype\nExpressionRob derive(agreement_type = target_code_agt,\n\t\tagreement_type_desc = target_description_agt) ~> ExAgreement4\nExAgreement4, stariskgroup lookup(ExAgreement4@agreement_type == stariskgroup@agreement_type,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpStaRiskGroup\nicaendateobb, xrefVesselSubType join(trim(upper(obbcefoty)) == trim(upper(source_code_key_sub_type)),\n\tjoinType:'left',\n\tbroadcast: 'auto')~> obbsubtype\nLkpStaRiskGroup derive(gard_vsl_type_grp_code = case(in(['CHA','SQS'],ExAgreement4@agreement_type),ExAgreement4@agreement_type, \r\ncase(in(['BU', 'OP', 'CO'],risk_group_code),risk_group_code, toString(null()))),\n\t\tgard_vsl_type_group_desc = case(in(['CHA','SQS'],ExAgreement4@agreement_type),agreement_type_desc, \r\ncase(in(['BU', 'OP', 'CO'],risk_group_code),risk_group_code, toString(null())))) ~> ExpressionVslgrp\nExpressionVslgrp, lloydsvessel lookup(obaimono == imo,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> LkpLoydsVessel\nLkpLoydsVessel derive(built_year_calc = case(greatest(coalesce(toDecimal(obbbuiltyear),toDecimal(0)),coalesce(toDecimal(obaorgbui),toDecimal(0)))==0,\r\ncase(year_of_build == toDecimal(null()),toDecimal(toDate('yyyy')-10),\r\nyear_of_build)\r\n,greatest(obbbuiltyear,obaorgbui))) ~> ExpressionBuiltYearCalc\nExpressionBuiltYearCalc derive(vessel_age = (((toDecimal(toDate('yyyy')) - built_year_calc))\r\n- ((6 - toDecimal(toString(currentDate('mm')))/12)))) ~> ExpVesselAge\nlloydssourcevessel select(mapColumn(\n\t\timo,\n\t\tyear_of_build\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lloydsvessel\nIcatable, obatable join(icaobno == obaobno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> icaoba\nobbsubtype, dimvesseltype join(target_code_sub_type == fp_3_ltr_code,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> subtypevesseltype\nvesseltype select(mapColumn(\n\t\tfp_3_ltr_code,\n\t\tvsl_gard_group,\n\t\tpk_vessel_type_group\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> dimvesseltype\nDerivedColumn1 select(mapColumn(\n\t\trob_object_key,\n\t\trob_vessel_type_3ltr,\n\t\trob_vessel_type_desc,\n\t\trob_vessel_name,\n\t\tggp_key,\n\t\tggp_gard_group,\n\t\trob_imono,\n\t\trob_vessel_age = vessel_age,\n\t\trob_tonnage_dw = obbdwt,\n\t\trob_tonnage_gross = obbgrt,\n\t\trob_signal_letters = obacallno,\n\t\trob_no_of_passengers = obbnoofpax,\n\t\trob_built_year = obbbuiltyear,\n\t\trob_built_year_calc = built_year_calc,\n\t\tgard_vsl_type_grp_2_int_code = gard_vsl_type_grp_code,\n\t\tgard_vsl_type_grp_2_int_desc = gard_vsl_type_group_desc,\n\t\tgard_vsl_type_grp_2_ext_code = gard_vsl_type_grp_code,\n\t\trob_port_of_register = unlname,\n\t\trob_port_of_registry,\n\t\trob_class = target_code_class,\n\t\trob_class_desc = target_description_class,\n\t\trob_flag = target_code_flag,\n\t\trob_flag_desc = target_description_flag,\n\t\trob_mou_type\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tmp\ntcross select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'||name=='source_system'||name=='code_type_id'),\n\t\t\t$$+'_flag' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefFlag\ntcross select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'||name=='source_system'||name=='code_type_id'),\n\t\t\t$$+'_class' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefclass\nconstant, xrefFlag lookup(source_system == source_system_flag\n\t&& obbvesisolan == source_code_key_flag\n\t&& code_type_id_100_flag == code_type_id_flag,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> flag\nExpVesselAge derive(code_type_id_100_flag = 100,\n\t\tcode_type_id_108_class = 108,\n\t\tsource_system = 'Paris',\n\t\trob_mou_type = 'Not Applicable') ~> constant\nflag, xrefclass lookup(source_system == source_system_class\n\t&& obbsocity == source_code_key_class\n\t&& code_type_id_108_class == toDecimal(source_code_key_class),\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> class\nunl select(mapColumn(\n\t\tunlname\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> unltable\nclass, unltable lookup(obbportunlid == unlname,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> lkpunl\nlkpunl derive(rob_port_of_registry = substring(unlname,1,60)) ~> DerivedColumn1"
		}
	}
}