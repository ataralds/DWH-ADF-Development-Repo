{
	"name": "m_pre_dim_sub_claimMe",
	"properties": {
		"folder": {
			"name": "Henrik"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "lake_raw_paris",
						"type": "DatasetReference"
					},
					"name": "LCATABLE"
				},
				{
					"dataset": {
						"referenceName": "lake_raw_paris",
						"type": "DatasetReference"
					},
					"name": "LDATABLE"
				},
				{
					"dataset": {
						"referenceName": "dwh_stage_mapsys",
						"type": "DatasetReference"
					},
					"name": "TcrossReference"
				},
				{
					"dataset": {
						"referenceName": "dwh_lake_test",
						"type": "DatasetReference"
					},
					"name": "HlpExchangeRateToUDS"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dwh_prepare_pre_dim",
						"type": "DatasetReference"
					},
					"name": "PreDimSubClaim"
				}
			],
			"transformations": [
				{
					"name": "JoinLcaLda"
				},
				{
					"name": "CodeTypeIDandSourceSystem"
				},
				{
					"name": "LookupClaimCategory"
				},
				{
					"name": "RemoveUnusedLCAcolumns"
				},
				{
					"name": "RemoveUnusedLDAcolumns"
				},
				{
					"name": "RemoveDuplicateLCAIDcolumn"
				},
				{
					"name": "LookupHlpExchangeRateToUSD"
				},
				{
					"name": "ChangeToDateFormat"
				},
				{
					"name": "DeriveSclUsedDectubleUSD"
				},
				{
					"name": "MatchedRows"
				},
				{
					"name": "DeriveSubClaimKey"
				},
				{
					"name": "AggregateSclUsedDectibleUSD"
				},
				{
					"name": "RemoveDuplicates"
				},
				{
					"name": "FilterSourceSystemAndCXodeTypeID"
				}
			],
			"script": "source(output(\n\t\tLCALCAID as string,\n\t\tLCAICAID as string,\n\t\tLCACLMN3 as decimal(38,18),\n\t\tLCACLMDATE as decimal(38,18),\n\t\tLCACYEAR as decimal(38,18),\n\t\tLCATRTMCO as decimal(38,18),\n\t\tLCAACSTAT as string,\n\t\tLCALOSSCO as string,\n\t\tLCAOUTSTM as string,\n\t\tLCAUWSIGN as string,\n\t\tLCAOFFICE as decimal(38,18),\n\t\tLCALDESCR as string,\n\t\tLCACLODATE as decimal(38,18),\n\t\tLCAECAUSECO as string,\n\t\tLCACLINTC as decimal(38,18),\n\t\tLCABONYNSW as string,\n\t\tLCAIMPEXP as decimal(38,18),\n\t\tLCANMCLEF as string,\n\t\tLCACCOD2 as string,\n\t\tLCAAREACD as string,\n\t\tLCACEFOUC as string,\n\t\tLCAONOFFS as decimal(38,18),\n\t\tLCAENINTRST as string,\n\t\tLCAMPLCURR as string,\n\t\tLCAMPLAMT as decimal(38,18),\n\t\tLCAXLMREF as string,\n\t\tLCAREPDATE as decimal(38,18),\n\t\tLCALIMCURR as string,\n\t\tLCALIMAMT as decimal(38,18),\n\t\tLCABIGEVENT as string,\n\t\tLCALODESCR as string,\n\t\tLCAINTNOTE as string,\n\t\tLCALTDATE as decimal(38,18),\n\t\tLCACRSIGN as string,\n\t\tLCACRDATE as decimal(38,18),\n\t\tLCALUSIGN as string,\n\t\tLCALUDATE as decimal(38,18),\n\t\tLCAKNVMARK as string,\n\t\tLCALABID as string,\n\t\tLCAAGAID as string,\n\t\tLCAOBNO as decimal(38,18),\n\t\tLCACROBBID as string,\n\t\tLCAWRKCLAIM as decimal(38,18),\n\t\tLCAFPAREACD as string,\n\t\tLCATOAREACD as string,\n\t\tLCAJURISDICTION as string,\n\t\tLCAFILEREF as decimal(38,18),\n\t\tLCANEXTSIGN as string,\n\t\tLCAAREADESCR as string,\n\t\tLCALRGCLMYNSW as string,\n\t\tLCAFROMAREACD as string,\n\t\tLCANEXTDATE as decimal(38,18),\n\t\tLCAOCCOFFDATE as decimal(38,18),\n\t\tLCAWORKPLACE as decimal(38,18),\n\t\tLCAWRKPLCCOD as decimal(38,18),\n\t\tLCAREGNDATE as decimal(38,18),\n\t\tLCAOCCOFFYNSW as string,\n\t\tLCAREGRESS as decimal(38,18),\n\t\tLCACLMPEAID as decimal(38,18),\n\t\tLCAOCCOWNYNSW as string,\n\t\tLCAREGNSIGN as string,\n\t\tLCAMUOFFPROS as decimal(38,18),\n\t\tLCAREGCURR as string,\n\t\tLCAREGAMT as decimal(38,18),\n\t\tLCAMUOWNPROS as decimal(38,18),\n\t\tLCALIMDAYS as decimal(38,18),\n\t\tLCAREGTEXT70 as string,\n\t\tLCAEUOFFPROS as decimal(38,18),\n\t\tLCAMUOFFGRP as decimal(38,18),\n\t\tLCAEUOWNPROS as decimal(38,18),\n\t\tLCABIRTNO as string,\n\t\tLCAADJSIGN as string,\n\t\tLCACAGTYP as string,\n\t\tLCACALCLAMTFRINJURED as string,\n\t\tLCACLMDATECHD as string,\n\t\tLCACLMID as decimal(38,18),\n\t\tLCACLMINTYNSW as string,\n\t\tLCACNDID as string,\n\t\tLCACOMMONYNSW as string,\n\t\tLCACOMPLLEVEL as string,\n\t\tLCAEXPPDATE as decimal(38,18),\n\t\tLCAFOADATE as decimal(38,18),\n\t\tLCAGEODESCR as string,\n\t\tLCAHOUR as decimal(38,18),\n\t\tLCAINSURED as decimal(38,18),\n\t\tLCAINSUREDMOF as string,\n\t\tLCALIABCODE as decimal(38,18),\n\t\tLCALIABTXT as string,\n\t\tLCALIMDEDAMT as decimal(38,18),\n\t\tLCALOADATE as decimal(38,18),\n\t\tLCAMANHAVSALAER as string,\n\t\tLCANOOFPERS as decimal(38,18),\n\t\tLCAPREPAYAMTP as decimal(38,18),\n\t\tLCAPREPAYCURR as string,\n\t\tLCATAUCODE as decimal(38,18),\n\t\tLCATAUTXT as string,\n\t\tLCATAXNO as string,\n\t\tLCATRANME as string,\n\t\tLCATRANTY as decimal(38,18),\n\t\tLCATZONE as string,\n\t\tLCACATTYPE as string,\n\t\tLCAEXTADJYNSW as string,\n\t\tLCAN1NOOFTREATM as decimal(38,18),\n\t\tLCAN2NOOFTREATM as decimal(38,18),\n\t\tLCAN3NOOFTREATM as decimal(38,18),\n\t\tLCAN4NOOFTREATM as decimal(38,18),\n\t\tLCAN5NOOFTREATM as decimal(38,18),\n\t\tLCAN6NOOFTREATM as decimal(38,18),\n\t\tLCAN7NOOFTREATM as decimal(38,18),\n\t\tLCAN8NOOFTREATM as decimal(38,18),\n\t\tLCAPORTCCCID as string,\n\t\tLCATLOTYPE as decimal(38,18),\n\t\tLCAWOCDATE as decimal(38,18),\n\t\tLCAWOCSTAT as string,\n\t\tLCAENASSSHR as decimal(38,18),\n\t\tLCAINSCURR as string,\n\t\tLCAECOID as string,\n\t\tLCAECLID as string,\n\t\tLCAECFID as string,\n\t\tLCAINSAMT as decimal(38,18),\n\t\tLCALIMRENEWED as decimal(38,18),\n\t\tLCACCOD2DATE as decimal(38,18),\n\t\tLCAEXTCLMID as string,\n\t\tLCATIMNOTE as string,\n\t\tLCATMDUEDATE as decimal(38,18),\n\t\tLCATMEXTLUDATE as decimal(38,18),\n\t\tLCAAUTOSETLEYN as string,\n\t\tLCATMLUDATE as decimal(38,18),\n\t\tLCATMEXTDOCID as decimal(38,18),\n\t\tLCATMEXTLUSIGN as string,\n\t\tLCATMLUSIGN as string,\n\t\tLCATMCLOLUDATE as decimal(38,18),\n\t\tLCATMSTATUS as string,\n\t\tLCATMCLOLUSIGN as string,\n\t\tLCATMEXTDUEDATE as decimal(38,18),\n\t\tLCACEFOCM as string,\n\t\tLCACEFOCC as string,\n\t\tLCATCAUSECO as string,\n\t\tLCANCAUSECO as string,\n\t\tLCACLMCAC as string,\n\t\tLCAMOVEDSIGN as string,\n\t\tLCAREDUCEPREM as string,\n\t\tLCAMOVEDTO as string,\n\t\tLCAISRNDCONTRSSIGNED as string,\n\t\tLCACATEGORYTYPE as string,\n\t\tLCAMOVEDDATE as decimal(38,18),\n\t\tLCAFINALSTATMDATE as decimal(38,18),\n\t\tLCARESUMTIONFROM as string,\n\t\tLCAINSUREDMNO as string,\n\t\tLCARECOVPOTAMT as decimal(38,18),\n\t\tLCAPILOTONBOARD as string,\n\t\tLCARECOVCCVID as decimal(38,18),\n\t\tLCARECOVREMDATE as decimal(38,18),\n\t\tLCARECOVACHCURR as string,\n\t\tLCARECOVPOTINTNOTE as string,\n\t\tLCARECOVACHYNSW as string,\n\t\tLCARECOVACHINTNOTE as string,\n\t\tLCARECOVACHDATE as decimal(38,18),\n\t\tLCARECOVPOTCURR as string,\n\t\tLCACCOD2TRMTDATE as decimal(38,18),\n\t\tLCACCOD2TXT35 as string,\n\t\tLCARECOVACHSIGN as string,\n\t\tLCARECOVPOTYNSW as string,\n\t\tLCARECOVACHAMT as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> LCATABLE\nsource(output(\n\t\tLDALDAID as string,\n\t\tLDALCAID as string,\n\t\tLDACLMCAT as string,\n\t\tLDALN2 as decimal(38,18),\n\t\tLDADEDCD3 as decimal(38,18),\n\t\tLDADEDCURR as string,\n\t\tLDADEDAMT as decimal(38,18),\n\t\tLDATEXT as string,\n\t\tLDADAYS as decimal(38,18),\n\t\tLDACRSIGN as string,\n\t\tLDACRDATE as decimal(38,18),\n\t\tLDADEDKEY as string,\n\t\tLDADEDPERC as decimal(38,18),\n\t\tLDAGRLAMT as decimal(38,18),\n\t\tLDAAGE as decimal(38,18),\n\t\tLDADEDAMTP as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> LDATABLE\nsource(output(\n\t\tSOURCE_CODE_KEY as string,\n\t\tSOURCE_SYSTEM as string,\n\t\tTARGET_CODE as string,\n\t\tTARGET_DESCRIPTION as string,\n\t\tCODE_TYPE as string,\n\t\tCODE_TYPE_ID as double,\n\t\tCODE2 as string,\n\t\tOM_X_REF as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> TcrossReference\nsource(output(\n\t\tFROM_CURRENCY_ID as double,\n\t\tTO_CURRENCY_ID as double,\n\t\tEXCHANGE_FROM_DATE as timestamp,\n\t\tEXCHANGE_RATE as decimal(38,18),\n\t\tEXCHANGE_TO_DATE as timestamp,\n\t\tFROM_CURRENCY_CODE as string,\n\t\tTO_CURRENCY_CODE as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> HlpExchangeRateToUDS\nRemoveUnusedLCAcolumns, RemoveUnusedLDAcolumns join(LCALCAID == LDALCAID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> JoinLcaLda\nChangeToDateFormat derive(CODE_TYPE_ID = 797.0,\n\t\tSOURCE_SYSTEM = 'PARIS',\n\t\tINSERTED_BY = 'M_PRE_DIM_SUB_CLAIM_ME',\n\t\tUPDATED_BY = currentDate('GMT'),\n\t\tZERO_VALUE = 0) ~> CodeTypeIDandSourceSystem\nCodeTypeIDandSourceSystem, TcrossReference lookup(CodeTypeIDandSourceSystem@CODE_TYPE_ID == TcrossReference@CODE_TYPE_ID\n\t&& CodeTypeIDandSourceSystem@SOURCE_SYSTEM == TcrossReference@SOURCE_SYSTEM\n\t&& LDACLMCAT == SOURCE_CODE_KEY,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupClaimCategory\nLCATABLE select(mapColumn(\n\t\tLCALCAID,\n\t\tLCACLMDATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveUnusedLCAcolumns\nLDATABLE select(mapColumn(\n\t\tLDALCAID,\n\t\tLDACLMCAT,\n\t\tLDADEDCURR,\n\t\tLDADEDAMT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveUnusedLDAcolumns\nJoinLcaLda select(mapColumn(\n\t\tLCALCAID,\n\t\tLCACLMDATE,\n\t\tLDACLMCAT,\n\t\tLDADEDCURR,\n\t\tLDADEDAMT\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveDuplicateLCAIDcolumn\nLookupClaimCategory, HlpExchangeRateToUDS lookup(LCACLMDATE == EXCHANGE_FROM_DATE\n\t&& LDADEDCURR == FROM_CURRENCY_CODE,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupHlpExchangeRateToUSD\nRemoveDuplicateLCAIDcolumn derive(LCACLMDATE = toTimestamp(\r\n\"{substring(toString(LCACLMDATE),7,2)}-{substring(toString(LCACLMDATE),5,2)}-{substring(toString(LCACLMDATE),1,4)}\"\r\n,'dd-MM-yyyy'\r\n)) ~> ChangeToDateFormat\nMatchedRows derive(SCL_USED_DECTIBLE_USD = LDADEDAMT/EXCHANGE_RATE) ~> DeriveSclUsedDectubleUSD\nDeriveSubClaimKey filter(isMatch()) ~> MatchedRows\nRemoveDuplicates derive(SUB_CLAIM_KEY = case(TARGET_CODE=='N/A', TARGET_CODE, \"P{LCALCAID}{SOURCE_CODE_KEY}\")) ~> DeriveSubClaimKey\nFilterSourceSystemAndCXodeTypeID aggregate(groupBy(SUB_CLAIM_KEY,\n\t\tTARGET_DESCRIPTION,\n\t\tTARGET_CODE),\n\tSCL_USED_DECTUBLE_USD = sum(SCL_USED_DECTIBLE_USD)) ~> AggregateSclUsedDectibleUSD\nLookupHlpExchangeRateToUSD select(mapColumn(\n\t\tLCALCAID,\n\t\tLCACLMDATE,\n\t\tLDACLMCAT,\n\t\tLDADEDCURR,\n\t\tLDADEDAMT,\n\t\tCODE_TYPE_ID = CodeTypeIDandSourceSystem@CODE_TYPE_ID,\n\t\tSOURCE_SYSTEM = CodeTypeIDandSourceSystem@SOURCE_SYSTEM,\n\t\tINSERTED_BY,\n\t\tUPDATED_BY,\n\t\tZERO_VALUE,\n\t\tSOURCE_CODE_KEY,\n\t\tSOURCE_SYSTEM = TcrossReference@SOURCE_SYSTEM,\n\t\tTARGET_CODE,\n\t\tTARGET_DESCRIPTION,\n\t\tCODE_TYPE,\n\t\tCODE_TYPE_ID = TcrossReference@CODE_TYPE_ID,\n\t\tCODE2,\n\t\tOM_X_REF,\n\t\tFROM_CURRENCY_ID,\n\t\tTO_CURRENCY_ID,\n\t\tEXCHANGE_FROM_DATE,\n\t\tEXCHANGE_RATE,\n\t\tEXCHANGE_TO_DATE,\n\t\tFROM_CURRENCY_CODE,\n\t\tTO_CURRENCY_CODE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveDuplicates\nDeriveSclUsedDectubleUSD filter(SOURCE_SYSTEM =='PARIS' && CODE_TYPE_ID == 797) ~> FilterSourceSystemAndCXodeTypeID\nAggregateSclUsedDectibleUSD sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[''],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimSubClaim"
		}
	}
}