{
	"name": "m_pre_dim_sub_claim_Me_new",
	"properties": {
		"folder": {
			"name": "Henrik"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "lake_raw_paris",
						"type": "DatasetReference"
					},
					"name": "LCATABLE"
				},
				{
					"dataset": {
						"referenceName": "lake_raw_paris",
						"type": "DatasetReference"
					},
					"name": "LCCTABLE"
				},
				{
					"dataset": {
						"referenceName": "dwh_prepare_preDim_lake",
						"type": "DatasetReference"
					},
					"name": "ClaimType"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "dwh_prepare_pre_dim",
						"type": "DatasetReference"
					},
					"name": "PreDimSubClaim"
				}
			],
			"transformations": [
				{
					"name": "RemoveUnusedLCAcolumns"
				},
				{
					"name": "JoinLcaLccTables"
				},
				{
					"name": "Expression"
				},
				{
					"name": "DeriveConstants"
				},
				{
					"name": "LookupClaimType"
				},
				{
					"name": "SelectOutColumns"
				}
			],
			"script": "source(output(\n\t\tLCALCAID as string,\n\t\tLCAICAID as string,\n\t\tLCACLMN3 as decimal(38,18),\n\t\tLCACLMDATE as decimal(38,18),\n\t\tLCACYEAR as decimal(38,18),\n\t\tLCATRTMCO as decimal(38,18),\n\t\tLCAACSTAT as string,\n\t\tLCALOSSCO as string,\n\t\tLCAOUTSTM as string,\n\t\tLCAUWSIGN as string,\n\t\tLCAOFFICE as decimal(38,18),\n\t\tLCALDESCR as string,\n\t\tLCACLODATE as decimal(38,18),\n\t\tLCAECAUSECO as string,\n\t\tLCACLINTC as decimal(38,18),\n\t\tLCABONYNSW as string,\n\t\tLCAIMPEXP as decimal(38,18),\n\t\tLCANMCLEF as string,\n\t\tLCACCOD2 as string,\n\t\tLCAAREACD as string,\n\t\tLCACEFOUC as string,\n\t\tLCAONOFFS as decimal(38,18),\n\t\tLCAENINTRST as string,\n\t\tLCAMPLCURR as string,\n\t\tLCAMPLAMT as decimal(38,18),\n\t\tLCAXLMREF as string,\n\t\tLCAREPDATE as decimal(38,18),\n\t\tLCALIMCURR as string,\n\t\tLCALIMAMT as decimal(38,18),\n\t\tLCABIGEVENT as string,\n\t\tLCALODESCR as string,\n\t\tLCAINTNOTE as string,\n\t\tLCALTDATE as decimal(38,18),\n\t\tLCACRSIGN as string,\n\t\tLCACRDATE as decimal(38,18),\n\t\tLCALUSIGN as string,\n\t\tLCALUDATE as decimal(38,18),\n\t\tLCAKNVMARK as string,\n\t\tLCALABID as string,\n\t\tLCAAGAID as string,\n\t\tLCAOBNO as decimal(38,18),\n\t\tLCACROBBID as string,\n\t\tLCAWRKCLAIM as decimal(38,18),\n\t\tLCAFPAREACD as string,\n\t\tLCATOAREACD as string,\n\t\tLCAJURISDICTION as string,\n\t\tLCAFILEREF as decimal(38,18),\n\t\tLCANEXTSIGN as string,\n\t\tLCAAREADESCR as string,\n\t\tLCALRGCLMYNSW as string,\n\t\tLCAFROMAREACD as string,\n\t\tLCANEXTDATE as decimal(38,18),\n\t\tLCAOCCOFFDATE as decimal(38,18),\n\t\tLCAWORKPLACE as decimal(38,18),\n\t\tLCAWRKPLCCOD as decimal(38,18),\n\t\tLCAREGNDATE as decimal(38,18),\n\t\tLCAOCCOFFYNSW as string,\n\t\tLCAREGRESS as decimal(38,18),\n\t\tLCACLMPEAID as decimal(38,18),\n\t\tLCAOCCOWNYNSW as string,\n\t\tLCAREGNSIGN as string,\n\t\tLCAMUOFFPROS as decimal(38,18),\n\t\tLCAREGCURR as string,\n\t\tLCAREGAMT as decimal(38,18),\n\t\tLCAMUOWNPROS as decimal(38,18),\n\t\tLCALIMDAYS as decimal(38,18),\n\t\tLCAREGTEXT70 as string,\n\t\tLCAEUOFFPROS as decimal(38,18),\n\t\tLCAMUOFFGRP as decimal(38,18),\n\t\tLCAEUOWNPROS as decimal(38,18),\n\t\tLCABIRTNO as string,\n\t\tLCAADJSIGN as string,\n\t\tLCACAGTYP as string,\n\t\tLCACALCLAMTFRINJURED as string,\n\t\tLCACLMDATECHD as string,\n\t\tLCACLMID as decimal(38,18),\n\t\tLCACLMINTYNSW as string,\n\t\tLCACNDID as string,\n\t\tLCACOMMONYNSW as string,\n\t\tLCACOMPLLEVEL as string,\n\t\tLCAEXPPDATE as decimal(38,18),\n\t\tLCAFOADATE as decimal(38,18),\n\t\tLCAGEODESCR as string,\n\t\tLCAHOUR as decimal(38,18),\n\t\tLCAINSURED as decimal(38,18),\n\t\tLCAINSUREDMOF as string,\n\t\tLCALIABCODE as decimal(38,18),\n\t\tLCALIABTXT as string,\n\t\tLCALIMDEDAMT as decimal(38,18),\n\t\tLCALOADATE as decimal(38,18),\n\t\tLCAMANHAVSALAER as string,\n\t\tLCANOOFPERS as decimal(38,18),\n\t\tLCAPREPAYAMTP as decimal(38,18),\n\t\tLCAPREPAYCURR as string,\n\t\tLCATAUCODE as decimal(38,18),\n\t\tLCATAUTXT as string,\n\t\tLCATAXNO as string,\n\t\tLCATRANME as string,\n\t\tLCATRANTY as decimal(38,18),\n\t\tLCATZONE as string,\n\t\tLCACATTYPE as string,\n\t\tLCAEXTADJYNSW as string,\n\t\tLCAN1NOOFTREATM as decimal(38,18),\n\t\tLCAN2NOOFTREATM as decimal(38,18),\n\t\tLCAN3NOOFTREATM as decimal(38,18),\n\t\tLCAN4NOOFTREATM as decimal(38,18),\n\t\tLCAN5NOOFTREATM as decimal(38,18),\n\t\tLCAN6NOOFTREATM as decimal(38,18),\n\t\tLCAN7NOOFTREATM as decimal(38,18),\n\t\tLCAN8NOOFTREATM as decimal(38,18),\n\t\tLCAPORTCCCID as string,\n\t\tLCATLOTYPE as decimal(38,18),\n\t\tLCAWOCDATE as decimal(38,18),\n\t\tLCAWOCSTAT as string,\n\t\tLCAENASSSHR as decimal(38,18),\n\t\tLCAINSCURR as string,\n\t\tLCAECOID as string,\n\t\tLCAECLID as string,\n\t\tLCAECFID as string,\n\t\tLCAINSAMT as decimal(38,18),\n\t\tLCALIMRENEWED as decimal(38,18),\n\t\tLCACCOD2DATE as decimal(38,18),\n\t\tLCAEXTCLMID as string,\n\t\tLCATIMNOTE as string,\n\t\tLCATMDUEDATE as decimal(38,18),\n\t\tLCATMEXTLUDATE as decimal(38,18),\n\t\tLCAAUTOSETLEYN as string,\n\t\tLCATMLUDATE as decimal(38,18),\n\t\tLCATMEXTDOCID as decimal(38,18),\n\t\tLCATMEXTLUSIGN as string,\n\t\tLCATMLUSIGN as string,\n\t\tLCATMCLOLUDATE as decimal(38,18),\n\t\tLCATMSTATUS as string,\n\t\tLCATMCLOLUSIGN as string,\n\t\tLCATMEXTDUEDATE as decimal(38,18),\n\t\tLCACEFOCM as string,\n\t\tLCACEFOCC as string,\n\t\tLCATCAUSECO as string,\n\t\tLCANCAUSECO as string,\n\t\tLCACLMCAC as string,\n\t\tLCAMOVEDSIGN as string,\n\t\tLCAREDUCEPREM as string,\n\t\tLCAMOVEDTO as string,\n\t\tLCAISRNDCONTRSSIGNED as string,\n\t\tLCACATEGORYTYPE as string,\n\t\tLCAMOVEDDATE as decimal(38,18),\n\t\tLCAFINALSTATMDATE as decimal(38,18),\n\t\tLCARESUMTIONFROM as string,\n\t\tLCAINSUREDMNO as string,\n\t\tLCARECOVPOTAMT as decimal(38,18),\n\t\tLCAPILOTONBOARD as string,\n\t\tLCARECOVCCVID as decimal(38,18),\n\t\tLCARECOVREMDATE as decimal(38,18),\n\t\tLCARECOVACHCURR as string,\n\t\tLCARECOVPOTINTNOTE as string,\n\t\tLCARECOVACHYNSW as string,\n\t\tLCARECOVACHINTNOTE as string,\n\t\tLCARECOVACHDATE as decimal(38,18),\n\t\tLCARECOVPOTCURR as string,\n\t\tLCACCOD2TRMTDATE as decimal(38,18),\n\t\tLCACCOD2TXT35 as string,\n\t\tLCARECOVACHSIGN as string,\n\t\tLCARECOVPOTYNSW as string,\n\t\tLCARECOVACHAMT as decimal(38,18)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> LCATABLE\nsource(output(\n\t\tLCCLCCID as string,\n\t\tLCCLCAID as string,\n\t\tLCCLN6 as decimal(38,18),\n\t\tLCCCLMTYPE as string,\n\t\tLCCADJUSTER as string,\n\t\tLCCTEXT as string,\n\t\tLCCREMARKS as string,\n\t\tLCCCURR as string,\n\t\tLCCAMOUNT as decimal(38,18),\n\t\tLCCRECOVERY as decimal(38,18),\n\t\tLCCSETTLEMENT as decimal(38,18),\n\t\tLCCGROSSAMOUNT as decimal(38,18),\n\t\tLCCGROSSSETTLE as decimal(38,18),\n\t\tLCCCAUSE as string,\n\t\tLCCPEAID as decimal(38,18),\n\t\tLCCCARRIAGEMETHOD as string,\n\t\tLCCCARGOTYPE as string,\n\t\tLCCRECOVYN as string,\n\t\tLCCRECOVCURR as string,\n\t\tLCCRECOVCOM as string,\n\t\tLCCUWSIGN as string,\n\t\tLCCCAUSETXT as string,\n\t\tLCCRULE as string,\n\t\tLCCINLITIGATION as string,\n\t\tLCCCLMAMTYNSW as string,\n\t\tLCCTRTMCO as decimal(38,18),\n\t\tLCCVOYAGEFR as string,\n\t\tLCCVOYAGETO as string,\n\t\tLCCCLMDET as string,\n\t\tLCCALLEGED1 as string,\n\t\tLCCALLEGED2 as string,\n\t\tLCCALLEGEDTXT as string,\n\t\tLCCADDDESCRLEV1 as string,\n\t\tLCCADDDESCRLEV2 as string,\n\t\tLCCADDDESCRLEV3 as string,\n\t\tLCCADDDESCRLEV4 as string,\n\t\tLCCADDITIONALTXT as string,\n\t\tLCCPOLLUTANT as string,\n\t\tLCCCLUPCOMMENCED as decimal(38,18),\n\t\tLCCCLUPCOMPLETED as decimal(38,18),\n\t\tLCCMAFFECTAREA as string,\n\t\tLCCMAFAREATXT as string,\n\t\tLCCROLECAT as string,\n\t\tLCCEMERGEVAC as string,\n\t\tLCCVESSDEVI as string,\n\t\tLCCFDUTY as decimal(38,18),\n\t\tLCCNPERSONS as decimal(38,18),\n\t\tLCCLOCONVESS as string,\n\t\tLCCLOCONVESSTXT as string,\n\t\tLCCEMBARKEDAT as string,\n\t\tLCCDISEMBARKEDAT as string,\n\t\tLCCEMBARKEDDATE as timestamp,\n\t\tLCCDISEMBARKEDDATE as timestamp,\n\t\tLCCLIGHTCCCID as string,\n\t\tLCCVISIBLCCCID as string,\n\t\tLCCRADNAVYNSW as string,\n\t\tLCCPILOTONBOARD as string,\n\t\tLCCPILOTNAME as string,\n\t\tLCCINITCONTPOINT as string,\n\t\tLCCMANOUVER as string,\n\t\tLCCMANOS as string,\n\t\tLCCOTHSHIPNAME as string,\n\t\tLCCCONSEQ as string,\n\t\tLCCCONSEQOS as string,\n\t\tLCCAMTDISPUNKNOWN as string,\n\t\tLCCJURISDICTION as string,\n\t\tLCCDECISION as decimal(38,18),\n\t\tLCCRECOVCCVID as decimal(38,18),\n\t\tLCCVOYFRISO as string,\n\t\tLCCVOYTOISO as string,\n\t\tLCCEMBARKISO as string,\n\t\tLCCDISEMBARKISO as string,\n\t\tLCCRULEOFCOV as string,\n\t\tLCCMFKEY as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> LCCTABLE\nsource(output(\n\t\tclm_source_system as string,\n\t\tclm_code as string,\n\t\tclm_source_key as string,\n\t\tinserted_by as string,\n\t\tlast_updated_by as string,\n\t\tdate_inserted as timestamp,\n\t\tdate_last_updated as timestamp,\n\t\tpk_key_clm as string,\n\t\tclm_description as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> ClaimType\nLCATABLE select(mapColumn(\n\t\tLCALCAID,\n\t\tLCACLMDATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RemoveUnusedLCAcolumns\nRemoveUnusedLCAcolumns, LCCTABLE join(LCALCAID == LCCLCAID,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> JoinLcaLccTables\nDeriveConstants derive(SUB_CLAIM_KEY = \"P{LCCLCAID}\",\n\t\tCLM_KEY = \"{SOURCE_SYSTEM}{LCCCLMTYPE}\",\n\t\tINC_KEY = \"P{LCALCAID}\"\r\n) ~> Expression\nJoinLcaLccTables derive(SOURCE_SYSTEM = 'PARIS',\n\t\tINSERTED_BY = 'M_PRE_DIM_SUB_CLAIM_ME',\n\t\tUPDATED_BY = currentDate('CET'),\n\t\tCODE_TYPE_ID = 797,\n\t\tZERO_VALUE = 0) ~> DeriveConstants\nExpression, ClaimType lookup(CLM_KEY == pk_key_clm,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'none')~> LookupClaimType\nLookupClaimType select(mapColumn(\n\t\tPK_KEY = SUB_CLAIM_KEY,\n\t\tSCL_SUB_CLAIM_TYPE_CODE = clm_code,\n\t\tSCL_SUB_CLAIM_TYPE_DESC = clm_description,\n\t\tSCL_INC_KEY = INC_KEY,\n\t\tINSERTED_BY = DeriveConstants@INSERTED_BY,\n\t\tLAST_UPDATED_BY = DeriveConstants@INSERTED_BY,\n\t\tDATE_LAST_UPDATED = UPDATED_BY,\n\t\tDATE_INSERTED = UPDATED_BY,\n\t\tSCL_GARD_SUB_CLAIM_ID = LCCMFKEY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectOutColumns\nSelectOutColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['pre_dim_sub_claim_new.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimSubClaim"
		}
	}
}