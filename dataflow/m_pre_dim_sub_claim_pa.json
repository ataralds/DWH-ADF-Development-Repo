{
	"name": "m_pre_dim_sub_claim_pa",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "Lcc"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "Lca"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tlccadddescrlev1 as string,\n\t\tlccadddescrlev2 as string,\n\t\tlccadddescrlev3 as string,\n\t\tlccadddescrlev4 as string,\n\t\tlccadditionaltxt as string,\n\t\tlccadjuster as string,\n\t\tlccalleged1 as string,\n\t\tlccalleged2 as string,\n\t\tlccallegedtxt as string,\n\t\tlccamount as decimal(38,18),\n\t\tlccamtdispunknown as string,\n\t\tlcccargotype as string,\n\t\tlcccarriagemethod as string,\n\t\tlcccause as string,\n\t\tlcccausetxt as string,\n\t\tlccclmamtynsw as string,\n\t\tlccclmdet as string,\n\t\tlccclmtype as string,\n\t\tlccclupcommenced as decimal(38,18),\n\t\tlccclupcompleted as decimal(38,18),\n\t\tlccconseq as string,\n\t\tlccconseqos as string,\n\t\tlcccurr as string,\n\t\tlccdecision as decimal(38,18),\n\t\tlccdisembarkedat as string,\n\t\tlccdisembarkeddate as timestamp,\n\t\tlccdisembarkiso as string,\n\t\tlccembarkedat as string,\n\t\tlccembarkeddate as timestamp,\n\t\tlccembarkiso as string,\n\t\tlccemergevac as string,\n\t\tlccfduty as decimal(38,18),\n\t\tlccgrossamount as decimal(38,18),\n\t\tlccgrosssettle as decimal(38,18),\n\t\tlcchandlebyclms as string,\n\t\tlccinitcontpoint as string,\n\t\tlccinlitigation as string,\n\t\tlccjurisdiction as string,\n\t\tlccladid as decimal(38,18),\n\t\tlcclcaid as string,\n\t\tlcclccid as string,\n\t\tlcclightcccid as string,\n\t\tlccln6 as decimal(38,18),\n\t\tlccloconvess as string,\n\t\tlccloconvesstxt as string,\n\t\tlccmafareatxt as string,\n\t\tlccmaffectarea as string,\n\t\tlccmanos as string,\n\t\tlccmanouver as string,\n\t\tlccmfkey as string,\n\t\tlccnpersons as decimal(38,18),\n\t\tlccothshipname as string,\n\t\tlccpeaid as decimal(38,18),\n\t\tlccpilotname as string,\n\t\tlccpilotonboard as string,\n\t\tlccpollutant as string,\n\t\tlccradnavynsw as string,\n\t\tlccrecovccvid as decimal(38,18),\n\t\tlccrecovcom as string,\n\t\tlccrecovcurr as string,\n\t\tlccrecovery as decimal(38,18),\n\t\tlccrecovyn as string,\n\t\tlccremarks as string,\n\t\tlccrolecat as string,\n\t\tlccrule as string,\n\t\tlccruleofcov as string,\n\t\tlccsettlement as decimal(38,18),\n\t\tlcctext as string,\n\t\tlcctrtmco as decimal(38,18),\n\t\tlccuwsign as string,\n\t\tlccvessdevi as string,\n\t\tlccvisiblcccid as string,\n\t\tlccvoyagefr as string,\n\t\tlccvoyageto as string,\n\t\tlccvoyfriso as string,\n\t\tlccvoytoiso as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> Lcc\nsource(output(\n\t\tlcaacstat as string,\n\t\tlcaadjsign as string,\n\t\tlcaagaid as string,\n\t\tlcaareacd as string,\n\t\tlcaareadescr as string,\n\t\tlcaautosetleyn as string,\n\t\tlcabigevent as string,\n\t\tlcabirtno as string,\n\t\tlcabonynsw as string,\n\t\tlcacagtyp as string,\n\t\tlcacalclamtfrinjured as string,\n\t\tlcacategorytype as string,\n\t\tlcacattype as string,\n\t\tlcaccod2 as string,\n\t\tlcaccod2date as timestamp,\n\t\tlcaccod2trmtdate as timestamp,\n\t\tlcaccod2txt35 as string,\n\t\tlcacefocc as string,\n\t\tlcacefocm as string,\n\t\tlcacefouc as string,\n\t\tlcaclintc as decimal(38,18),\n\t\tlcaclmcac as string,\n\t\tlcaclmdate as timestamp,\n\t\tlcaclmdatechd as string,\n\t\tlcaclmid as decimal(38,18),\n\t\tlcaclmintynsw as string,\n\t\tlcaclmn3 as decimal(38,18),\n\t\tlcaclmpeaid as decimal(38,18),\n\t\tlcaclmtype as string,\n\t\tlcaclodate as timestamp,\n\t\tlcacndid as string,\n\t\tlcacommonynsw as string,\n\t\tlcacompllevel as string,\n\t\tlcaconflictclm as string,\n\t\tlcacrdate as timestamp,\n\t\tlcacrobbid as string,\n\t\tlcacrsign as string,\n\t\tlcacyear as decimal(38,18),\n\t\tlcaecauseco as string,\n\t\tlcaecfid as string,\n\t\tlcaeclid as string,\n\t\tlcaecoid as string,\n\t\tlcaenassshr as decimal(38,18),\n\t\tlcaenintrst as string,\n\t\tlcaeuoffpros as decimal(38,18),\n\t\tlcaeuownpros as decimal(38,18),\n\t\tlcaexppdate as timestamp,\n\t\tlcaextadjynsw as string,\n\t\tlcaextclmid as string,\n\t\tlcafileref as decimal(38,18),\n\t\tlcafinalstatmdate as timestamp,\n\t\tlcafoadate as timestamp,\n\t\tlcafpareacd as string,\n\t\tlcafromareacd as string,\n\t\tlcageodescr as string,\n\t\tlcahour as decimal(38,18),\n\t\tlcaicaid as string,\n\t\tlcaimpexp as decimal(38,18),\n\t\tlcainsamt as decimal(38,18),\n\t\tlcainscurr as string,\n\t\tlcainsured as decimal(38,18),\n\t\tlcainsuredmno as string,\n\t\tlcainsuredmof as string,\n\t\tlcaintnote as string,\n\t\tlcaisrndcontrssigned as string,\n\t\tlcajurisdiction as string,\n\t\tlcaknvmark as string,\n\t\tlcalabid as string,\n\t\tlcalcaid as string,\n\t\tlcaldescr as string,\n\t\tlcaliabcode as decimal(38,18),\n\t\tlcaliabtxt as string,\n\t\tlcalimamt as decimal(38,18),\n\t\tlcalimcurr as string,\n\t\tlcalimdays as decimal(38,18),\n\t\tlcalimdedamt as decimal(38,18),\n\t\tlcalimrenewed as decimal(38,18),\n\t\tlcaloadate as timestamp,\n\t\tlcalodescr as string,\n\t\tlcalossco as string,\n\t\tlcalrgclmynsw as string,\n\t\tlcaltdate as timestamp,\n\t\tlcaludate as timestamp,\n\t\tlcalusign as string,\n\t\tlcamanhavsalaer as string,\n\t\tlcamfkey as string,\n\t\tlcamoveddate as timestamp,\n\t\tlcamovedsign as string,\n\t\tlcamovedto as string,\n\t\tlcamplamt as decimal(38,18),\n\t\tlcamplcurr as string,\n\t\tlcamuoffgrp as decimal(38,18),\n\t\tlcamuoffpros as decimal(38,18),\n\t\tlcamuownpros as decimal(38,18),\n\t\tlcan1nooftreatm as decimal(38,18),\n\t\tlcan2nooftreatm as decimal(38,18),\n\t\tlcan3nooftreatm as decimal(38,18),\n\t\tlcan4nooftreatm as decimal(38,18),\n\t\tlcan5nooftreatm as decimal(38,18),\n\t\tlcan6nooftreatm as decimal(38,18),\n\t\tlcan7nooftreatm as decimal(38,18),\n\t\tlcan8nooftreatm as decimal(38,18),\n\t\tlcancauseco as string,\n\t\tlcanextdate as timestamp,\n\t\tlcanextsign as string,\n\t\tlcanmclef as string,\n\t\tlcanoofpers as decimal(38,18),\n\t\tlcaobno as decimal(38,18),\n\t\tlcaoccoffdate as timestamp,\n\t\tlcaoccoffynsw as string,\n\t\tlcaoccownynsw as string,\n\t\tlcaoffice as decimal(38,18),\n\t\tlcaonoffs as decimal(38,18),\n\t\tlcaoutstm as string,\n\t\tlcapilotonboard as string,\n\t\tlcaportcccid as string,\n\t\tlcaportunlid as string,\n\t\tlcaprepayamtp as decimal(38,18),\n\t\tlcaprepaycurr as string,\n\t\tlcaprocess as string,\n\t\tlcarecovachamt as decimal(38,18),\n\t\tlcarecovachcurr as string,\n\t\tlcarecovachdate as timestamp,\n\t\tlcarecovachintnote as string,\n\t\tlcarecovachsign as string,\n\t\tlcarecovachynsw as string,\n\t\tlcarecovccvid as decimal(38,18),\n\t\tlcarecovpotamt as decimal(38,18),\n\t\tlcarecovpotcurr as string,\n\t\tlcarecovpotintnote as string,\n\t\tlcarecovpotynsw as string,\n\t\tlcarecovremdate as timestamp,\n\t\tlcareduceprem as string,\n\t\tlcaregamt as decimal(38,18),\n\t\tlcaregcurr as string,\n\t\tlcaregndate as timestamp,\n\t\tlcaregnsign as string,\n\t\tlcaregress as decimal(38,18),\n\t\tlcaregtext70 as string,\n\t\tlcarepdate as timestamp,\n\t\tlcaresumtionfrom as string,\n\t\tlcataucode as decimal(38,18),\n\t\tlcatautxt as string,\n\t\tlcataxno as string,\n\t\tlcatcauseco as string,\n\t\tlcatimnote as string,\n\t\tlcatlotype as decimal(38,18),\n\t\tlcatmcloludate as timestamp,\n\t\tlcatmclolusign as string,\n\t\tlcatmduedate as timestamp,\n\t\tlcatmextdocid as decimal(38,18),\n\t\tlcatmextduedate as timestamp,\n\t\tlcatmextludate as timestamp,\n\t\tlcatmextlusign as string,\n\t\tlcatmludate as timestamp,\n\t\tlcatmlusign as string,\n\t\tlcatmstatus as string,\n\t\tlcatoareacd as string,\n\t\tlcatranme as string,\n\t\tlcatranty as decimal(38,18),\n\t\tlcatrtmco as decimal(38,18),\n\t\tlcatzone as string,\n\t\tlcauwsign as string,\n\t\tlcawocdate as timestamp,\n\t\tlcawocstat as string,\n\t\tlcaworkplace as decimal(38,18),\n\t\tlcawrkclaim as decimal(38,18),\n\t\tlcawrkplccod as decimal(38,18),\n\t\tlcaxlmref as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> Lca\nLcc select(mapColumn(\n\t\teach(match(left(name,7)=='lccaddd')),\n\t\tlcclcaid,\n\t\tlccclmtype,\n\t\tlcclccid,\n\t\tlccmfkey,\n\t\tlccalleged1,\n\t\tlccalleged2,\n\t\tlcccarriagemethod,\n\t\tlcccause,\n\t\tlccloconvess,\n\t\tlccruleofcov,\n\t\tlcctext,\n\t\tlccclmdet\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1"
		}
	}
}