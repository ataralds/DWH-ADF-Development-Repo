{
	"name": "m_pre_dim_vessel_type_group",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_dim"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Oltp05",
						"type": "DatasetReference"
					},
					"name": "StaVesselTypeGroup"
				},
				{
					"dataset": {
						"referenceName": "Oltp05",
						"type": "DatasetReference"
					},
					"name": "StaRiskDriverGroup"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_dim_vessel_type_group",
						"type": "DatasetReference"
					},
					"name": "VesselTypeGroup"
				}
			],
			"transformations": [
				{
					"name": "RiskD1"
				},
				{
					"name": "VesslTypeGroup"
				},
				{
					"name": "RiskGroup1"
				},
				{
					"name": "RiskD2"
				},
				{
					"name": "Select1"
				},
				{
					"name": "RiskGroup2"
				},
				{
					"name": "Select2"
				},
				{
					"name": "CovertingtoInt"
				}
			],
			"script": "source(output(\n\t\tfk_gard_group as double,\n\t\tfk_rsk_driver_grp_1 as double,\n\t\tfk_rsk_driver_grp_2 as double,\n\t\tfk_rsk_driver_grp_3 as double,\n\t\tfk_rsk_driver_grp_4 as double,\n\t\tfk_rsk_driver_grp_5 as double,\n\t\tfk_rsk_driver_grp_6 as double,\n\t\tfk_rsk_driver_iv as double,\n\t\tfk_rsk_driver_loh as double,\n\t\tfk_rsk_driver_lvl3 as double,\n\t\tfk_rsk_driver_lvl4 as double,\n\t\tfk_rsk_driver_size as double,\n\t\tfk_rsk_grp_cargo as double,\n\t\tfk_rsk_grp_crew as double,\n\t\tfk_rsk_grp_hull as double,\n\t\tfk_rsk_grp_machinery as double,\n\t\tfk_rsk_grp_main as double,\n\t\tfk_rsk_grp_passenger as double,\n\t\tfk_rsk_grp_pollution as double,\n\t\tfk_rsk_grp_ri as double,\n\t\tfk_rsk_grp_size as double,\n\t\tfp_3_ltr_code as string,\n\t\tfp_level_5_code as string,\n\t\tfp_level_5_decode as string,\n\t\tfp_level_5_desc as string,\n\t\tfp_level_5_hull as double,\n\t\tfp_level_5_sub as string,\n\t\tinsert_date as timestamp,\n\t\tpk_vessel_type_group as double,\n\t\tupdate_date as timestamp,\n\t\tvsl_cefor_group as string,\n\t\tvsl_desc as string,\n\t\tvsl_gard_group as string,\n\t\tvsl_marine_group as string,\n\t\tvsl_risk_group as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> StaVesselTypeGroup\nsource(output(\n\t\tgroup_code as string,\n\t\tgroup_code_alternative as string,\n\t\tgroup_desc as string,\n\t\tgroup_desc_sort as string,\n\t\tgroup_name as string,\n\t\tpk_risk_driver_group as double,\n\t\ttable_name as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> StaRiskDriverGroup\nStaRiskDriverGroup select(mapColumn(\n\t\tvtg_main_group_level_1_code = group_code,\n\t\tvtg_main_group_level_1_desc = group_desc,\n\t\tvtg_main_group_level_1_sort = group_desc_sort,\n\t\tpk_risk_driver_group\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RiskD1\nStaVesselTypeGroup select(mapColumn(\n\t\tfk_rsk_driver_grp_1,\n\t\tfk_rsk_driver_grp_5,\n\t\tfp_3_ltr_code,\n\t\tinsert_date,\n\t\tpk_vessel_type_group,\n\t\tvsl_desc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> VesslTypeGroup\nVesslTypeGroup, RiskD1 join(fk_rsk_driver_grp_1 == pk_risk_driver_group,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> RiskGroup1\nStaRiskDriverGroup select(mapColumn(\n\t\tvtg_main_group_level_2_code = group_code,\n\t\tvtg_main_group_level_2_desc = group_desc,\n\t\tvtg_main_group_level_2_sort = group_desc_sort,\n\t\tpk_risk_driver_group\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RiskD2\nRiskGroup1 select(mapColumn(\n\t\tfk_rsk_driver_grp_5,\n\t\tvtg_key = fp_3_ltr_code,\n\t\tinsert_date,\n\t\tpk_vessel_type_group,\n\t\tvsl_desc,\n\t\tvtg_main_group_level_1_code,\n\t\tvtg_main_group_level_1_desc,\n\t\tvtg_main_group_level_1_sort,\n\t\tpk_risk_driver_group\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1, RiskD2 join(fk_rsk_driver_grp_5 == RiskD2@pk_risk_driver_group,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> RiskGroup2\nRiskGroup2 select(mapColumn(\n\t\tvtg_key,\n\t\tvtg_description = vsl_desc,\n\t\tvtg_main_group_level_1_code,\n\t\tvtg_main_group_level_1_desc,\n\t\tvtg_main_group_level_1_sort,\n\t\tvtg_main_group_level_2_code,\n\t\tvtg_main_group_level_2_desc,\n\t\tvtg_main_group_level_2_sort\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select2\nSelect2 derive(vtg_main_group_level_1_code = toInteger(vtg_main_group_level_1_code),\n\t\tvtg_main_group_level_2_code = toInteger(vtg_main_group_level_2_code)) ~> CovertingtoInt\nCovertingtoInt sink(input(\n\t\tPK_KEY as string,\n\t\tCPT_DESCRIPTION as string,\n\t\tCPT_NUMBER as integer,\n\t\tINSERTED_BY as string,\n\t\tDATE_INSERTED as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:['pre_dim_vessel_type_group.parquet'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> VesselTypeGroup"
		}
	}
}