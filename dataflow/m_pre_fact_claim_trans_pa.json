{
	"name": "m_pre_fact_claim_trans_pa",
	"properties": {
		"description": "Pre fact mapping for claim transactions, excluding guarantees and advance payments.",
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"name": "mapsys",
					"description": "source_system=='PARIS'"
				},
				{
					"name": "icatable"
				},
				{
					"name": "obbtable"
				},
				{
					"name": "obatable"
				},
				{
					"name": "aga"
				},
				{
					"name": "agz"
				},
				{
					"name": "fal"
				},
				{
					"name": "lca"
				},
				{
					"name": "lcc"
				},
				{
					"name": "lab"
				},
				{
					"name": "ina"
				},
				{
					"name": "fil"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "xrefCoverage"
				},
				{
					"name": "xrefBusinessarea"
				},
				{
					"name": "xrefExpense"
				},
				{
					"name": "expense"
				},
				{
					"name": "bua"
				},
				{
					"name": "cov"
				},
				{
					"name": "clmcat"
				},
				{
					"name": "xrefClaimcategory"
				},
				{
					"name": "agttype"
				},
				{
					"name": "xrefAgreementtype"
				},
				{
					"name": "fapcurr"
				},
				{
					"name": "xrefCurrencyFAP"
				},
				{
					"name": "icaoba"
				},
				{
					"name": "obaobb"
				},
				{
					"name": "icaendateObb"
				},
				{
					"name": "icaexchangedate"
				},
				{
					"name": "riskobject"
				}
			],
			"script": "source(output(\n\t\tcode_type_id as integer,\n\t\tsource_system as string,\n\t\ttarget_code as string,\n\t\ttarget_description as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> mapsys\nsource(output(\n\t\ticaicaid as string,\n\t\ticac1000prem as decimal(28,10),\n\t\ticauwaid as string,\n\t\ticadayamt as integer,\n\t\ticaagaid as string,\n\t\ticacadate as date,\n\t\ticafixownrnote as string,\n\t\ticamincurr as string,\n\t\ticariobjecttype as string,\n\t\ticachdate as date,\n\t\ticasondisc as decimal(28,10),\n\t\ticaas as decimal(28,10),\n\t\ticaobno as integer,\n\t\ticaeoamt as integer,\n\t\ticagt as integer,\n\t\ticastat3 as string,\n\t\ticaperspre as integer,\n\t\ticasthour as integer,\n\t\ticaexpendate as date,\n\t\ticapaymperc as decimal(28,10),\n\t\ticaenhour as integer,\n\t\ticaadmfeerate as decimal(28,10),\n\t\ticaprevyrate as decimal(28,10),\n\t\ticaexhausted as integer,\n\t\ticaourshare as decimal(28,10),\n\t\ticaunitamt as integer,\n\t\ticalaunchdate as date,\n\t\ticapmlamt as integer,\n\t\ticaoforder as decimal(28,10),\n\t\ticanoofpersons as integer,\n\t\ticatotamt as integer,\n\t\ticaoyrno as integer,\n\t\ticaprevyinstad as decimal(28,10),\n\t\ticasufix2 as string,\n\t\ticafixownrynsw as string,\n\t\ticaunitprem as decimal(28,10),\n\t\ticaaggregate as integer,\n\t\ticacrsign as string,\n\t\ticastdate as date,\n\t\ticaexpenhour as integer,\n\t\ticadeclaredamt as integer,\n\t\ticaamtcod as string,\n\t\ticacrdate as date,\n\t\ticawrshare as decimal(28,10),\n\t\ticapmlcurr as string,\n\t\ticaas as decimal(28,10),\n\t\ticaunits as decimal(28,10),\n\t\ticaeoamtcod as string,\n\t\ticadeliverydate as date,\n\t\ticaludate as date,\n\t\ticadeclaredamtlocal as integer,\n\t\ticaminpre as integer,\n\t\ticainaid as string,\n\t\ticatlorat as decimal(28,10),\n\t\ticarinote as string,\n\t\ticaprevynatpre as decimal(28,10),\n\t\ticaextndisc as decimal(28,10),\n\t\ticaextshare as decimal(28,10),\n\t\ticaas as decimal(28,10),\n\t\ticaprovst as integer,\n\t\ticaas as decimal(28,10),\n\t\ticadaysinall as decimal(28,10),\n\t\ticalusign as string,\n\t\ticacorrty as integer,\n\t\ticaavrperspre as decimal(28,10),\n\t\ticaindate as date,\n\t\ticalimldescr as string,\n\t\ticaendate as date,\n\t\ticaoyrto as integer,\n\t\ticacasign as string,\n\t\ticaexptext as string,\n\t\ticaas as string,\n\t\ticadednote as string,\n\t\ticaprwdate as date,\n\t\ticauwkey as string,\n\t\ticaprevypre as decimal(28,10),\n\t\ticacslynsw as string,\n\t\ticaowndisc as decimal(28,10),\n\t\ticawroforder as decimal(28,10),\n\t\ticapaymfreq as integer,\n\t\ticaamtlevel as integer,\n\t\ticacantxt as string,\n\t\ticachhour as integer,\n\t\ticapremgt as integer,\n\t\ticaprevyadmfee as decimal(28,10),\n\t\ticauwtotamt as integer,\n\t\ticaknvmark as string,\n\t\ticat1000prem as decimal(28,10),\n\t\ticacrobbid as string,\n\t\ticaoyrnote as string,\n\t\ticanote as string,\n\t\ticaosvolamt as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> icatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> obbtable\nsource(output(\n\t\tobaobno as integer,\n\t\tobalongtermrate as decimal(28,10),\n\t\tobaassetno as integer,\n\t\tobatrackit2 as string,\n\t\tobaimoynsw as string,\n\t\tobapeaid as integer,\n\t\tobaorgbui as integer,\n\t\tobaobrt as integer,\n\t\tobammsino as integer,\n\t\tobaoxno as integer,\n\t\tobatrackit3 as string,\n\t\tobacallno as string,\n\t\tobachassis as string,\n\t\tobalusign as string,\n\t\tobacomp2 as integer,\n\t\tobancsid as string,\n\t\tobaassetsubno as integer,\n\t\tobaorgbuiltmonth as integer,\n\t\tobatrackit as string,\n\t\tobanjcid as string,\n\t\tobaas as string,\n\t\tobanpcid as integer,\n\t\tobacrsign as string,\n\t\tobancnid as string,\n\t\tobancmid as string,\n\t\tobaknvmark as string,\n\t\tobaludate as date,\n\t\tobaextnote as string,\n\t\tobatrackit1 as string,\n\t\tobacrdate as date,\n\t\tobaimono as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> obatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> aga\nsource(output(\n\t\tagzagzid as string,\n\t\tagzbusntyp as integer,\n\t\tagzosnpml as integer,\n\t\tagzextadjynsw as string,\n\t\tagzepicurr as string,\n\t\tagzndisc as decimal(28,10),\n\t\tagztotind as decimal(28,10),\n\t\tagztogrosepi as integer,\n\t\tagzdefinstcalctype as integer,\n\t\tagzdefwarrsw as string,\n\t\tagztotpml as integer,\n\t\tagzaccadrpeaid as integer,\n\t\tagzcefoty as string,\n\t\tagzratind as decimal(28,10),\n\t\tagzwarrenty as integer,\n\t\tagzleadownline as string,\n\t\tagzdefinstpertype as integer,\n\t\tagzourlin as decimal(28,10),\n\t\tagzosnetepi as integer,\n\t\tagztonetepi as integer,\n\t\tagznoofemp as integer,\n\t\tagzgvalue as integer,\n\t\tagzfagntno as integer,\n\t\tagzamtcod as string,\n\t\tagzosgrosepi as integer,\n\t\tagzwrshare as decimal(28,10),\n\t\tagznoofobjepi as integer,\n\t\tagzcurrgrosepi as integer,\n\t\tagzactnodate as date,\n\t\tagzuwradrpeaid as integer,\n\t\tagzvescod as string,\n\t\tagzclmadrpeaid as integer,\n\t\tagztonpml as integer,\n\t\tagzwroforder as decimal(28,10),\n\t\tagzcshind as decimal(28,10),\n\t\tagzgtepi as integer,\n\t\tagzdefexchrate as decimal(28,10),\n\t\tagzdefcurr as string,\n\t\tagzclmlead as integer,\n\t\tagzinstadynz as string,\n\t\tagzcurrosgrosepi as integer,\n\t\tagzcedent as integer,\n\t\tagzactnoofemp as integer,\n\t\tagzoforder as decimal(28,10),\n\t\tagzcooroccynsw as string,\n\t\tagzdefas as string,\n\t\tagzordtxt35 as string,\n\t\tagzospml as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> agz\nsource(output(\n\t\tfalfalid as string,\n\t\tfalclmadrpeaid as integer,\n\t\tfalcovshare as decimal(28,10),\n\t\tfallcaid as string,\n\t\tfalacstat as string,\n\t\tfalmark as string,\n\t\tfallccid as string,\n\t\tfalcathbtid as integer,\n\t\tfalpgqid as string,\n\t\tfaladvcod as integer,\n\t\tfalas as decimal(28,10),\n\t\tfalbillingno as integer,\n\t\tfalreccur as string,\n\t\tfalagno as integer,\n\t\tfaluwbid as string,\n\t\tfalicaid as string,\n\t\tfalolddocno as integer,\n\t\tfalsettled as decimal(28,10),\n\t\tfaluwndisc as decimal(28,10),\n\t\tfalaccsw1 as string,\n\t\tfalagaid as string,\n\t\tfalbroker as integer,\n\t\tfalcomcod as string,\n\t\tfaloutcode as integer,\n\t\tfalfilid as string,\n\t\tfalpglbaccno as integer,\n\t\tfalshare as decimal(28,10),\n\t\tfalpaycod as integer,\n\t\tfalmailaddress as string,\n\t\tfalcedsecurno as integer,\n\t\tfalaccdescr as string,\n\t\tfalgenamtp as decimal(28,10),\n\t\tfalelremitdescr as string,\n\t\tfalcedent as integer,\n\t\tfaldedtamtp as decimal(28,10),\n\t\tfaliyear as integer,\n\t\tfalplgroup as integer,\n\t\tfalobno as integer,\n\t\tfalclmcat as string,\n\t\tfalsource as integer,\n\t\tfalaclcode as string,\n\t\tfalfblid as string,\n\t\tfalownret as decimal(28,10),\n\t\tfalln5 as integer,\n\t\tfalaccamtp as decimal(28,10),\n\t\tfalduedate as date,\n\t\tfalcctid as string,\n\t\tfalclmreserve as decimal(28,10),\n\t\tfalnsci as decimal(28,10),\n\t\tfaloutform as string,\n\t\tfaloridas as date,\n\t\tfalgencurr as string,\n\t\tfalrectamtp as decimal(28,10),\n\t\tfalbordadr as integer,\n\t\tfalbalance as decimal(28,10),\n\t\tfalinaid as string,\n\t\tfalcedsecisolan as string,\n\t\tfalduest as integer,\n\t\tfalaccpara as string,\n\t\tfalcurr as string,\n\t\tfaldescr50 as string,\n\t\tfaloutstanding as decimal(28,10),\n\t\tfaliuwid as string,\n\t\tfalbaldescr as string,\n\t\tfaldedcur as string,\n\t\tfalreaccn as string,\n\t\tfalrecamtp as decimal(28,10),\n\t\tfaldedamtp as decimal(28,10),\n\t\tfalinout as string,\n\t\tfalbordref as string,\n\t\tfalcashco as integer,\n\t\tfalaccadrpeaid as integer,\n\t\tfalnreaccnynsw as string,\n\t\tfalpglb as decimal(28,10),\n\t\tfalorgins as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> fal\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> lca\nsource(output(\n\t\tlccpilotname as string,\n\t\tlccclmtype as string,\n\t\tlcccarriagemethod as string,\n\t\tlccmaffectarea as string,\n\t\tlcccausetxt as string,\n\t\tlccfduty as integer,\n\t\tlccembarkiso as string,\n\t\tlcclcaid as string,\n\t\tlccrecovyn as string,\n\t\tlccgrosssettle as decimal(28,10),\n\t\tlccclmdet as string,\n\t\tlccadddescrlev4 as string,\n\t\tlccdisembarkeddate as date,\n\t\tlccruleofcov as string,\n\t\tlccmafareatxt as string,\n\t\tlccrule as string,\n\t\tlccdecision as integer,\n\t\tlccalleged2 as string,\n\t\tlccmanos as string,\n\t\tlccvisiblcccid as string,\n\t\tlccvessdevi as string,\n\t\tlccrecovcom as string,\n\t\tlccembarkedat as string,\n\t\tlccadditionaltxt as string,\n\t\tlccclupcommenced as integer,\n\t\tlccallegedtxt as string,\n\t\tlccmanouver as string,\n\t\tlccembarkeddate as date,\n\t\tlcchandlebyclms as string,\n\t\tlcctrtmco as integer,\n\t\tlccrecovccvid as integer,\n\t\tlccrecovcurr as string,\n\t\tlccothshipname as string,\n\t\tlccadddescrlev3 as string,\n\t\tlccln6 as integer,\n\t\tlccclupcompleted as integer,\n\t\tlcccause as string,\n\t\tlccvoyagefr as string,\n\t\tlcctext as string,\n\t\tlccloconvess as string,\n\t\tlccrolecat as string,\n\t\tlccamtdispunknown as string,\n\t\tlcccargotype as string,\n\t\tlccpeaid as integer,\n\t\tlccadjuster as string,\n\t\tlccvoyfriso as string,\n\t\tlccpilotonboard as string,\n\t\tlccdisembarkedat as string,\n\t\tlccemergevac as string,\n\t\tlccgrossamount as decimal(28,10),\n\t\tlccloconvesstxt as string,\n\t\tlccinitcontpoas as string,\n\t\tlcccurr as string,\n\t\tlccjurisdiction as string,\n\t\tlccalleged1 as string,\n\t\tlccamount as decimal(28,10),\n\t\tlccadddescrlev1 as string,\n\t\tlccdisembarkiso as string,\n\t\tlccclmamtynsw as string,\n\t\tlccvoyageto as string,\n\t\tlccuwsign as string,\n\t\tlcclccid as string,\n\t\tlccladid as integer,\n\t\tlccpollutant as string,\n\t\tlccconseq as string,\n\t\tlccinlitigation as string,\n\t\tlccmfkey as string,\n\t\tlcclightcccid as string,\n\t\tlccnpersons as integer,\n\t\tlccadddescrlev2 as string,\n\t\tlccsettlement as decimal(28,10),\n\t\tlccvoytoiso as string,\n\t\tlccconseqos as string,\n\t\tlccrecovery as decimal(28,10),\n\t\tlccradnavynsw as string,\n\t\tlccremarks as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> lcc\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> lab\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> ina\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false) ~> fil\ncov select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_cov' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefCoverage\nbua select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_bua' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefBusinessarea\nexpense select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_expense' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefExpense\nmapsys filter(ERROR_FUNCTION('')) ~> expense\nmapsys filter(code_type_id==106) ~> bua\nmapsys filter(code_type_id==122) ~> cov\nmapsys filter(code_type_id==797) ~> clmcat\nclmcat select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_clmcat' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefClaimcategory\nmapsys filter(code_type_id==113) ~> agttype\nagttype select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_agttype' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefAgreementtype\nmapsys filter(code_type_id==124) ~> fapcurr\nfapcurr select(mapColumn(\n\t\teach(match(name=='target_code'||name=='target_description'||name=='source_code_key'),\n\t\t\t$$+'_fapcurr' = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> xrefCurrencyFAP\nobatable, icatable join(obaobno == icaobno,\n\tjoinType:'right',\n\tbroadcast: 'none')~> icaoba\nicaoba, obbtable join(obaobno == obbobno,\n\tjoinType:'left',\n\tbroadcast: 'none')~> obaobb\nobaobb filter(lesserOrEqual(icaendate, coalesce(obbendate, toDate(toString(addDays(currentTimestamp(),-36500),'dd/mm/yyyy'))))\n && greaterOrEqual(icaendate, coalesce(obbendate, toDate(toString(addDays(currentTimestamp(),36500),'dd/mm/yyyy'))))) ~> icaendateObb\nicaendateObb derive(icaexchangedate = case(greaterOrEqual(icastdate, toDate(toString(currentTimestamp()),'dd/mm/yyyy')), toDate(toString(currentTimestamp()),'dd/mm/yyyy'), icastdate)) ~> icaexchangedate\nicaexchangedate select(mapColumn(\n\t\ticaicaid,\n\t\ticastdateexchange = icaexchangedate,\n\t\ticastdate,\n\t\tobaimono,\n\t\tobbcefoty,\n\t\ticachdate,\n\t\ticaourshare,\n\t\ticatotamt,\n\t\ticainaid\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> riskobject"
		}
	}
}