{
	"name": "m_pre_fact_guarantee_trans_pa",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "plgatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "plcatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "plabtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "picatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pinatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pagatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pagztable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pobatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pobbtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "tcrossreference"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "lgatable",
					"description": "Selected columns for Guarantee transactions"
				},
				{
					"name": "lcatable",
					"description": "Selected columns for claim"
				},
				{
					"name": "labtable",
					"description": "Main Event"
				},
				{
					"name": "icatable",
					"description": "Selected columns for Risk"
				},
				{
					"name": "inatable",
					"description": "Selected columns from Insurance"
				},
				{
					"name": "srcagatable",
					"description": "Selected columns for Agreement"
				},
				{
					"name": "srcagztable",
					"description": "Selected columns"
				},
				{
					"name": "agatable"
				},
				{
					"name": "scrobatable",
					"description": "Selected columns"
				},
				{
					"name": "srcobbtable",
					"description": "selected columns"
				},
				{
					"name": "obbtable"
				},
				{
					"name": "ParisCurrency",
					"description": "Source System=PARIS and code_type_id=124"
				},
				{
					"name": "XrefCurrency",
					"description": "Currency - 124"
				},
				{
					"name": "ParisAgreementType",
					"description": "Source System=Paris and code_type_id=113"
				},
				{
					"name": "XrefAgreementType",
					"description": "Agreement Type - 113"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_lgatable',\n\tformat: 'query') ~> plgatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.plcatable',\n\tformat: 'query') ~> plcatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_labtable',\n\tformat: 'query') ~> plabtable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_icatable',\n\tformat: 'query') ~> picatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_inatable',\n\tformat: 'query') ~> pinatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_agatable',\n\tformat: 'query') ~> pagatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_agztable',\n\tformat: 'query') ~> pagztable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_obatable',\n\tformat: 'query') ~> pobatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_obbtable',\n\tformat: 'query') ~> pobbtable\nsource(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference',\n\tformat: 'query') ~> tcrossreference\nplgatable select(mapColumn(\n\t\tlgacrdate,\n\t\tlgaendate,\n\t\tlgaguaamt,\n\t\tlgaguacurr,\n\t\tlgalcaid,\n\t\tlgalgaid,\n\t\tlgastatus,\n\t\tlgastdate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lgatable\nplcatable select(mapColumn(\n\t\tlcalcaid,\n\t\tlcauwsign,\n\t\tlcaicaid,\n\t\tlcalabid,\n\t\tlcacrsign,\n\t\tlcatrtmco,\n\t\tlcacefocc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lcatable\nplabtable select(mapColumn(\n\t\tlablabid,\n\t\tlabmainev\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> labtable\npicatable select(mapColumn(\n\t\ticaicaid,\n\t\ticainaid,\n\t\ticaagaid,\n\t\ticaobno,\n\t\ticastdate,\n\t\ticaendate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> icatable\npinatable select(mapColumn(\n\t\tinainaid,\n\t\tinaintrst,\n\t\tinaagaid,\n\t\tinamutual\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> inatable\npagatable select(mapColumn(\n\t\tagaagaid,\n\t\tagabusndiv,\n\t\tagauwsign,\n\t\tagaareacd,\n\t\tagabusncla,\n\t\tagaorgins,\n\t\tagastdate,\n\t\tagaiyear,\n\t\tagaagno,\n\t\tagaisic,\n\t\tagasource,\n\t\tagabusnsec\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> srcagatable\npagztable select(mapColumn(\n\t\tagzagzid,\n\t\tagzfagntno\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> srcagztable\nsrcagatable, srcagztable join(agaagaid == agzagzid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> agatable\npobatable select(mapColumn(\n\t\tobaimono,\n\t\tobaobno\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> scrobatable\npobbtable select(mapColumn(\n\t\tobbobbid,\n\t\tobbobno,\n\t\tobbcefoty,\n\t\tobbstdate,\n\t\tobbendate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> srcobbtable\nscrobatable, srcobbtable join(obaobno == obbobno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> obbtable\ntcrossreference filter(source_system=='PARIS' && code_type_id==124) ~> ParisCurrency\nParisCurrency select(mapColumn(\n\t\tsource_code_key,\n\t\ttarget_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefCurrency\ntcrossreference filter(source_system=='PARIS' && code_type_id==113) ~> ParisAgreementType\nParisAgreementType select(mapColumn(\n\t\tsource_code_key,\n\t\ttarget_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefAgreementType"
		}
	}
}