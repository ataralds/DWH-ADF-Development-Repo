{
	"name": "m_pre_fact_guarantee_trans_pa",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "plgatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "plcatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "plabtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "picatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pinatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pagatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pagztable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pobatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pobbtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "tcrossreference",
					"description": "Source System=Paris"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "HlpExchangeRateUsd"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "SrcPreDimPartner"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "SrcPreDimClaimType"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "lgatable",
					"description": "Selected columns for Guarantee transactions"
				},
				{
					"name": "lcatable",
					"description": "Selected columns for claim"
				},
				{
					"name": "labtable",
					"description": "Main Event"
				},
				{
					"name": "icatable",
					"description": "Selected columns for Risk"
				},
				{
					"name": "inatable",
					"description": "Selected columns from Insurance"
				},
				{
					"name": "srcagatable",
					"description": "Selected columns for Agreement"
				},
				{
					"name": "srcagztable",
					"description": "Selected columns"
				},
				{
					"name": "agatable"
				},
				{
					"name": "scrobatable",
					"description": "Selected columns"
				},
				{
					"name": "srcobbtable",
					"description": "selected columns"
				},
				{
					"name": "obbtable"
				},
				{
					"name": "ParisCurrency",
					"description": "code_type_id=124"
				},
				{
					"name": "XrefCurrency",
					"description": "Currency - 124"
				},
				{
					"name": "ParisAgreementType",
					"description": "code_type_id=113"
				},
				{
					"name": "XrefAgreementType",
					"description": "Agreement Type - 113"
				},
				{
					"name": "ParisBusinessArea",
					"description": "code_type_id=106"
				},
				{
					"name": "XrefBusinessArea",
					"description": "Business Area - 106"
				},
				{
					"name": "JoinLgaLca"
				},
				{
					"name": "JoinLgaLab"
				},
				{
					"name": "JoinLgaIca"
				},
				{
					"name": "JoinLgaIna"
				},
				{
					"name": "JoinLgaAga"
				},
				{
					"name": "JoinLgaObb"
				},
				{
					"name": "ObbVersion",
					"description": "Icaendate between obbstdate and obbendate"
				},
				{
					"name": "ParisCoverage",
					"description": "code_type_id=122"
				},
				{
					"name": "XrefCoverage",
					"description": "Coverage - 122"
				},
				{
					"name": "JoinToAgreementType"
				},
				{
					"name": "Converting",
					"description": "Create lookup columns. Concatenation and convertion."
				},
				{
					"name": "JoinToCoverage"
				},
				{
					"name": "JoinToBusinessArea"
				},
				{
					"name": "JoinToCurrency"
				},
				{
					"name": "ExchangeRateUsd"
				},
				{
					"name": "JoinToExchangeRate"
				},
				{
					"name": "FilterOnExchangeDate"
				},
				{
					"name": "PreDimBroker",
					"description": "Pre Dim Broker - pk_key"
				},
				{
					"name": "JoinPreDimBroker"
				},
				{
					"name": "RenameColumns",
					"description": "Rename columns"
				},
				{
					"name": "SetNaValues",
					"description": "Set N/A values"
				},
				{
					"name": "ParisCapitalBranch"
				},
				{
					"name": "XrefCapitalBranch",
					"description": "Capital Branch - 464"
				},
				{
					"name": "JoinToCapitalBranch"
				},
				{
					"name": "ParisEmployee",
					"description": "code_type_id=329"
				},
				{
					"name": "XrefClaimsHandler",
					"description": "Claims Handler - 329"
				},
				{
					"name": "JoinToClaimsHandler"
				},
				{
					"name": "PreDimClaimType"
				},
				{
					"name": "JoinToPreDimClaimType"
				},
				{
					"name": "ParisCountry",
					"description": "code_type_id=50"
				},
				{
					"name": "XrefCountry",
					"description": "Country - 50"
				},
				{
					"name": "JoinToCountry"
				}
			],
			"script": "source(output(\n\t\tlgalgaid as string,\n\t\tlgaintynsw as string,\n\t\tlgaclmcat as string,\n\t\tlgacrdate as date,\n\t\tlgajurisdiction as string,\n\t\tlgacrcode as string,\n\t\tlgacandate as date,\n\t\tlgaguaamt as long,\n\t\tlgaintnote as string,\n\t\tlgaludate as date,\n\t\tlgalusign as string,\n\t\tlgaclmtype as string,\n\t\tlgalccid as string,\n\t\tlgacrcrsign as string,\n\t\tlgareceiver as long,\n\t\tlgalcaid as string,\n\t\tlgastdate as date,\n\t\tlgaguacurr as string,\n\t\tlgastatus as string,\n\t\tlgacrcrdate as date,\n\t\tlgaendate as date,\n\t\tlgaobopeaid as long,\n\t\tlgaknvmark as string,\n\t\tlgacrynsw as string,\n\t\tlgaln2 as integer,\n\t\tlgacrsign as string,\n\t\tlgacrlgaid as string,\n\t\tlgaobocname as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_lgatable',\n\tformat: 'query') ~> plgatable\nsource(output(\n\t\tlcalcaid as string,\n\t\tlcainsured as long,\n\t\tlcaoccoffynsw as string,\n\t\tlcacefocm as string,\n\t\tlcataxno as string,\n\t\tlcamuoffpros as decimal(28,10),\n\t\tlcaeuoffpros as decimal(28,10),\n\t\tlcatmludate as date,\n\t\tlcacattype as string,\n\t\tlcaconflictclm as string,\n\t\tlcanextsign as string,\n\t\tlcaoccoffdate as date,\n\t\tlcatlotype as integer,\n\t\tlcaecfid as string,\n\t\tlcaoffice as integer,\n\t\tlcaadjsign as string,\n\t\tlcan2nooftreatm as short,\n\t\tlcaclmid as integer,\n\t\tlcan1nooftreatm as short,\n\t\tlcaliabcode as short,\n\t\tlcafromareacd as string,\n\t\tlcacommonynsw as string,\n\t\tlcaclmpeaid as long,\n\t\tlcacrobbid as string,\n\t\tlcanextdate as date,\n\t\tlcamovedto as string,\n\t\tlcatzone as string,\n\t\tlcatmduedate as date,\n\t\tlcamoveddate as date,\n\t\tlcawrkclaim as integer,\n\t\tlcaacstat as string,\n\t\tlcacrdate as date,\n\t\tlcaliabtxt as string,\n\t\tlcatranme as string,\n\t\tlcaoccownynsw as string,\n\t\tlcafileref as integer,\n\t\tlcatmextlusign as string,\n\t\tlcamuoffgrp as integer,\n\t\tlcaltdate as date,\n\t\tlcaicaid as string,\n\t\tlcaworkplace as long,\n\t\tlcacategorytype as string,\n\t\tlcaprocess as string,\n\t\tlcawrkplccod as integer,\n\t\tlcarecovachamt as long,\n\t\tlcaccod2date as date,\n\t\tlcaresumtionfrom as string,\n\t\tlcaagaid as string,\n\t\tlcalimamt as long,\n\t\tlcan6nooftreatm as short,\n\t\tlcatmclolusign as string,\n\t\tlcaknvmark as string,\n\t\tlcarecovachynsw as string,\n\t\tlcaclmn3 as short,\n\t\tlcaccod2trmtdate as date,\n\t\tlcaloadate as date,\n\t\tlcarecovpotintnote as string,\n\t\tlcalusign as string,\n\t\tlcainsuredmof as string,\n\t\tlcacndid as string,\n\t\tlcatmextduedate as date,\n\t\tlcatoareacd as string,\n\t\tlcacrsign as string,\n\t\tlcaextclmid as string,\n\t\tlcarecovachcurr as string,\n\t\tlcabonynsw as string,\n\t\tlcatautxt as string,\n\t\tlcan4nooftreatm as short,\n\t\tlcabigevent as string,\n\t\tlcatcauseco as string,\n\t\tlcaisrndcontrssigned as string,\n\t\tlcawocdate as date,\n\t\tlcaonoffs as integer,\n\t\tlcaclodate as date,\n\t\tlcaextadjynsw as string,\n\t\tlcan5nooftreatm as short,\n\t\tlcaeclid as string,\n\t\tlcarecovachintnote as string,\n\t\tlcarecovpotamt as long,\n\t\tlcalimdedamt as long,\n\t\tlcarecovachdate as date,\n\t\tlcan3nooftreatm as short,\n\t\tlcatmextdocid as long,\n\t\tlcageodescr as string,\n\t\tlcaccod2txt35 as string,\n\t\tlcaclintc as integer,\n\t\tlcaautosetleyn as string,\n\t\tlcaregnsign as string,\n\t\tlcaenintrst as string,\n\t\tlcan8nooftreatm as short,\n\t\tlcaregress as integer,\n\t\tlcaportcccid as string,\n\t\tlcacompllevel as string,\n\t\tlcaregtext70 as string,\n\t\tlcaexppdate as date,\n\t\tlcalimrenewed as integer,\n\t\tlcaimpexp as integer,\n\t\tlcafoadate as date,\n\t\tlcalimdays as decimal(28,10),\n\t\tlcarecovremdate as date,\n\t\tlcareduceprem as string,\n\t\tlcataucode as short,\n\t\tlcaareacd as string,\n\t\tlcatimnote as string,\n\t\tlcaregndate as date,\n\t\tlcaeuownpros as decimal(28,10),\n\t\tlcarepdate as date,\n\t\tlcaintnote as string,\n\t\tlcaobno as integer,\n\t\tlcamovedsign as string,\n\t\tlcaecauseco as string,\n\t\tlcacefouc as string,\n\t\tlcaclmdatechd as string,\n\t\tlcafinalstatmdate as date,\n\t\tlcaclmintynsw as string,\n\t\tlcalodescr as string,\n\t\tlcarecovpotcurr as string,\n\t\tlcarecovachsign as string,\n\t\tlcaccod2 as string,\n\t\tlcaclmtype as string,\n\t\tlcalrgclmynsw as string,\n\t\tlcacalclamtfrinjured as string,\n\t\tlcaareadescr as string,\n\t\tlcaxlmref as string,\n\t\tlcatranty as integer,\n\t\tlcaprepaycurr as string,\n\t\tlcamanhavsalaer as string,\n\t\tlcahour as short,\n\t\tlcaoutstm as string,\n\t\tlcatmextludate as date,\n\t\tlcarecovccvid as short,\n\t\tlcalimcurr as string,\n\t\tlcacyear as short,\n\t\tlcacagtyp as string,\n\t\tlcapilotonboard as string,\n\t\tlcainsamt as long,\n\t\tlcaportunlid as string,\n\t\tlcainsuredmno as string,\n\t\tlcabirtno as string,\n\t\tlcaclmdate as date,\n\t\tlcamfkey as string,\n\t\tlcarecovpotynsw as string,\n\t\tlcatmcloludate as date,\n\t\tlcaregamt as long,\n\t\tlcaecoid as string,\n\t\tlcafpareacd as string,\n\t\tlcancauseco as string,\n\t\tlcalabid as string,\n\t\tlcatmlusign as string,\n\t\tlcaldescr as string,\n\t\tlcanoofpers as integer,\n\t\tlcauwsign as string,\n\t\tlcawocstat as string,\n\t\tlcaludate as date,\n\t\tlcamplamt as long,\n\t\tlcan7nooftreatm as short,\n\t\tlcanmclef as string,\n\t\tlcaregcurr as string,\n\t\tlcalossco as string,\n\t\tlcainscurr as string,\n\t\tlcamuownpros as decimal(28,10),\n\t\tlcajurisdiction as string,\n\t\tlcaclmcac as string,\n\t\tlcaenassshr as decimal(28,10),\n\t\tlcaprepayamtp as decimal(28,10),\n\t\tlcatmstatus as string,\n\t\tlcacefocc as string,\n\t\tlcatrtmco as integer,\n\t\tlcamplcurr as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_lcatable',\n\tformat: 'query') ~> plcatable\nsource(output(\n\t\tlablabid as string,\n\t\tlabtime as short,\n\t\tlablodescr as string,\n\t\tlabmainev as string,\n\t\tlabomclmtype as string,\n\t\tlabagtype as integer,\n\t\tlablaaid as string,\n\t\tlabbigevent as string,\n\t\tlabknvmark as string,\n\t\tlabportcccid as string,\n\t\tlabevno as short,\n\t\tlabclmsta as string,\n\t\tlabportunlid as string,\n\t\tlabareacd as string,\n\t\tlabtzone as string,\n\t\tlabclmdate as date,\n\t\tlabacarea as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_labtable',\n\tformat: 'query') ~> plabtable\nsource(output(\n\t\ticaicaid as string,\n\t\ticac1000prem as decimal(28,10),\n\t\ticauwaid as string,\n\t\ticadayamt as long,\n\t\ticaagaid as string,\n\t\ticacadate as date,\n\t\ticafixownrnote as string,\n\t\ticamincurr as string,\n\t\ticariobjecttype as string,\n\t\ticachdate as date,\n\t\ticasondisc as decimal(28,10),\n\t\ticaintgrlag as decimal(28,10),\n\t\ticaobno as integer,\n\t\ticaeoamt as long,\n\t\ticagt as integer,\n\t\ticastat3 as string,\n\t\ticaperspre as integer,\n\t\ticasthour as short,\n\t\ticaexpendate as date,\n\t\ticapaymperc as decimal(28,10),\n\t\ticaenhour as short,\n\t\ticaadmfeerate as decimal(28,10),\n\t\ticaprevyrate as decimal(28,10),\n\t\ticaexhausted as long,\n\t\ticaourshare as decimal(28,10),\n\t\ticaunitamt as long,\n\t\ticalaunchdate as date,\n\t\ticapmlamt as long,\n\t\ticaoforder as decimal(28,10),\n\t\ticanoofpersons as integer,\n\t\ticatotamt as long,\n\t\ticaoyrno as integer,\n\t\ticaprevyinstad as decimal(28,10),\n\t\ticasufix2 as string,\n\t\ticafixownrynsw as string,\n\t\ticaunitprem as decimal(28,10),\n\t\ticaaggregate as long,\n\t\ticacrsign as string,\n\t\ticastdate as date,\n\t\ticaexpenhour as short,\n\t\ticadeclaredamt as long,\n\t\ticaamtcod as string,\n\t\ticacrdate as date,\n\t\ticawrshare as decimal(28,10),\n\t\ticapmlcurr as string,\n\t\ticaintosprem as decimal(28,10),\n\t\ticaunits as decimal(28,10),\n\t\ticaeoamtcod as string,\n\t\ticadeliverydate as date,\n\t\ticaludate as date,\n\t\ticadeclaredamtlocal as long,\n\t\ticaminpre as integer,\n\t\ticainaid as string,\n\t\ticatlorat as decimal(28,10),\n\t\ticarinote as string,\n\t\ticaprevynatpre as decimal(28,10),\n\t\ticaextndisc as decimal(28,10),\n\t\ticaextshare as decimal(28,10),\n\t\ticaint100prem as decimal(28,10),\n\t\ticaprovst as integer,\n\t\ticaintrate as decimal(28,10),\n\t\ticadaysinall as decimal(28,10),\n\t\ticalusign as string,\n\t\ticacorrty as integer,\n\t\ticaavrperspre as decimal(28,10),\n\t\ticaindate as date,\n\t\ticalimldescr as string,\n\t\ticaendate as date,\n\t\ticaoyrto as integer,\n\t\ticacasign as string,\n\t\ticaexptext as string,\n\t\ticaintcurr as string,\n\t\ticadednote as string,\n\t\ticaprwdate as date,\n\t\ticauwkey as string,\n\t\ticaprevypre as decimal(28,10),\n\t\ticacslynsw as string,\n\t\ticaowndisc as decimal(28,10),\n\t\ticawroforder as decimal(28,10),\n\t\ticapaymfreq as integer,\n\t\ticaamtlevel as integer,\n\t\ticacantxt as string,\n\t\ticachhour as short,\n\t\ticapremgt as long,\n\t\ticaprevyadmfee as decimal(28,10),\n\t\ticauwtotamt as long,\n\t\ticaknvmark as string,\n\t\ticat1000prem as decimal(28,10),\n\t\ticacrobbid as string,\n\t\ticaoyrnote as string,\n\t\ticanote as string,\n\t\ticaosvolamt as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_icatable',\n\tformat: 'query') ~> picatable\nsource(output(\n\t\tinaslipref as string,\n\t\tinaisaid as string,\n\t\tinaseasonynsw as string,\n\t\tinabusnsubcla as integer,\n\t\tinarentxt as string,\n\t\tinainaid as string,\n\t\tinavoyagededynsw as string,\n\t\tinamutual as string,\n\t\tinalostcode as string,\n\t\tinacedent as long,\n\t\tinauwradrpeaid as long,\n\t\tinalusign as string,\n\t\tinaintnote as string,\n\t\tinaetcpremium as string,\n\t\tinalosttxt35 as string,\n\t\tinanatsw as string,\n\t\tinacapoty as integer,\n\t\tinaretyp as integer,\n\t\tinaobno as integer,\n\t\tinawarranty2 as short,\n\t\tinaintyp as integer,\n\t\tinacondset as string,\n\t\tinainno as integer,\n\t\tinaseasonnote as string,\n\t\tinalosstxt35 as string,\n\t\tinaoperatingname as string,\n\t\tinaoperator as long,\n\t\tinaitemno as string,\n\t\tinaclmadrpeaid as long,\n\t\tinaborind as string,\n\t\tinainttype as string,\n\t\tinanopers as integer,\n\t\tinaebusnsubcla as integer,\n\t\tinainktp as string,\n\t\tinareinynsw as string,\n\t\tinafileref as integer,\n\t\tinaob100e as string,\n\t\tinarencod as integer,\n\t\tinagroup as integer,\n\t\tinaimpexp as integer,\n\t\tinawarrsw as string,\n\t\tinacondco as short,\n\t\tinarenewswitches as string,\n\t\tinaordertxt35 as string,\n\t\tinaoxrefid as string,\n\t\tinausecod as string,\n\t\tinaindex as integer,\n\t\tinaknvmark as string,\n\t\tinaaccadrpeaid as long,\n\t\tinapayer as long,\n\t\tinaseasonmonthp as decimal(28,10),\n\t\tinafortcode as short,\n\t\tinaagaid as string,\n\t\tinasmallcraft as string,\n\t\tinasufix1 as string,\n\t\tinaag100e as string,\n\t\tinareinnoof as integer,\n\t\tinaetcdonedate as date,\n\t\tinatzone as string,\n\t\tinaclmlead as long,\n\t\tinacrsign as string,\n\t\tinacrobbid as string,\n\t\tinareinshare as decimal(28,10),\n\t\tinaoxno as integer,\n\t\tinataxcod as string,\n\t\tinapiffotype as integer,\n\t\tinastat1 as string,\n\t\tinatocefo as string,\n\t\tinalocpolissued as string,\n\t\tinastopsettlement as string,\n\t\tinabusntyp as integer,\n\t\tinadwbsname as string,\n\t\tinamainin as string,\n\t\tinatrdescr as string,\n\t\tinacurr as string,\n\t\tinapnote as string,\n\t\tinacrdate as date,\n\t\tinapofid as string,\n\t\tinacshind as decimal(28,10),\n\t\tinaareacd as string,\n\t\tinaassetno as long,\n\t\tinacroynsw as string,\n\t\tinaratind as decimal(28,10),\n\t\tinaludate as date,\n\t\tinadescr6 as string,\n\t\tinartlead as long,\n\t\tinaordercode as string,\n\t\tinaiyear as short,\n\t\tinapirdctype as integer,\n\t\tinacooroccynsw as string,\n\t\tinaintrst as string,\n\t\tinataxexternal as string,\n\t\tinarenfieldsman as string,\n\t\tinariscod as integer,\n\t\tinaitaid as string,\n\t\tinapintsh as decimal(28,10),\n\t\tinadescr7 as string,\n\t\tinatotind as decimal(28,10),\n\t\tinaratema as string,\n\t\tinaassetsubno as long,\n\t\tinawarrenty as short,\n\t\tinaetcdone as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_inatable',\n\tformat: 'query') ~> pinatable\nsource(output(\n\t\tagaagaid as string,\n\t\tagaincprovpros as decimal(28,10),\n\t\tagaalgid as string,\n\t\tagaausign as string,\n\t\tagagen2peaid as long,\n\t\tagacontinsagno as integer,\n\t\tagacantxt as string,\n\t\tagagen2ynsw as string,\n\t\tagaswo as string,\n\t\tagareftxt as string,\n\t\tagaremove as integer,\n\t\tagalusign as string,\n\t\tagawnttext35 as string,\n\t\tagaclosesign as string,\n\t\tagaareacd as string,\n\t\tagacomfacnote as string,\n\t\tagaconsrnote as string,\n\t\tagachartradeteam as string,\n\t\tagabusnregion as integer,\n\t\tagaagtype as integer,\n\t\tagaiyear as short,\n\t\tagagen3ynsw as string,\n\t\tagaassetsubno as long,\n\t\tagagmonth as integer,\n\t\tagadatcan as date,\n\t\tagaavttrkeep as string,\n\t\tagawbscust as string,\n\t\tagapeoid as string,\n\t\tagasalesdiv as long,\n\t\tagafixprynsw as string,\n\t\tagacompdiscnote as string,\n\t\tagacomfacynsw as string,\n\t\tagarencod as integer,\n\t\tagausecod as string,\n\t\tagaminpre as integer,\n\t\tagaxmedynsw as string,\n\t\tagaincrebkeep as string,\n\t\tagaavttrstatus as string,\n\t\tagahealthdate as date,\n\t\tagatrackit3 as string,\n\t\tagawbs as string,\n\t\tagaenhour as short,\n\t\tagahealthynsw as string,\n\t\tagagen3note as string,\n\t\tagaufafpynsw as string,\n\t\tagadatpca as date,\n\t\tagagen1note as string,\n\t\tagabusndiv as integer,\n\t\tagacomp2 as integer,\n\t\tagastat2 as string,\n\t\tagauwsign as string,\n\t\tagacomtarpeaid as long,\n\t\tagacloseynsw as string,\n\t\taganumpers as integer,\n\t\tagaknvmark as string,\n\t\tagalostcode as string,\n\t\tagaorgcrdate as date,\n\t\tagaagno as integer,\n\t\tagalosttxt35 as string,\n\t\tagagen1ynsw as string,\n\t\tagagen3peaid as long,\n\t\tagatrackit1 as string,\n\t\tagaktocred as long,\n\t\tagamgrpnote as string,\n\t\tagacompdisckeep as string,\n\t\tagagen1peaid as long,\n\t\tagagen2keep as string,\n\t\tagabusnsec as integer,\n\t\tagacomtarynsw as string,\n\t\tagaoxrefid as string,\n\t\tagacomfacpeaid as long,\n\t\tagaskipinstadynsw as string,\n\t\tagatrackit2 as string,\n\t\tagapictype as string,\n\t\tagafixprpeaid as long,\n\t\tagadwbs as string,\n\t\tagauat as string,\n\t\tagaincprovynsw as string,\n\t\tagansalecom as decimal(28,10),\n\t\tagawntynsw as string,\n\t\tagaclosedate as date,\n\t\tagaincprovpeaid as long,\n\t\tagashut as string,\n\t\tagaadmcode as string,\n\t\tagafixprnote as string,\n\t\tagaconsrynsw as string,\n\t\tagaliabendate as date,\n\t\tagaeldocynsw as string,\n\t\tagaoyrno as integer,\n\t\tagacrdate as date,\n\t\tagaeosign as string,\n\t\tagaadjsign as string,\n\t\tagaratemodel as integer,\n\t\tagagen2note as string,\n\t\tagaavttrpros as decimal(28,10),\n\t\tagasettldetprt as string,\n\t\tagaordercode as string,\n\t\tagabusncla as integer,\n\t\tagacompdiscynsw as string,\n\t\tagaoyrnote as string,\n\t\tagaktocust as long,\n\t\tagaincrebpros as decimal(28,10),\n\t\tagacashbefcovdate as date,\n\t\tagatrackit as string,\n\t\tagaclasstype as string,\n\t\tagacompdiscpeaid as long,\n\t\tagaoiltyp as integer,\n\t\tagaconcern as long,\n\t\tagaindustrytxt as string,\n\t\tagaludate as date,\n\t\tagaorgins as long,\n\t\taganoterm as integer,\n\t\tagainstti as string,\n\t\tagafromcomp as long,\n\t\tagarentxt as string,\n\t\tagagen2prov as decimal(28,10),\n\t\tagaktodeb as long,\n\t\tagalongname as string,\n\t\tagamgrpynsw as string,\n\t\tagacompdiscpros as decimal(28,10),\n\t\tagalocpolissued as string,\n\t\tagaintnote as string,\n\t\tagarefcod as string,\n\t\tagastdate as date,\n\t\tagacomtarstkynsw as string,\n\t\tagaautoconpol as string,\n\t\tagaxmednote as string,\n\t\tagastat1 as string,\n\t\tagaratcod as string,\n\t\tagarenbatchid as integer,\n\t\tagadatora as date,\n\t\tagacomtarnote as string,\n\t\tagaxmedpeaid as long,\n\t\tagawntnocperiod as decimal(28,10),\n\t\tagaclmuat as string,\n\t\tagasthour as short,\n\t\tagagtype as string,\n\t\tagacontinsynsw as string,\n\t\tagacumul as string,\n\t\tagaincrebynsw as string,\n\t\tagaagname as string,\n\t\tagamaiper as integer,\n\t\tagagen1prov as decimal(28,10),\n\t\tagagen1keep as string,\n\t\tagastateareacd as string,\n\t\tagaconnectsw as string,\n\t\tagasource as long,\n\t\tagatreatas as string,\n\t\tagaendate as date,\n\t\tagadatore as date,\n\t\tagatzone as string,\n\t\tagaoyrto as integer,\n\t\tagacontinsagaid as string,\n\t\tagapwfrdate as date,\n\t\tagasitid as string,\n\t\tagasetfreq as integer,\n\t\tagabusnbranch as integer,\n\t\taganscomynsw as string,\n\t\tagafileref as integer,\n\t\tagagen3keep as string,\n\t\tagaisic as string,\n\t\tagamincurr as string,\n\t\tagaavttrpeaid as long,\n\t\tagapwcode as integer,\n\t\tagaagnorf as integer,\n\t\tagaavttrnote as string,\n\t\tagatocomp as long,\n\t\tagaclmsign as string,\n\t\tagaavttrynsw as string,\n\t\tagaoxno as integer,\n\t\tagagen3prov as decimal(28,10),\n\t\tagaoffice as integer,\n\t\tagaincrebpeaid as long,\n\t\tagaincrebnote as string,\n\t\tagaopencover as string,\n\t\tagagident as string,\n\t\tagausage as string,\n\t\tagaentrytype as string,\n\t\tagaturnover as long,\n\t\tagacrsign as string,\n\t\tagacomtarstknote as string,\n\t\tagadatest as date,\n\t\tagaincprovnote as string,\n\t\tagagday as integer,\n\t\tagadecltyp as string,\n\t\tagacashbeforecover as string,\n\t\tagaccpid as string,\n\t\tagaassetno as long,\n\t\tagaordertxt35 as string,\n\t\tagaincprovkeep as string,\n\t\tagaelinvynsw as string,\n\t\tagacomtarstkpeaid as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_agatable',\n\tformat: 'query') ~> pagatable\nsource(output(\n\t\tagzagzid as string,\n\t\tagzbusntyp as integer,\n\t\tagzosnpml as long,\n\t\tagzextadjynsw as string,\n\t\tagzepicurr as string,\n\t\tagzndisc as decimal(28,10),\n\t\tagztotind as decimal(28,10),\n\t\tagztogrosepi as long,\n\t\tagzdefinstcalctype as integer,\n\t\tagzdefwarrsw as string,\n\t\tagztotpml as long,\n\t\tagzaccadrpeaid as long,\n\t\tagzcefoty as string,\n\t\tagzratind as decimal(28,10),\n\t\tagzwarrenty as short,\n\t\tagzleadownline as string,\n\t\tagzdefinstpertype as integer,\n\t\tagzourlin as decimal(28,10),\n\t\tagzosnetepi as long,\n\t\tagztonetepi as long,\n\t\tagznoofemp as integer,\n\t\tagzgvalue as integer,\n\t\tagzfagntno as long,\n\t\tagzamtcod as string,\n\t\tagzosgrosepi as long,\n\t\tagzwrshare as decimal(28,10),\n\t\tagznoofobjepi as integer,\n\t\tagzcurrgrosepi as long,\n\t\tagzactnodate as date,\n\t\tagzuwradrpeaid as long,\n\t\tagzvescod as string,\n\t\tagzclmadrpeaid as long,\n\t\tagztonpml as long,\n\t\tagzwroforder as decimal(28,10),\n\t\tagzcshind as decimal(28,10),\n\t\tagzgtepi as long,\n\t\tagzdefexchrate as decimal(28,10),\n\t\tagzdefcurr as string,\n\t\tagzclmlead as long,\n\t\tagzinstadynz as string,\n\t\tagzcurrosgrosepi as long,\n\t\tagzcedent as long,\n\t\tagzactnoofemp as integer,\n\t\tagzoforder as decimal(28,10),\n\t\tagzcooroccynsw as string,\n\t\tagzdefintrst as string,\n\t\tagzordtxt35 as string,\n\t\tagzospml as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_agztable',\n\tformat: 'query') ~> pagztable\nsource(output(\n\t\tobaobno as integer,\n\t\tobalongtermrate as decimal(28,10),\n\t\tobaassetno as long,\n\t\tobatrackit2 as string,\n\t\tobaimoynsw as string,\n\t\tobapeaid as long,\n\t\tobaorgbui as short,\n\t\tobaobrt as integer,\n\t\tobammsino as long,\n\t\tobaoxno as integer,\n\t\tobatrackit3 as string,\n\t\tobacallno as string,\n\t\tobachassis as string,\n\t\tobalusign as string,\n\t\tobacomp2 as integer,\n\t\tobancsid as string,\n\t\tobaassetsubno as long,\n\t\tobaorgbuiltmonth as integer,\n\t\tobatrackit as string,\n\t\tobanjcid as string,\n\t\tobaintnote as string,\n\t\tobanpcid as integer,\n\t\tobacrsign as string,\n\t\tobancnid as string,\n\t\tobancmid as string,\n\t\tobaknvmark as string,\n\t\tobaludate as date,\n\t\tobaextnote as string,\n\t\tobatrackit1 as string,\n\t\tobacrdate as date,\n\t\tobaimono as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_obatable',\n\tformat: 'query') ~> pobatable\nsource(output(\n\t\tobbobbid as string,\n\t\tobbgrpdescr as string,\n\t\tobbhulltype as string,\n\t\tobbname as string,\n\t\tobbtradtextkey as string,\n\t\tobbobno as integer,\n\t\tobbcargotype as string,\n\t\tobbcefoty as string,\n\t\tobbismsocity as string,\n\t\tobbgnr as short,\n\t\tobboffisolan as string,\n\t\tobbmcpid as string,\n\t\tobbportunlid as string,\n\t\tobbrotation as integer,\n\t\tobbmanerknum as string,\n\t\tobbhinumber as string,\n\t\tobbshbisolan as string,\n\t\tobbcapoty as integer,\n\t\tobbnoofcrew as integer,\n\t\tobbavproof as string,\n\t\tobbsocity as string,\n\t\tobbmvaynsw as string,\n\t\tobbtradisolan as string,\n\t\tobbshpbld as short,\n\t\tobbcurr as string,\n\t\tobbclass as string,\n\t\tobbmanager as long,\n\t\tobbtranme as string,\n\t\tobbowndate as date,\n\t\tobbengineyear as short,\n\t\tobbkmyear as integer,\n\t\tobbinstrument as integer,\n\t\tobbx2factorgroup as string,\n\t\tobbnoofflat as short,\n\t\tobbclass2 as string,\n\t\tobbarmdgrdalways as string,\n\t\tobbnoofofficers as integer,\n\t\tobbbnr as short,\n\t\tobbkmstan as integer,\n\t\tobbmaterial as string,\n\t\tobbresptext as string,\n\t\tobbcargodescr as string,\n\t\tobbtotamt as long,\n\t\tobbobver as integer,\n\t\tobbdistrict as string,\n\t\tobbbonus as short,\n\t\tobbcrdate as date,\n\t\tobbexname as string,\n\t\tobbportcccid as string,\n\t\tobbfishlimit as string,\n\t\tobbportdescr as string,\n\t\tobbismdate as date,\n\t\tobbraptorid as string,\n\t\tobbbuildfactor as integer,\n\t\tobbuhcid as integer,\n\t\tobbncaid as string,\n\t\tobbcefofb as string,\n\t\tobbsrcob as string,\n\t\tobbcrwisolan as string,\n\t\tobbfmark as string,\n\t\tobbstdate as date,\n\t\tobbgeodescr as string,\n\t\tobbcoordy as integer,\n\t\tobblicences as short,\n\t\tobbcsvdate as date,\n\t\tobbnoofpax as integer,\n\t\tobbobjema as integer,\n\t\tobbrecontrfactor as integer,\n\t\tobbsocity2 as string,\n\t\tobbpilotcert as string,\n\t\tobbgeoy as decimal(28,10),\n\t\tobbknvmark as string,\n\t\tobbccbid as string,\n\t\tobblusign as string,\n\t\tobbregdate as date,\n\t\tobbcumobno as integer,\n\t\tobbendate as date,\n\t\tobbimpexp as integer,\n\t\tobbobjdescr as string,\n\t\tobbwater as string,\n\t\tobbbreth as decimal(28,10),\n\t\tobbnoofother as integer,\n\t\tobbweigthgroup as string,\n\t\tobblandinggear as integer,\n\t\tobblength as decimal(28,10),\n\t\tobbcffid as string,\n\t\tobbkwh as integer,\n\t\tobbverstat as string,\n\t\tobbadr3 as string,\n\t\tobbkmyrvalue as integer,\n\t\tobblbunit as string,\n\t\tobbowner as long,\n\t\tobbfloor as short,\n\t\tobbinsynsw as string,\n\t\tobboshid as long,\n\t\tobbloc as string,\n\t\tobbengfab as string,\n\t\tobbusecod as string,\n\t\tobbareafactorgroup as string,\n\t\tobbmaintlevel as integer,\n\t\tobbadr2 as string,\n\t\tobbspeedlimit as decimal(28,10),\n\t\tobbdwt as integer,\n\t\tobbgrpfactorgroup as string,\n\t\tobbcoordx as integer,\n\t\tobbinjurydescr as string,\n\t\tobbadr4 as string,\n\t\tobbtranty as integer,\n\t\tobbkonst as string,\n\t\tobbaviatdescr as string,\n\t\tobbownynsw as string,\n\t\tobbtypedescr as string,\n\t\tobbstandard as integer,\n\t\tobbvesisolan as string,\n\t\tobbfishsize as decimal(28,10),\n\t\tobbcrsign as string,\n\t\tobbobnorf as integer,\n\t\tobbgeox as decimal(28,10),\n\t\tobbludate as date,\n\t\tobbbuiltmonth as integer,\n\t\tobbadr5 as string,\n\t\tobbtaxno as string,\n\t\tobbtradunlid as string,\n\t\tobbadr1 as string,\n\t\tobbareadescr as string,\n\t\tobbdepth as decimal(28,10),\n\t\tobbformt as integer,\n\t\tobbmanisolan as string,\n\t\tobbkmavle as integer,\n\t\tobboflid as integer,\n\t\tobbgrt as integer,\n\t\tobbobjemi as integer,\n\t\tobblastvaldatebuildings as date,\n\t\tobbcsvtext as string,\n\t\tobbrentstat as integer,\n\t\tobbbuiltyear as short,\n\t\tobbm3 as integer,\n\t\tobbaccname as string,\n\t\tobbcagsubtyp as integer,\n\t\tobbrespdate as date,\n\t\tobbvescod as string,\n\t\tobbfishunit as string,\n\t\tobbsnr as short,\n\t\tobbcefoen as string,\n\t\tobbenginehp as string,\n\t\tobbx1factorgroup as string,\n\t\tobbmainoshid as long,\n\t\tobbknowninjury as string,\n\t\tobblastvaldateequipment as date,\n\t\tobbpilothour as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_obbtable',\n\tformat: 'query') ~> pobbtable\nsource(output(\n\t\tcode_type_id as long,\n\t\tcode2 as string,\n\t\ttarget_description as string,\n\t\tsource_system as string,\n\t\tom_x_ref as string,\n\t\ttarget_code as string,\n\t\tcode_type as string,\n\t\tsource_code_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.t_crossreference\\nwhere source_system=\\'PARIS\\'',\n\tformat: 'query') ~> tcrossreference\nsource(output(\n\t\texchange_rate as decimal(28,10),\n\t\tfrom_currency_id as long,\n\t\tfrom_currency_code as string,\n\t\tto_currency_id as long,\n\t\texchange_to_date as date,\n\t\tto_currency_code as string,\n\t\texchange_from_date as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.hlp_exchange_rate_to_usd',\n\tformat: 'query') ~> HlpExchangeRateUsd\nsource(output(\n\t\tpk_key as string,\n\t\tprt_intercompany_code as string,\n\t\tprt_intercompany_desc as string,\n\t\tprt_company_sub_code as string,\n\t\tprt_company_sub_desc as string,\n\t\tprt_reporting_area_code as string,\n\t\tprt_reporting_area_desc as string,\n\t\tprt_member_since as date,\n\t\tprt_legal_name as string,\n\t\tprt_state as string,\n\t\tprt_sf_account_resp_pi_init as string,\n\t\tprt_sf_account_resp_pi_desc as string,\n\t\tprt_sf_account_resp_me_init as string,\n\t\tprt_sf_account_resp_me_desc as string,\n\t\tprt_sf_account_status as string,\n\t\tprt_comm_on_etc_basis as string,\n\t\tprt_comm_on_etc_basis_year as decimal(28,10),\n\t\tprt_gard_contact_id as string,\n\t\tprt_sf_gard_contact_id as string,\n\t\tprt_contract_type as string,\n\t\tprt_sf_company_email as string,\n\t\tprt_sf_primary_contact_email as string,\n\t\tprt_sf_primary_contact_name as string,\n\t\tprt_default_etc_broker_ind as string,\n\t\tprt_default_etc_broker_strdate as date,\n\t\tprt_partner_number as decimal(28,10),\n\t\tprt_office_key as string,\n\t\tprt_sf_client_lost_reason as string,\n\t\tprt_sf_company_id as decimal(28,10),\n\t\tprt_sf_company_name as string,\n\t\tprt_sf_company_owner as string,\n\t\tprt_sf_key as string,\n\t\tprt_sf_market_area_code as string,\n\t\tprt_sf_market_area_desc as string,\n\t\tprt_sf_top_company as string,\n\t\tprt_sf_top_company_id as decimal(28,10),\n\t\tprt_account_responsible as string,\n\t\tprt_currency_code as string,\n\t\tprt_currency_desc as string,\n\t\tprt_primary_underwriter as string,\n\t\tprt_lei_code as string,\n\t\tname as string,\n\t\tinserted_by as string,\n\t\tdate_inserted as timestamp,\n\t\tlast_updated_by as string,\n\t\tdate_last_updated as timestamp,\n\t\tprt_address_1 as string,\n\t\tprt_address_2 as string,\n\t\tprt_address_3 as string,\n\t\tprt_address_4 as string,\n\t\tprt_full_address as string,\n\t\tprt_status_code as string,\n\t\tprt_status_desc as string,\n\t\tprt_partner_group as string,\n\t\tprt_broker_code as decimal(28,10),\n\t\tprt_hedge_pct as decimal(28,10),\n\t\tprt_rating_company as string,\n\t\tprt_rating_code as string,\n\t\tprt_rating_code_desc as string,\n\t\tprt_rating_date as date,\n\t\tprt_partner_group_desc as string,\n\t\tprt_partner_short_name as string,\n\t\tprt_domicile_code as string,\n\t\tprt_domicile_name as string,\n\t\tprt_partner_role_code as string,\n\t\tprt_partner_role_desc as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_prepare.pre_dim_partner',\n\tformat: 'query') ~> SrcPreDimPartner\nsource(output(\n\t\tpk_key_clm as string,\n\t\tdate_inserted as timestamp,\n\t\tinserted_by as string,\n\t\tlast_updated_by as string,\n\t\tdate_last_updated as timestamp,\n\t\tclm_code as string,\n\t\tclm_source_system as string,\n\t\tclm_description as string,\n\t\tclm_source_key as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_prepare.pre_dim_claim_type',\n\tformat: 'query') ~> SrcPreDimClaimType\nplgatable select(mapColumn(\n\t\tlgacrdate,\n\t\tlgaendate,\n\t\tlgaguaamt,\n\t\tlgaguacurr,\n\t\tlgalcaid,\n\t\tlgalgaid,\n\t\tlgastatus,\n\t\tlgastdate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lgatable\nplcatable select(mapColumn(\n\t\tlcalcaid,\n\t\tlcauwsign,\n\t\tlcaicaid,\n\t\tlcalabid,\n\t\tlcacrsign,\n\t\tlcatrtmco,\n\t\tlcacefocc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lcatable\nplabtable select(mapColumn(\n\t\tlablabid,\n\t\tlabmainev\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> labtable\npicatable select(mapColumn(\n\t\ticaicaid,\n\t\ticainaid,\n\t\ticaagaid,\n\t\ticaobno,\n\t\ticastdate,\n\t\ticaendate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> icatable\npinatable select(mapColumn(\n\t\tinainaid,\n\t\tinaintrst,\n\t\tinaagaid,\n\t\tinamutual\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> inatable\npagatable select(mapColumn(\n\t\tagaagaid,\n\t\tagabusndiv,\n\t\tagauwsign,\n\t\tagaareacd,\n\t\tagabusncla,\n\t\tagaorgins,\n\t\tagastdate,\n\t\tagaiyear,\n\t\tagaagno,\n\t\tagaisic,\n\t\tagasource,\n\t\tagabusnsec,\n\t\tagabusnbranch,\n\t\tagabusnregion\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> srcagatable\npagztable select(mapColumn(\n\t\tagzagzid,\n\t\tagzfagntno\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> srcagztable\nsrcagatable, srcagztable join(agaagaid == agzagzid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> agatable\npobatable select(mapColumn(\n\t\tobaimono,\n\t\tobaobno\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> scrobatable\npobbtable select(mapColumn(\n\t\tobbobbid,\n\t\tobbobno,\n\t\tobbcefoty,\n\t\tobbstdate,\n\t\tobbendate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> srcobbtable\nscrobatable, srcobbtable join(obaobno == obbobno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> obbtable\ntcrossreference filter(code_type_id==124) ~> ParisCurrency\nParisCurrency select(mapColumn(\n\t\tsource_code_key_cur = source_code_key,\n\t\ttarget_code_cur = target_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefCurrency\ntcrossreference filter(code_type_id==113) ~> ParisAgreementType\nParisAgreementType select(mapColumn(\n\t\tsource_code_key_agt = source_code_key,\n\t\ttarget_code_agt = target_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefAgreementType\ntcrossreference filter(code_type_id==106) ~> ParisBusinessArea\nParisBusinessArea select(mapColumn(\n\t\ttarget_code_ba = target_code,\n\t\tsource_code_key_ba = source_code_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefBusinessArea\nlgatable, lcatable join(lgalcaid == lcalcaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinLgaLca\nJoinLgaLca, labtable join(lcalabid == lablabid,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinLgaLab\nJoinLgaLab, icatable join(lcaicaid == icaicaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinLgaIca\nJoinLgaIca, inatable join(icainaid == inainaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinLgaIna\nJoinLgaIna, agatable join(inaagaid == agaagaid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinLgaAga\nJoinLgaAga, obbtable join(icaobno == obaobno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinLgaObb\nJoinLgaObb filter(icaendate >=obbstdate && icaendate<=obbendate) ~> ObbVersion\ntcrossreference filter(code_type_id==122) ~> ParisCoverage\nParisCoverage select(mapColumn(\n\t\ttarget_code_cov = target_code,\n\t\tsource_code_key_cov = source_code_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefCoverage\nConverting, XrefAgreementType join(agabusnsec == source_code_key_agt,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JoinToAgreementType\nObbVersion derive(agabusnsec = toString(agabusnsec),\n\t\tagabusndiv = case ( toString(agabusndiv) == '4' , concat(concat(toString(agabusndiv),' - '), inamutual) , toString(agabusndiv) ),\n\t\tguarantee_exchange_date = case( lgastatus == 'A',iifNull(lgaendate,currentDate() ),currentDate()),\n\t\ttestdate = toDate(toString(currentDate(),'dd/MM/yyyy'),'dd/MM/yyyy'),\n\t\ttestcurrentdate = currentDate(),\n\t\tbroker_key = case((agabusnsec==12 || agabusndiv==4) && isNull(agzfagntno)==false() ,concat('P', toString(agzfagntno)),case(agasource==agaorgins,'PDIR99',concat('P',toString(agasource)))),\n\t\tagr_key = toString(agaagaid),\n\t\tcapital_branch_key = concat(concat(toString(agabusnbranch), ' - '), toString(agabusnregion)),\n\t\tlcacefocc_key = concat('PARIS',lcacefocc),\n\t\tpk_key_client = case (isNull(agaorgins)==false() , concat('P', toString(agaorgins)),'N/A'),\n\t\tpk_key_guarantee = concat('P', lgalgaid),\n\t\tpk_key_incident = case (isNull(lcalcaid)==true(),'N/A',concat('P', lcalcaid)),\n\t\tpk_key_source_system = 'PARIS') ~> Converting\nJoinToAgreementType, XrefCoverage join(inaintrst == source_code_key_cov,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToCoverage\nJoinToCoverage, XrefBusinessArea join(agabusndiv == source_code_key_ba,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToBusinessArea\nJoinToBusinessArea, XrefCurrency join(lgaguacurr == source_code_key_cur,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToCurrency\nHlpExchangeRateUsd select(mapColumn(\n\t\texchange_rate,\n\t\tfrom_currency_code,\n\t\texchange_from_date\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ExchangeRateUsd\nJoinToCurrency, ExchangeRateUsd join(target_code_cur == from_currency_code,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToExchangeRate\nJoinToExchangeRate filter(exchange_from_date==guarantee_exchange_date) ~> FilterOnExchangeDate\nSrcPreDimPartner select(mapColumn(\n\t\tpk_key_broker = pk_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimBroker\nFilterOnExchangeDate, PreDimBroker join(broker_key == pk_key_broker,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinPreDimBroker\nSetNaValues select(mapColumn(\n\t\tdim_broker_key = pk_key_broker,\n\t\tdim_agreement_key = agr_key,\n\t\tdim_agreement_type_key = target_code_agt,\n\t\tdim_business_area_key = target_code_ba,\n\t\tdim_capital_branch_key = target_code_bra,\n\t\tdim_claim_handler_key = target_code_clh,\n\t\tdim_claim_type_key = pk_key_clm,\n\t\tdim_client_key = pk_key_client,\n\t\tdim_country_key = target_code_cntry,\n\t\tdim_coverage_key = target_code_cov,\n\t\tdim_currency_key = target_code_cur,\n\t\tdim_guarantee_key = pk_key_guarantee,\n\t\tdim_incident_key = pk_key_incident,\n\t\tdim_risk_object_key = icaicaid\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> RenameColumns\nJoinToCountry derive(pk_key_broker = iifNull(pk_key_broker, 'N/A'),\n\t\ttarget_code_agt = iifNull(target_code_agt, 'N/A'),\n\t\ttarget_code_ba = iifNull(target_code_ba, 'N/A'),\n\t\ttarget_code_bra = iifNull(target_code_bra, 'N/A'),\n\t\ttarget_code_clh = iifNull(target_code_clh,'N/A'),\n\t\tpk_key_clm = iifNull(pk_key_clm, 'N/A'),\n\t\ttarget_code_cntry = iifNull(target_code_cntry, 'N/A'),\n\t\ttarget_code_cov = iifNull(target_code_cov, 'N/A'),\n\t\ttarget_code_cur = iifNull(target_code_cur, 'N/A')) ~> SetNaValues\ntcrossreference filter(code_type_id==464) ~> ParisCapitalBranch\nParisCapitalBranch select(mapColumn(\n\t\ttarget_code_bra = target_code,\n\t\tsource_code_key_bra = source_code_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefCapitalBranch\nJoinPreDimBroker, XrefCapitalBranch join(capital_branch_key == source_code_key_bra,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToCapitalBranch\ntcrossreference filter(code_type_id==329) ~> ParisEmployee\nParisEmployee select(mapColumn(\n\t\ttarget_code_clh = target_code,\n\t\tsource_code_key_clh = source_code_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefClaimsHandler\nJoinToCapitalBranch, XrefClaimsHandler join(lcauwsign == source_code_key_clh,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToClaimsHandler\nSrcPreDimClaimType select(mapColumn(\n\t\tpk_key_clm\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> PreDimClaimType\nJoinToClaimsHandler, PreDimClaimType join(lcacefocc_key == pk_key_clm,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToPreDimClaimType\ntcrossreference filter(code_type_id==50) ~> ParisCountry\nParisCountry select(mapColumn(\n\t\ttarget_code_cntry = target_code,\n\t\tsource_code_key_cntry = source_code_key\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefCountry\nJoinToPreDimClaimType, XrefCountry join(agaareacd == source_code_key_cntry,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> JoinToCountry"
		}
	}
}