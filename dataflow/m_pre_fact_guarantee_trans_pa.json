{
	"name": "m_pre_fact_guarantee_trans_pa",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "plgatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "plcatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "plabtable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "picatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pinatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pagatable"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "pagztable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "pobatable"
				},
				{
					"dataset": {
						"referenceName": "Paris",
						"type": "DatasetReference"
					},
					"name": "pobbtable"
				},
				{
					"dataset": {
						"referenceName": "Other",
						"type": "DatasetReference"
					},
					"name": "tcrossreference"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "lgatable",
					"description": "Selected columns for Guarantee transactions"
				},
				{
					"name": "lcatable",
					"description": "Selected columns for claim"
				},
				{
					"name": "labtable",
					"description": "Main Event"
				},
				{
					"name": "icatable",
					"description": "Selected columns for Risk"
				},
				{
					"name": "inatable",
					"description": "Selected columns from Insurance"
				},
				{
					"name": "srcagatable",
					"description": "Selected columns for Agreement"
				},
				{
					"name": "srcagztable",
					"description": "Selected columns"
				},
				{
					"name": "agatable"
				},
				{
					"name": "scrobatable",
					"description": "Selected columns"
				},
				{
					"name": "srcobbtable",
					"description": "selected columns"
				},
				{
					"name": "obbtable"
				},
				{
					"name": "ParisCurrency",
					"description": "Source System=PARIS and code_type_id=124"
				},
				{
					"name": "XrefCurrency",
					"description": "Currency - 124"
				},
				{
					"name": "ParisAgreementType",
					"description": "Source System=Paris and code_type_id=113"
				},
				{
					"name": "XrefAgreementType",
					"description": "Agreement Type - 113"
				}
			],
			"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_lgatable',\n\tformat: 'query') ~> plgatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.plcatable',\n\tformat: 'query') ~> plcatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_labtable',\n\tformat: 'query') ~> plabtable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_icatable',\n\tformat: 'query') ~> picatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_inatable',\n\tformat: 'query') ~> pinatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_agatable',\n\tformat: 'query') ~> pagatable\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.p_agztable',\n\tformat: 'query') ~> pagztable\nsource(output(\n\t\tobaassetno as decimal(38,18),\n\t\tobaassetsubno as decimal(38,18),\n\t\tobacallno as string,\n\t\tobachassis as string,\n\t\tobacomp2 as decimal(38,18),\n\t\tobacrdate as timestamp,\n\t\tobacrsign as string,\n\t\tobaextnote as string,\n\t\tobaimono as decimal(38,18),\n\t\tobaimoynsw as string,\n\t\tobaintnote as string,\n\t\tobaknvmark as string,\n\t\tobalongtermrate as decimal(38,18),\n\t\tobaludate as timestamp,\n\t\tobalusign as string,\n\t\tobammsino as decimal(38,18),\n\t\tobancmid as string,\n\t\tobancnid as string,\n\t\tobancsid as string,\n\t\tobanjcid as string,\n\t\tobanpcid as decimal(38,18),\n\t\tobaobno as decimal(38,18),\n\t\tobaobrt as decimal(38,18),\n\t\tobaorgbui as decimal(38,18),\n\t\tobaorgbuiltmonth as decimal(38,18),\n\t\tobaoxno as decimal(38,18),\n\t\tobapeaid as decimal(38,18),\n\t\tobatrackit as string,\n\t\tobatrackit1 as string,\n\t\tobatrackit2 as string,\n\t\tobatrackit3 as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> pobatable\nsource(output(\n\t\tobbaccname as string,\n\t\tobbadr1 as string,\n\t\tobbadr2 as string,\n\t\tobbadr3 as string,\n\t\tobbadr4 as string,\n\t\tobbadr5 as string,\n\t\tobbareadescr as string,\n\t\tobbareafactorgroup as string,\n\t\tobbarmdgrdalways as string,\n\t\tobbaviatdescr as string,\n\t\tobbavproof as string,\n\t\tobbbnr as decimal(38,18),\n\t\tobbbonus as decimal(38,18),\n\t\tobbbreth as decimal(38,18),\n\t\tobbbuildfactor as decimal(38,18),\n\t\tobbbuiltmonth as decimal(38,18),\n\t\tobbbuiltyear as decimal(38,18),\n\t\tobbcagsubtyp as decimal(38,18),\n\t\tobbcapoty as decimal(38,18),\n\t\tobbcargodescr as string,\n\t\tobbcargotype as string,\n\t\tobbccbid as string,\n\t\tobbcefoen as string,\n\t\tobbcefofb as string,\n\t\tobbcefoty as string,\n\t\tobbcffid as string,\n\t\tobbclass as string,\n\t\tobbclass2 as string,\n\t\tobbcoordx as decimal(38,18),\n\t\tobbcoordy as decimal(38,18),\n\t\tobbcrdate as timestamp,\n\t\tobbcrsign as string,\n\t\tobbcrwisolan as string,\n\t\tobbcsvdate as timestamp,\n\t\tobbcsvtext as string,\n\t\tobbcumobno as decimal(38,18),\n\t\tobbcurr as string,\n\t\tobbdepth as decimal(38,18),\n\t\tobbdistrict as string,\n\t\tobbdwt as decimal(38,18),\n\t\tobbendate as timestamp,\n\t\tobbengfab as string,\n\t\tobbenginehp as string,\n\t\tobbengineyear as decimal(38,18),\n\t\tobbexname as string,\n\t\tobbfishlimit as string,\n\t\tobbfishsize as decimal(38,18),\n\t\tobbfishunit as string,\n\t\tobbfloor as decimal(38,18),\n\t\tobbfmark as string,\n\t\tobbformt as decimal(38,18),\n\t\tobbgeodescr as string,\n\t\tobbgeox as decimal(38,18),\n\t\tobbgeoy as decimal(38,18),\n\t\tobbgnr as decimal(38,18),\n\t\tobbgrpdescr as string,\n\t\tobbgrpfactorgroup as string,\n\t\tobbgrt as decimal(38,18),\n\t\tobbhinumber as string,\n\t\tobbhulltype as string,\n\t\tobbimpexp as decimal(38,18),\n\t\tobbinjurydescr as string,\n\t\tobbinstrument as decimal(38,18),\n\t\tobbinsynsw as string,\n\t\tobbismdate as timestamp,\n\t\tobbismsocity as string,\n\t\tobbkmavle as decimal(38,18),\n\t\tobbkmstan as decimal(38,18),\n\t\tobbkmyear as decimal(38,18),\n\t\tobbkmyrvalue as decimal(38,18),\n\t\tobbknowninjury as string,\n\t\tobbknvmark as string,\n\t\tobbkonst as string,\n\t\tobbkwh as decimal(38,18),\n\t\tobblandinggear as decimal(38,18),\n\t\tobblastvaldatebuildings as timestamp,\n\t\tobblastvaldateequipment as timestamp,\n\t\tobblbunit as string,\n\t\tobblength as decimal(38,18),\n\t\tobblicences as decimal(38,18),\n\t\tobbloc as string,\n\t\tobbludate as timestamp,\n\t\tobblusign as string,\n\t\tobbm3 as decimal(38,18),\n\t\tobbmainoshid as decimal(38,18),\n\t\tobbmaintlevel as decimal(38,18),\n\t\tobbmanager as decimal(38,18),\n\t\tobbmanerknum as string,\n\t\tobbmanisolan as string,\n\t\tobbmaterial as string,\n\t\tobbmcpid as string,\n\t\tobbmvaynsw as string,\n\t\tobbname as string,\n\t\tobbncaid as string,\n\t\tobbnoofcrew as decimal(38,18),\n\t\tobbnoofflat as decimal(38,18),\n\t\tobbnoofofficers as decimal(38,18),\n\t\tobbnoofother as decimal(38,18),\n\t\tobbnoofpax as decimal(38,18),\n\t\tobbobbid as string,\n\t\tobbobjdescr as string,\n\t\tobbobjema as decimal(38,18),\n\t\tobbobjemi as decimal(38,18),\n\t\tobbobno as decimal(38,18),\n\t\tobbobnorf as decimal(38,18),\n\t\tobbobver as decimal(38,18),\n\t\tobboffisolan as string,\n\t\tobboflid as decimal(38,18),\n\t\tobboshid as decimal(38,18),\n\t\tobbowndate as timestamp,\n\t\tobbowner as decimal(38,18),\n\t\tobbownynsw as string,\n\t\tobbpilotcert as string,\n\t\tobbpilothour as decimal(38,18),\n\t\tobbportcccid as string,\n\t\tobbportdescr as string,\n\t\tobbportunlid as string,\n\t\tobbraptorid as string,\n\t\tobbrecontrfactor as decimal(38,18),\n\t\tobbregdate as timestamp,\n\t\tobbrentstat as decimal(38,18),\n\t\tobbrespdate as timestamp,\n\t\tobbresptext as string,\n\t\tobbrotation as decimal(38,18),\n\t\tobbshbisolan as string,\n\t\tobbshpbld as decimal(38,18),\n\t\tobbsnr as decimal(38,18),\n\t\tobbsocity as string,\n\t\tobbsocity2 as string,\n\t\tobbspeedlimit as decimal(38,18),\n\t\tobbsrcob as string,\n\t\tobbstandard as decimal(38,18),\n\t\tobbstdate as timestamp,\n\t\tobbtaxno as string,\n\t\tobbtotamt as decimal(38,18),\n\t\tobbtradisolan as string,\n\t\tobbtradtextkey as string,\n\t\tobbtradunlid as string,\n\t\tobbtranme as string,\n\t\tobbtranty as decimal(38,18),\n\t\tobbtypedescr as string,\n\t\tobbuhcid as decimal(38,18),\n\t\tobbusecod as string,\n\t\tobbverstat as string,\n\t\tobbvescod as string,\n\t\tobbvesisolan as string,\n\t\tobbwater as string,\n\t\tobbweigthgroup as string,\n\t\tobbx1factorgroup as string,\n\t\tobbx2factorgroup as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> pobbtable\nsource(output(\n\t\tsource_code_key as string,\n\t\tsource_system as string,\n\t\ttarget_code as string,\n\t\ttarget_description as string,\n\t\tcode_type_id as double,\n\t\tcode2 as string,\n\t\tom_x_ref as string,\n\t\tcode_type as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet') ~> tcrossreference\nplgatable select(mapColumn(\n\t\tlgacrdate,\n\t\tlgaendate,\n\t\tlgaguaamt,\n\t\tlgaguacurr,\n\t\tlgalcaid,\n\t\tlgalgaid,\n\t\tlgastatus,\n\t\tlgastdate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lgatable\nplcatable select(mapColumn(\n\t\tlcalcaid,\n\t\tlcauwsign,\n\t\tlcaicaid,\n\t\tlcalabid,\n\t\tlcacrsign,\n\t\tlcatrtmco,\n\t\tlcacefocc\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> lcatable\nplabtable select(mapColumn(\n\t\tlablabid,\n\t\tlabmainev\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> labtable\npicatable select(mapColumn(\n\t\ticaicaid,\n\t\ticainaid,\n\t\ticaagaid,\n\t\ticaobno,\n\t\ticastdate,\n\t\ticaendate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> icatable\npinatable select(mapColumn(\n\t\tinainaid,\n\t\tinaintrst,\n\t\tinaagaid,\n\t\tinamutual\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> inatable\npagatable select(mapColumn(\n\t\tagaagaid,\n\t\tagabusndiv,\n\t\tagauwsign,\n\t\tagaareacd,\n\t\tagabusncla,\n\t\tagaorgins,\n\t\tagastdate,\n\t\tagaiyear,\n\t\tagaagno,\n\t\tagaisic,\n\t\tagasource,\n\t\tagabusnsec\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> srcagatable\npagztable select(mapColumn(\n\t\tagzagzid,\n\t\tagzfagntno\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> srcagztable\nsrcagatable, srcagztable join(agaagaid == agzagzid,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> agatable\npobatable select(mapColumn(\n\t\tobaimono,\n\t\tobaobno\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> scrobatable\npobbtable select(mapColumn(\n\t\tobbobbid,\n\t\tobbobno,\n\t\tobbcefoty,\n\t\tobbstdate,\n\t\tobbendate\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> srcobbtable\nscrobatable, srcobbtable join(obaobno == obbobno,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> obbtable\ntcrossreference filter(source_system=='PARIS' && code_type_id==124) ~> ParisCurrency\nParisCurrency select(mapColumn(\n\t\tsource_code_key,\n\t\ttarget_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefCurrency\ntcrossreference filter(source_system=='PARIS' && code_type_id==113) ~> ParisAgreementType\nParisAgreementType select(mapColumn(\n\t\tsource_code_key,\n\t\ttarget_code\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> XrefAgreementType"
		}
	}
}