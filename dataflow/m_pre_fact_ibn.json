{
	"name": "m_pre_fact_ibn",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_fact"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "StaIBNR"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "xrefCapitalBranch"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "tmp_pre_fact_ibnr",
						"type": "DatasetReference"
					},
					"name": "tmpPreFactIbnr"
				}
			],
			"transformations": [
				{
					"name": "DimTimeKeys"
				},
				{
					"name": "CapitalBranch"
				},
				{
					"name": "Values"
				},
				{
					"name": "renaming"
				},
				{
					"name": "Select1"
				}
			],
			"script": "source(output(\n\t\tpk_ibnr as long,\n\t\tcapital_branch as string,\n\t\tgross_net as string,\n\t\taccounting_period as date,\n\t\thydra_ind as string,\n\t\tibnr_usd as long,\n\t\tupdated_date as date,\n\t\ttext as string,\n\t\tmutual_fixed as string,\n\t\tfinancial_year as long,\n\t\tbinary_events as long,\n\t\tequalisation_reserve_usd as long,\n\t\tsource_system as string,\n\t\tincident_year as long,\n\t\tulae_usd as long,\n\t\tbusiness_area as string,\n\t\tcapital as string,\n\t\tinserted_date as date,\n\t\tpoolable_ind as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.sta_ibnr',\n\tformat: 'query') ~> StaIBNR\nsource(output(\n\t\tsource_code_key as string,\n\t\ttarget_code as string,\n\t\ttarget_description as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select source_code_key, target_code, target_description from dwh_stage.t_crossreference where source_system=\\'PARIS\\' and code_type_id=464',\n\tformat: 'query') ~> xrefCapitalBranch\nrenaming derive(dim_time_incident_year = case(isNull(trim(toString(incident_year)))==true(),'-1',toString(incident_year)),\n\t\tdim_time_financial_year = case(isNull(trim(toString(financial_year)))==true(),'N/A',toString(financial_year)),\n\t\tdim_business_area = case(in(['EN', 'BU', 'PM', 'CO', 'MA', 'PF'],business_area)==false(), 'N/A',business_area)) ~> DimTimeKeys\nDimTimeKeys, xrefCapitalBranch lookup(capital_branch == target_code,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> CapitalBranch\nCapitalBranch derive(each(match(endsWith(name,'_usd')), 'gross_'+$$ = case(gross_net=='G', $$, toLong(0))),\n\t\teach(match(endsWith(name,'_usd')), 'net_'+$$ = case(gross_net=='N', $$, toLong(0)))) ~> Values\nStaIBNR select(mapColumn(\n\t\tpk_ibnr,\n\t\tcapital_branch,\n\t\tgross_net,\n\t\thydra_ind,\n\t\tibnr_usd,\n\t\tupdated_date,\n\t\ttext,\n\t\tmutual_fixed,\n\t\tfinancial_year,\n\t\tbinary_events_usd = binary_events,\n\t\tequalisation_reserve_usd,\n\t\tsource_system,\n\t\tincident_year,\n\t\tulae_usd,\n\t\tbusiness_area,\n\t\tcapital,\n\t\tinserted_date,\n\t\tpoolable_ind,\n\t\taccounting_period\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> renaming\nValues select(mapColumn(\n\t\tpk_transaction_key = pk_ibnr,\n\t\tgross_net,\n\t\thydra_ind,\n\t\ttext,\n\t\tinserted_date,\n\t\tpoolable_ind,\n\t\tdim_time_incident_year,\n\t\tdim_time_financial_year,\n\t\tdim_business_area,\n\t\tdim_capital_branch = target_code,\n\t\tgross_ibnr_usd,\n\t\tgross_binary_events_usd,\n\t\tgross_equalisation_reserve_usd,\n\t\tgross_ulae_usd,\n\t\tnet_ibnr_usd,\n\t\tnet_binary_events_usd,\n\t\tnet_equalisation_reserve_usd,\n\t\tnet_ulae_usd,\n\t\tdim_trans_date = accounting_period\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(input(\n\t\tpk_transaction_key as long,\n\t\tnet_binary_events_usd as decimal(28,10),\n\t\tdim_capital as string,\n\t\tdim_capital_branch as string,\n\t\tdim_business_area as string,\n\t\tnet_ibnr_usd as decimal(28,10),\n\t\tdim_time_trans_date as date,\n\t\tnet_ulae_usd as decimal(28,10),\n\t\tnet_equalisation_reserve_usd as decimal(28,10),\n\t\tdim_time_incident_year as string,\n\t\tdim_time_financial_year as string,\n\t\tpoolable_ind as string,\n\t\thydra_ind as string,\n\t\tgross_equalisation_reserve_usd as decimal(28,10),\n\t\tgross_ibnr_usd as decimal(28,10),\n\t\tgross_ulae_usd as decimal(28,10),\n\t\tdim_risk_object as string,\n\t\tdim_agreement_type as string,\n\t\tgross_binary_events_usd as decimal(28,10),\n\t\ttext as string,\n\t\tsource_system as string,\n\t\tdate_inserted as timestamp,\n\t\tlast_updated_by as string,\n\t\tinserted_by as string,\n\t\tdate_last_updated as timestamp,\n\t\tgross_net as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> tmpPreFactIbnr"
		}
	}
}