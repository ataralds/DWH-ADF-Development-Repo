{
	"name": "m_pre_fact_man_adj_rbns",
	"properties": {
		"folder": {
			"name": "dwh_prepare/pre_fact"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "agressoTrans",
					"description": "ACCOUNT in ( 46503, 46506, 46603, 46507, 47503)\n   and  INOUTGRP1.DATE_TO >=  to_date('20.02.2016', 'dd.mm.rrrr')"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "staManualResultTrans"
				},
				{
					"dataset": {
						"referenceName": "azure_sql_server",
						"type": "DatasetReference"
					},
					"name": "preDimTime",
					"description": "union accounting month end and policy qtr end. "
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "pre_fact_man_rbns_adj",
						"type": "DatasetReference"
					},
					"name": "preFactManAdjRBNS"
				}
			],
			"transformations": [
				{
					"name": "grossRiAmount"
				},
				{
					"name": "sumAmounts"
				},
				{
					"name": "netAmount"
				},
				{
					"name": "UnionAll"
				},
				{
					"name": "droppingColumns"
				},
				{
					"name": "sumAmountss"
				},
				{
					"name": "carthesianproduct"
				},
				{
					"name": "droppingColumnss"
				},
				{
					"name": "syntheticKey"
				},
				{
					"name": "syntheticKeys"
				},
				{
					"name": "Union1"
				},
				{
					"name": "Dedup"
				},
				{
					"name": "droppingColumnssss"
				},
				{
					"name": "zeroamounts"
				},
				{
					"name": "droppingColumnsss"
				},
				{
					"name": "sumAmountsss"
				},
				{
					"name": "expression"
				},
				{
					"name": "sorter"
				},
				{
					"name": "datefilter"
				}
			],
			"script": "source(output(\n\t\tcapital as string,\n\t\tbranch as string,\n\t\thrg as string,\n\t\tamount_usd as long,\n\t\taccount as string,\n\t\tcc_reporting_period as long,\n\t\tagr_reporting_period as long,\n\t\tdate_from as date,\n\t\tdate_to as date,\n\t\tinc_year as string,\n\t\tfin_year as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select * from dwh_stage.agr_agresso_trans where account in ( 46503, 46506, 46603, 46507, 47503)',\n\tformat: 'query') ~> agressoTrans\nsource(output(\n\t\tamount_net_usd as long,\n\t\tamount_gross_usd as long,\n\t\tbranch as string,\n\t\tinc_year as string,\n\t\tfin_year as short,\n\t\tdate_to as date,\n\t\thrg as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select amount_net_usd,\\namount_gross_usd,\\nbranch_code as branch,\\ncast(inc_year as varchar(4)) as inc_year,\\nfin_year, \\ntransaction_date as date_to,\\nhrg from\\ndwh_stage.sta_manual_result_trans',\n\tformat: 'query') ~> staManualResultTrans\nsource(output(\n\t\tdate_to as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: 'select accounting_month_end_date as date_to from dwh_stage.sta_dim_time\\nunion\\nselect \\npolicy_qtr_end_date as date_to from dwh_stage.sta_dim_time',\n\tformat: 'query') ~> preDimTime\ndatefilter derive(amount_gross_usd = case(\r\n    account!='47503',\r\n    coalesce(amount_usd,0), \r\n    toLong(0)),\n\t\tamount_ri_usd = case(\r\n    account=='47503', \r\n    amount_usd, \r\n    toLong(0)\r\n    )) ~> grossRiAmount\ngrossRiAmount aggregate(groupBy(branch,\n\t\thrg,\n\t\tdate_to,\n\t\tinc_year,\n\t\tfin_year),\n\tamount_gross_usd = sum(amount_gross_usd),\n\t\tamount_ri_usd = sum(amount_ri_usd)) ~> sumAmounts\nsumAmounts derive(amount_net_usd = coalesce(amount_gross_usd,0)+coalesce(amount_ri_usd,0)) ~> netAmount\ndroppingColumns, staManualResultTrans union(byName: true)~> UnionAll\nnetAmount select(mapColumn(\n\t\tbranch,\n\t\thrg,\n\t\tdate_to,\n\t\tinc_year,\n\t\tfin_year,\n\t\tamount_gross_usd,\n\t\tamount_net_usd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> droppingColumns\nUnionAll aggregate(groupBy(branch,\n\t\thrg,\n\t\tdate_to,\n\t\tinc_year,\n\t\tfin_year),\n\tamount_usd = sum(amount_gross_usd),\n\t\tamount_net_usd = sum(amount_net_usd)) ~> sumAmountss\nsyntheticKeys, syntheticKey join(synthetic_key==synthetic_key2,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> carthesianproduct\nsumAmountss select(mapColumn(\n\t\tbranch,\n\t\thrg,\n\t\tdate_to,\n\t\tinc_year,\n\t\tfin_year,\n\t\tamount_usd,\n\t\tamount_net_usd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> droppingColumnss\npreDimTime derive(synthetic_key = 1) ~> syntheticKey\ndroppingColumnss derive(synthetic_key2 = 1) ~> syntheticKeys\ndroppingColumnsss, zeroamounts union(byName: true)~> Union1\ndroppingColumnssss aggregate(groupBy(hrg),\n\teach(match(name!='hrg'), $$ = first($$))) ~> Dedup\nUnion1 select(mapColumn(\n\t\tbranch,\n\t\thrg,\n\t\tdate_to,\n\t\tinc_year,\n\t\tfin_year,\n\t\tamount_usd,\n\t\tamount_net_usd\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> droppingColumnssss\nsumAmountss derive(amount_usd = 0,\n\t\tamount_net_usd = 0) ~> zeroamounts\ncarthesianproduct select(mapColumn(\n\t\tbranch,\n\t\thrg,\n\t\tinc_year,\n\t\tfin_year,\n\t\tamount_usd,\n\t\tamount_net_usd,\n\t\tdate_to = preDimTime@date_to\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> droppingColumnsss\nDedup aggregate(groupBy(hrg,\n\t\tbranch,\n\t\tdate_to,\n\t\tinc_year,\n\t\tfin_year),\n\tamount_usd = sum(amount_usd),\n\t\tamount_net_usd = sum(amount_net_usd)) ~> sumAmountsss\nsumAmountsss derive(amount_net_usd = toDecimal(case(coalesce(amount_net_usd,0)==0, amount_usd, amount_net_usd),28,10),\n\t\tamount_usd = toDecimal(amount_usd, 28, 10),\n\t\tdim_time_incident_year = coalesce(trim(inc_year),'-1'),\n\t\tdim_time_financial_year = case(isNull(trim(toString(fin_year)))==true(), 'N/A', toString(fin_year)),\n\t\tdim_capital_branch = coalesce(trim(branch),'N/A'),\n\t\tdim_business_area = case(!in(['EN','BU','PM','PF','MA'], hrg), 'N/A', hrg),\n\t\tn_ind = 'N') ~> expression\nexpression sort(asc(dim_capital_branch, false),\n\tasc(dim_business_area, false),\n\tasc(dim_time_incident_year, false),\n\tasc(date_to, false)) ~> sorter\nagressoTrans filter(date_to>=toDate('20022016', 'dd/MM/yyyy')) ~> datefilter\nsorter sink(input(\n\t\tdim_capital_branch_key as string,\n\t\tamount_usd as decimal(28,10),\n\t\tdim_business_area_key as string,\n\t\tpoolable_ind as string,\n\t\thydra_ind as string,\n\t\tdim_time_incident_year_key as string,\n\t\tdim_time_financial_year_key as string,\n\t\tdim_time_trans_date_key as date,\n\t\tpk_pre_fact_man_rbns_adj as long,\n\t\tamount_net_usd as decimal(28,10)\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tdim_capital_branch_key = dim_capital_branch,\n\t\tdim_business_area_key = dim_business_area,\n\t\tpoolable_ind = n_ind,\n\t\thydra_ind = n_ind,\n\t\tdim_time_incident_year_key = dim_time_incident_year,\n\t\tdim_time_financial_year_key = dim_time_financial_year,\n\t\tdim_time_trans_date_key = date_to,\n\t\tamount_net_usd,\n\t\tamount_usd = expression@amount_usd\n\t)) ~> preFactManAdjRBNS"
		}
	}
}