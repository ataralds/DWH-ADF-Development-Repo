{
	"name": "dataflow3",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "P_PEATABLE",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "lgatabletest",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "Join1"
				},
				{
					"name": "DerivedColumn1"
				}
			],
			"script": "source(output(\n\t\tpeapeaid as long,\n\t\tpeainvisible as string,\n\t\tpeaiebusndiv as integer,\n\t\tpeaiecond as string,\n\t\tpeaprobor as integer,\n\t\tpeaiyear as integer,\n\t\tpeasex as string,\n\t\tpeacorrmailfreq as integer,\n\t\tpeanopurr as string,\n\t\tpeaoutgirono as string,\n\t\tpeaclosmailfreq as integer,\n\t\tpeaieint5 as string,\n\t\tlast_updated_by as string,\n\t\tpeaclmmailfreq as integer,\n\t\tpeainvnotify as integer,\n\t\tpeaacorbo as integer,\n\t\tpeamexcdate as date,\n\t\tpeaaddmailfreq as integer,\n\t\tpeaieint3 as string,\n\t\tpeamailsizemb as decimal(28,10),\n\t\tpeaiediv as string,\n\t\tpeaorgno as string,\n\t\tpeaaclmbo as integer,\n\t\tpeacalamt as long,\n\t\tpeaxlcurr as string,\n\t\tmap_date as date,\n\t\tpeaccintr as decimal(28,10),\n\t\tpeaextid2 as string,\n\t\tpeapurnotify as integer,\n\t\tpeaccode as integer,\n\t\tpeasw10 as string,\n\t\tpeaaclmadv as integer,\n\t\tpeaclomet as integer,\n\t\tpeacloclm as integer,\n\t\tpeamexamt as long,\n\t\tpeaprotyp as integer,\n\t\tpeanotsort as integer,\n\t\tpeaieint1 as string,\n\t\tpeaiecon3 as integer,\n\t\tpeaincreday as integer,\n\t\tpeapersid as string,\n\t\tpeaaaddbo as integer,\n\t\tpeanotdays as integer,\n\t\tpeaaclobo as integer,\n\t\tpeacalcurr as string,\n\t\tpeaprovad as integer,\n\t\tpeafromcomp as long,\n\t\tpeastopuse as string,\n\t\tpeaclmadv as integer,\n\t\tpeasttniv as integer,\n\t\tpeamexcurr as string,\n\t\tpeaiecon4 as integer,\n\t\tpeasubtype as integer,\n\t\tpeaswrun as integer,\n\t\tpealeicode as string,\n\t\tpeaoutcreday as integer,\n\t\tpeaoutgiro as integer,\n\t\tpeamexpro as decimal(28,10),\n\t\tpeaoutgiroludate as date,\n\t\tpeaiecon2 as integer,\n\t\tpeaieint2 as string,\n\t\tpeastdate as date,\n\t\tpeaclamailfreq as integer,\n\t\tpeacclamt as long,\n\t\tpealang2 as string,\n\t\tpeastatyp as integer,\n\t\tpeaingirolusign as string,\n\t\tpeacrsign as string,\n\t\tpeaie2busnse as integer,\n\t\tpeabirtno as string,\n\t\tpeaiesect as string,\n\t\tpeaaddbor as integer,\n\t\tpeaieint4 as string,\n\t\tpeasttprmclm as integer,\n\t\tpeaiebusnse as integer,\n\t\tpeanotaco as integer,\n\t\tpeastaamt as integer,\n\t\tpeacclcurr as string,\n\t\tpeaextid as string,\n\t\tpeaendate as date,\n\t\tpeacomp2 as integer,\n\t\tpeabirtws as integer,\n\t\tpeaie2busndiv as integer,\n\t\tpearesdat as date,\n\t\tpeausecolfee as string,\n\t\tpeanotlay as integer,\n\t\tpealudate as date,\n\t\tpeaxlpoin as long,\n\t\tpeaoutgirolusign as string,\n\t\tpeaprenotify as integer,\n\t\tpeacrdate as date,\n\t\tpeaaprobo as integer,\n\t\tpeanopdue as integer,\n\t\tpeaingiroludate as date,\n\t\tpeaie3busnse as integer,\n\t\tdate_inserted as date,\n\t\tpeapurtyp as integer,\n\t\tinserted_by as string,\n\t\tpeapersrfl as long,\n\t\tpeacorbo as integer,\n\t\tpeastaniv as integer,\n\t\tdate_last_updated as date,\n\t\tpeastensw as integer,\n\t\tpeaccint as string,\n\t\tpeaswink as integer,\n\t\tpealusign as string,\n\t\tpeaiecon5 as integer,\n\t\tpeaknvmark as string,\n\t\tpeastopcod as integer,\n\t\tpeacrmid as long,\n\t\tpeaieint as string,\n\t\tpeamaxper as decimal(28,10),\n\t\tpeastoppremnote as string,\n\t\tpeaiecon1 as integer,\n\t\tpeamdescr as string,\n\t\tpeaclmintynsw as string,\n\t\tpeadueday as integer,\n\t\tpeaingirono as string,\n\t\tpeaie3busndiv as integer,\n\t\tpeaprovmailfreq as integer,\n\t\tpeaclmbor as integer,\n\t\tpeacolid as string,\n\t\tpeaingiro as integer,\n\t\tpeaclobor as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source1\nsource(output(\n\t\tlgacrcrdate as date,\n\t\tlgaintnote as string,\n\t\tlgacrsign as string,\n\t\tlgacandate as date,\n\t\tlgaclmcat as string,\n\t\tlgacrcrsign as string,\n\t\tlgaintynsw as string,\n\t\tlgastatus as string,\n\t\tlgastdate as date,\n\t\tlgalccid as string,\n\t\tlgaguacurr as string,\n\t\tlgacrynsw as string,\n\t\tlgacrlgaid as string,\n\t\tlgalgaid as string,\n\t\tlgaobocname as string,\n\t\tlgaludate as date,\n\t\tlgaobopeaid as long,\n\t\tlgalcaid as string,\n\t\tlgareceiver as long,\n\t\tlgajurisdiction as string,\n\t\tlgaknvmark as string,\n\t\tlgaln2 as integer,\n\t\tlgalusign as string,\n\t\tlgaguaamt as long,\n\t\tlgaendate as date,\n\t\tlgacrdate as date,\n\t\tlgacrcode as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> source2\nsource1, source2 join(peapeaid == lgareceiver,\n\tjoinType:'inner',\n\tbroadcast: 'none')~> Join1\nJoin1 derive(gut_key = lgalgaid,\n\t\tgut_guarantee_type_desc = case(lgacrcode== 'C', 'Provided Guarantee', case(lgacrcode == 'R','Received Guarantee','Received Counter Guarantee' ) ),\n\t\tgut_guarantee_type_code = lgacrcode,\n\t\tgut_guarantee_status = case(lgastatus== 'A', 'Open', case(lgastatus == 'R','Closed','Closed' ) ),\n\t\tgut_inc_key = lgalcaid,\n\t\tgut_open_ind = case(lgastatus== 'A', 'Y', case(lgastatus == 'R','N','N' ) )\r\n) ~> DerivedColumn1"
		}
	}
}